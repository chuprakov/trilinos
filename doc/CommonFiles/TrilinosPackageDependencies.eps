%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Trilinos Package Dependencies)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 17:05:32 08/26/03
%%For: (mheroux)
%%DocumentData: Clean7Bit
%%BoundingBox: 37 37 755 575
%%HiResBoundingBox: 37.0 37.0 755.0 575.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRomanPSMT
[/N25/TimesNewRomanPSMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1469 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:6045f2e5-0f89-4821-a159-4809be2348b8' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Company='Sandia National Laboratories' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:6045f2e5-0f89-4821-a159-4809be2348b8' xmlns:pdfx='http://ns.adobe.com/pdfx/1.3/' pdfx:Company='Sandia National Laboratories'/>
<rdf:Description rdf:about='uuid:6045f2e5-0f89-4821-a159-4809be2348b8' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='Acrobat PDFMaker 6.0 for PowerPoint' xap:ModifyDate='2003-08-26T17:05:11-05:00' xap:CreateDate='2003-08-26T17:05:06-05:00' xap:MetadataDate='2003-08-26T17:05:11-05:00'></rdf:Description>
<rdf:Description rdf:about='uuid:6045f2e5-0f89-4821-a159-4809be2348b8' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:d385ff77-a20e-4f2a-a551-fb5195172b25'/>
<rdf:Description rdf:about='uuid:6045f2e5-0f89-4821-a159-4809be2348b8' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Trilinos Package Dependencies</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>mheroux</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
37 37 718 538 rectclip
[ 0 -1 1 0 0 612 ] concat
/N26 [/DeviceRGB] /ColorSpace defineRes pop

37.0 37.0 538.0 718.0 re
W
n
q
0.0 10.12842 -10.02 0.0 46.019989 36.000019 cm
0.0 0.0 0.0 setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 71 def
/ImageMatrix [25.0 0.0 0.0 -71.0 0.0 71.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
25 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
Q
Q
n
60.029999 105.149986 38.040009 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -38.10001 0.0 98.099991 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 40 def
/ImageMatrix [47.0 0.0 0.0 -40.0 0.0 40.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E000000000000
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E000000000000
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E000000000000
Q
Q
0.0 sg
73.200012 211.979996 m
/N25 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(Depends)
[7.253582 4.468022 5.02914 4.468022 5.02914 5.02914 3.916996 ] pdfys
87.599792 223.3797 m
(On)
[7.258492 5.03405 ] pdfys
n
60.029999 309.149994 38.040009 41.940002 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 42.0 -38.10001 0.0 98.099991 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 40 def
/ImageMatrix [44.0 0.0 0.0 -40.0 0.0 40.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
1F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3
E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C
7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F80
1F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3
E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C
7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F80
1F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3
E3E3E3E0C7C7C7C7C7C08F8F8F8F8F80
Q
Q
0.0 sg
73.200012 450.899963 m
(Can)
[6.668387 4.433854 4.994972 ] pdfys
87.599792 450.960083 m
(Use)
[7.216408 3.879822 4.430848 ] pdfys
89.999603 55.260117 m
(Package)
[5.579036 4.4568 4.4568 5.017918 4.4568 5.017918 4.4568 ] pdfys
111.359238 114.420288 m
(Epetr)
[6.121045 5.0089 4.447782 2.784458 3.335485 ] pdfys
111.359238 136.202423 m
(a) show
111.359238 162.423706 m
(Epetr)
[6.121045 5.0089 4.447782 2.784458 3.335485 ] pdfys
111.359238 184.205856 m
(a) show
123.359207 168.600403 m
(Ext)
[6.137177 5.025032 2.80059 ] pdfys
111.359238 209.100266 m
(AztecOO)
[7.249475 4.463914 2.80059 4.463914 4.463914 7.249475 7.249475 ] pdfys
111.359238 263.429413 m
(K) show
111.359238 270.687836 m
(om)
[5.025032 7.810592 ] pdfys
111.359238 283.394135 m
(plex)
[5.025032 2.80059 4.463914 5.025032 ] pdfys
111.359238 317.22348 m
(Ifpack)
[3.351617 3.351617 5.025032 4.463914 4.463914 5.025032 ] pdfys
111.359238 358.939484 m
(A) show
111.359238 366.197937 m
(m) show
111.359238 373.939331 m
(e) show
111.359238 378.381165 m
(sos)
[3.912888 5.025032 3.912888 ] pdfys
111.359238 406.577301 m
(M) show
111.359238 415.455994 m
(L) show
111.359238 442.157257 m
(NOX)
[7.249475 7.249475 7.249475 ] pdfys
111.359238 487.494629 m
(TS)
[6.137177 5.58615 ] pdfys
111.359238 499.149811 m
(F) show
111.359238 504.667755 m
( C)
[2.520031 6.698448 ] pdfys
111.359238 513.787903 m
(o) show
111.359238 518.827881 m
(re)
[3.351617 4.463914 ] pdfys
111.359238 547.260559 m
(TS)
[6.137177 5.58615 ] pdfys
111.359238 558.915771 m
(F) show
111.359238 564.433716 m
( Ex)
[2.520031 6.137177 5.025032 ] pdfys
111.359238 578.070801 m
(t) show
111.359238 600.692932 m
(B) show
111.359238 607.353149 m
(elos)
[4.463914 2.80059 5.025032 3.912888 ] pdfys
111.359238 641.300781 m
(M) show
111.359238 650.179443 m
(e) show
111.359238 654.621216 m
(ros)
[3.351617 5.025032 3.912888 ] pdfys
n
350.910004 477.149963 26.279999 59.940002 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 60.0 -26.34 0.0 377.219971 477.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 27 def
/ImageMatrix [62.999996 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
63 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 8 string put
imagemask
0000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
0000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
0000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
0000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
Q
Q
n
377.25 477.149963 26.339996 59.940002 re
f
q
0.0 60.0 -26.39999 0.0 403.619965 477.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 28 def
/ImageMatrix [62.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
63 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 8 string put
imagemask
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6

Q
Q
n
403.649994 477.149963 26.339996 59.940002 re
f
q
0.0 60.0 -26.39999 0.0 430.019958 477.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 28 def
/ImageMatrix [62.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
63 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 8 string put
imagemask
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6

Q
Q
n
430.049988 477.149963 26.279999 59.940002 re
f
q
0.0 60.0 -26.34 0.0 456.359985 477.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 27 def
/ImageMatrix [62.999996 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
63 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 8 string put
imagemask
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
Q
Q
n
456.389954 477.149963 26.339996 59.940002 re
f
q
0.0 60.0 -26.39999 0.0 482.759979 477.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 28 def
/ImageMatrix [62.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
63 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 8 string put
imagemask
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F6
F7F7F7F7F7F7F7F6F7F7F7F7F7F7F7F60000000000000000F7F7F7F7F7F7F7F6

Q
Q
n
377.25 537.149963 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 403.619965 537.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFD00000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD0000000000
0000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD00000000000000FDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFD
Q
Q
n
403.649994 537.149963 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 430.019958 537.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDFD00000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD00
000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD00000000000000FDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFD00000000000000FDFDFDFDFDFDFDFDFDFD
FDFDFDFD
Q
Q
n
430.049988 537.149963 26.279999 53.940002 re
f
q
0.0 54.0 -26.34 0.0 456.359985 537.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 27 def
/ImageMatrix [55.999996 0.0 0.0 -26.999998 0.0 26.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFD00000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFD00000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD000000000000
00FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
Q
Q
n
403.649994 591.149963 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 430.019958 591.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
FDFDFDFDFDF0000000000000FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFD
FDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0000000000000FDFDFDFD
FDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0
FDFDFDFDFDF0000000000000FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFD
FDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0FDFDFDFDFDF0000000000000FDFDFDFD
FDF0FDFDFDFDFDF0
Q
Q
n
430.049988 591.149963 26.279999 41.940002 re
f
q
0.0 42.0 -26.34 0.0 456.359985 591.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 27 def
/ImageMatrix [44.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F10
Q
Q
n
456.389954 537.149963 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 482.759979 537.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDFDFDFDFDFDFDFDFD00000000000000FDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFD00000000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD0000
0000000000FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD00000000000000FDFDFD
FDFDFDFD
Q
Q
n
323.669983 429.149994 27.180023 47.940002 re
f
q
0.0 48.0 -27.240009 0.0 350.879974 429.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC000000000
000000FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FD
FDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC000000000000000FDFDFDFDFD
FDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFD
FDFDFDFDC0FDFDFDFDFDFDC000000000000000FDFDFDFDFDFDC0FDFDFDFDFDFD
C0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFD
FDFDFDC0
Q
Q
n
456.389954 591.149963 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 482.759979 591.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F
8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1
F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E30
7C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F
8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1
F1F0E3E3E3E3E3E0
Q
Q
n
430.049988 633.149963 26.279999 41.940002 re
f
q
0.0 42.0 -26.34 0.0 456.359985 633.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 27 def
/ImageMatrix [44.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDF
DFDFDFD0000000000000DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDF
DFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0000000000000DFDFDFDFDFD0
DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDF
DFDFDFD0000000000000DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDFDFD0DFDFDFDF
DFD0
Q
Q
n
456.389954 633.149963 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 482.759979 633.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E30
Q
Q
0.0 sg
175.860001 55.259995 m
(Epetr)
[6.128159 5.016014 4.454896 2.791572 3.342599 ] pdfys
175.860001 77.070297 m
(a) show
175.860001 81.512115 m
( Ext)
[2.520031 6.128159 5.016014 2.791572 ] pdfys
n
162.62999 105.149986 26.339996 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.39999 0.0 188.999969 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E
Q
Q
n
162.62999 150.029999 26.339996 51.059998 re
f
q
0.0 51.12001 -26.39999 0.0 188.999969 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000
000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BF
BFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBF
BFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBF
BFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBFBFB8BFBFBFBFBFBF
B8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBF
BFBFBFB8
Q
Q
0.0 sg
469.619995 55.259995 m
(Anasazi)
[7.250476 5.026034 4.464916 3.913889 4.464916 4.464916 2.801592 ] pdfys
n
456.389954 105.149986 26.339996 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.39999 0.0 482.759979 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3
E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C
7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E
1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3
E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C
7C7CF8F8F8F8F8F8
Q
Q
n
456.389954 150.029999 26.339996 51.059998 re
f
q
0.0 51.12001 -26.39999 0.0 482.759979 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
8F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8
F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F
1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1
F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E
3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3
E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C
7C7C7C78
Q
Q
n
456.389954 201.149979 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 482.759979 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F
1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3
E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E
3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7
C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C
7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F
8F8F8F8F
Q
Q
n
456.389954 255.149979 26.339996 53.939987 re
f
q
0.0 54.0 -26.39999 0.0 482.759979 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F
1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3
E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E
3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7
C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C
7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F
8F8F8F8F
Q
Q
n
456.389954 309.149994 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 482.759979 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C
7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F
8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0
E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C
7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F
8F801F1F1F1F1F10
Q
Q
n
456.389954 351.149994 26.339996 47.940002 re
f
q
0.0 48.0 -26.39999 0.0 482.759979 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
1F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1
F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E
3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3
E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C
7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7
C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8
F8F8F8C0
Q
Q
n
456.389954 399.149994 26.339996 29.940002 re
f
q
0.0 30.0 -26.39999 0.0 482.759979 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 28 def
/ImageMatrix [31.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E
7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E
7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E
7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2
Q
Q
n
456.389954 675.149963 26.339996 47.940002 re
f
q
0.0 48.0 -26.39999 0.0 482.759979 675.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
FDFDFDFDFDFDC0FDFDFDFDFDFDC000000000000000FDFDFDFDFDFDC0FDFDFDFD
FDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FD
FDFDFDFDFDC000000000000000FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFD
FDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC00000
0000000000FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFD
C0FDFDFDFDFDFDC0FDFDFDFDFDFDC0FDFDFDFDFDFDC000000000000000FDFDFD
FDFDFDC0
Q
Q
0.0 sg
282.600006 55.259995 m
(Am)
[7.251378 7.812496 ] pdfys
282.600006 70.252808 m
(esos)
[4.465818 3.914791 5.026936 3.914791 ] pdfys
n
269.429993 105.149986 27.059998 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -27.119999 0.0 296.519958 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000
000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000
000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E
Q
Q
n
269.429993 150.029999 27.059998 51.059998 re
f
q
0.0 51.12001 -27.119999 0.0 296.519958 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBF
BFBFB800000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BF
BFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB80000000000
0000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBF
BFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBFBF
B8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBF
BFBFBFB8
Q
Q
n
269.429993 351.149994 27.059998 47.940002 re
f
q
0.0 48.0 -27.119999 0.0 296.519958 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
7F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F
7F7F40000000000000007F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F
7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F400000000000
00007F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F
7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F40000000000000007F7F7F7F7F7F
407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F7F7F7F407F7F7F
7F7F7F40
Q
Q
0.0 sg
364.079987 55.259995 m
(T) show
364.079987 61.381195 m
(SFCo)
[5.507994 5.507994 6.620292 4.946876 ] pdfys
364.079987 84.057388 m
(r) show
364.079987 87.417084 m
(e) show
n
350.910004 105.149986 26.279999 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.34 0.0 377.219971 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 27 def
/ImageMatrix [47.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F
8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1
F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E
7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F
8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1
F1F0
Q
Q
n
350.910004 150.029999 26.279999 51.059998 re
f
q
0.0 51.12001 -26.34 0.0 377.219971 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 27 def
/ImageMatrix [53.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
3E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3
E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C
7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7
C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8
F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F
881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8
Q
Q
n
350.910004 201.149979 26.279999 53.940002 re
f
q
0.0 54.0 -26.34 0.0 377.219971 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 27 def
/ImageMatrix [55.999996 0.0 0.0 -26.999998 0.0 26.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C
7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F
8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8
F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F
1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1
F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F
Q
Q
n
350.910004 255.149979 26.279999 53.939987 re
f
q
0.0 54.0 -26.34 0.0 377.219971 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 27 def
/ImageMatrix [55.999996 0.0 0.0 -26.999998 0.0 26.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C
7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F
8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8
F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F
1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1
F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F
Q
Q
n
350.910004 309.149994 26.279999 41.940002 re
f
q
0.0 42.0 -26.34 0.0 377.219971 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 27 def
/ImageMatrix [44.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
8F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1
F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E
3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C0
8F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1
F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E
3E30
Q
Q
n
350.910004 351.149994 26.279999 47.940002 re
f
q
0.0 48.0 -26.34 0.0 377.219971 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 27 def
/ImageMatrix [50.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
7C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7
C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8
F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F
8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1
F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F
003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0
Q
Q
n
350.910004 399.149994 26.279999 29.940002 re
f
q
0.0 30.0 -26.34 0.0 377.219971 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 27 def
/ImageMatrix [31.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8
F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8
F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8
F1F1F1F0E3E3E3E2C7C7C7C6
Q
Q
0.0 sg
416.880005 55.259995 m
(Belo)
[6.663378 4.428844 2.76552 4.989962 ] pdfys
416.880005 74.157761 m
(s) show
n
403.649994 105.149986 26.339996 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.39999 0.0 430.019958 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7
C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8
F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E
3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7
C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8
F8F8F1F1F1F1F1F0
Q
Q
n
403.649994 150.029999 26.339996 51.059998 re
f
q
0.0 51.12001 -26.39999 0.0 430.019958 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
1F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1
F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E
3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3
E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C
7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7
C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8
F8F8F8F8
Q
Q
n
403.649994 201.149979 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 430.019958 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E
3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7
C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C
7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F
8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8
F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F
1F1F1F1F
Q
Q
n
403.649994 255.149979 26.339996 53.939987 re
f
q
0.0 54.0 -26.39999 0.0 430.019958 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E
3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7
C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C
7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F
8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8
F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F
1F1F1F1F
Q
Q
n
403.649994 309.149994 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 430.019958 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E30
Q
Q
n
403.649994 351.149994 26.339996 47.940002 re
f
q
0.0 48.0 -26.39999 0.0 430.019958 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
3E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3
E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C
7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7
C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8
F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F
801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1
F1F1F1C0
Q
Q
n
403.649994 399.149994 26.339996 29.940002 re
f
q
0.0 30.0 -26.39999 0.0 430.019958 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 28 def
/ImageMatrix [31.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
F8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7C
F8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7C
F8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7C
F8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C6
Q
Q
0.0 sg
443.220001 55.259995 m
(Mer)
[8.889824 4.430848 3.318551 ] pdfys
443.220001 71.940277 m
(o) show
443.220001 76.980331 m
(s) show
n
430.049988 105.149986 26.279999 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.34 0.0 456.359985 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 27 def
/ImageMatrix [47.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E
3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7
C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8
F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E
3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7
C7C6
Q
Q
n
430.049988 150.029999 26.279999 51.059998 re
f
q
0.0 51.12001 -26.34 0.0 456.359985 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 27 def
/ImageMatrix [53.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F
8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1
F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F
1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3
E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E
387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0
Q
Q
n
430.049988 201.149979 26.279999 53.940002 re
f
q
0.0 54.0 -26.34 0.0 456.359985 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 27 def
/ImageMatrix [55.999996 0.0 0.0 -26.999998 0.0 26.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1
F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E
3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3
E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C
7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7
C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7C
Q
Q
n
430.049988 255.149979 26.279999 53.939987 re
f
q
0.0 54.0 -26.34 0.0 456.359985 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 27 def
/ImageMatrix [55.999996 0.0 0.0 -26.999998 0.0 26.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1
F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E
3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3
E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C
7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7
C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7C
Q
Q
n
430.049988 309.149994 26.279999 41.940002 re
f
q
0.0 42.0 -26.34 0.0 456.359985 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 27 def
/ImageMatrix [44.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
3E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7
C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8
F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F10
3E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7
C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8
F8F0
Q
Q
n
430.049988 351.149994 26.279999 47.940002 re
f
q
0.0 48.0 -26.34 0.0 456.359985 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 27 def
/ImageMatrix [50.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F
1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3
E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E
3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7
C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C
40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C0
Q
Q
n
430.049988 399.149994 26.279999 29.940002 re
f
q
0.0 30.0 -26.34 0.0 456.359985 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 27 def
/ImageMatrix [31.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2
C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2
C7C7C7C68F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2
C7C7C7C68F8F8F8E1F1F1F1E
Q
Q
n
296.549988 351.149994 27.059998 47.940002 re
f
q
0.0 48.0 -27.119999 0.0 323.639954 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
3E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3
E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C
7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7
C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8
F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F
801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1
F1F1F1C0
Q
Q
n
323.669983 351.149994 27.180023 47.940002 re
f
q
0.0 48.0 -27.240009 0.0 350.879974 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C
7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F
8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8
F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F
1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1
C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E
3E3E3E00
Q
Q
n
377.25 351.149994 26.339996 47.940002 re
f
q
0.0 48.0 -26.39999 0.0 403.619965 351.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 28 def
/ImageMatrix [50.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
50 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E
3E3E007C7C7C7C7C7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7
C7C7C7C7C7C08F8F8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C
7C40F8F8F8F8F8F8C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F
8F8F8F8F801F1F1F1F1F1F003E3E3E3E3E3E007C7C7C7C7C7C40F8F8F8F8F8F8
C0F1F1F1F1F1F1C0E3E3E3E3E3E3C0C7C7C7C7C7C7C08F8F8F8F8F8F801F1F1F
1F1F1F00
Q
Q
n
296.549988 399.149994 27.059998 29.940002 re
f
q
0.0 30.0 -27.119999 0.0 323.639954 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 28 def
/ImageMatrix [31.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
FDFDFDFC00000000FDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFC
FDFDFDFC00000000FDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFC
FDFDFDFC00000000FDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFCFDFDFDFC
FDFDFDFC00000000FDFDFDFCFDFDFDFC
Q
Q
n
323.669983 399.149994 27.180023 29.940002 re
f
q
0.0 30.0 -27.240009 0.0 350.879974 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 28 def
/ImageMatrix [31.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E
1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E
1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C68F8F8F8E
1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8
Q
Q
n
377.25 399.149994 26.339996 29.940002 re
f
q
0.0 30.0 -26.39999 0.0 403.619965 399.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 28 def
/ImageMatrix [31.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
31 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 4 string put
imagemask
8F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C6
8F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C6
8F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7CF8F8F8F8F1F1F1F0E3E3E3E2C7C7C7C6
8F8F8F8E1F1F1F1E3E3E3E3E7C7C7C7C
Q
Q
n
189.029999 201.149979 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 215.399979 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F7F7F7F7F7F7F700000000000000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F700
000000000000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F700000000000000F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F700000000000000F7F7F7F7F7F7F7F7F7F7
F7F7F7F7
Q
Q
n
215.429977 201.149979 26.940002 53.940002 re
f
q
0.0 54.0 -27.0 0.0 242.399979 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F700000000000000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F70000000000
0000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F700000000000000F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7
Q
Q
n
296.549988 201.149979 m
296.549988 255.089996 l
323.609985 255.089996 l
323.609985 201.149979 l
eofill
q
0.0 54.0 -27.119999 0.0 323.639954 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E
3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7
C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C
7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F
8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8
F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F
1F1F1F1F
Q
Q
n
323.669983 201.149979 m
323.669983 255.089996 l
350.850006 255.089996 l
350.850006 201.149979 l
eofill
q
0.0 54.0 -27.240009 0.0 350.879974 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7
C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8
F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F
8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1
F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F
1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3
E3E3E3E3
Q
Q
n
377.25 201.149979 26.339996 53.940002 re
f
q
0.0 54.0 -26.39999 0.0 403.619965 201.12001 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3
E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C
7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7
C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8
F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F
8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1
F1F1F1F1
Q
Q
n
242.429977 309.149994 26.939987 41.940002 re
f
q
0.0 42.0 -27.0 0.0 269.399994 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
EFEFEFEFEFE0000000000000EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEF
EFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0000000000000EFEFEFEF
EFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0
EFEFEFEFEFE0000000000000EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEF
EFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0EFEFEFEFEFE0000000000000EFEFEFEF
EFE0EFEFEFEFEFE0
Q
Q
n
296.549988 309.149994 27.059998 41.940002 re
f
q
0.0 42.0 -27.119999 0.0 323.639954 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0
C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8
F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F
1F103E3E3E3E3E30
Q
Q
n
323.669983 309.149994 27.180023 41.940002 re
f
q
0.0 42.0 -27.240009 0.0 350.879974 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F
1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3
E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70
F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F
1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3
E3E0C7C7C7C7C7C0
Q
Q
n
377.25 309.149994 26.339996 41.940002 re
f
q
0.0 42.0 -26.39999 0.0 403.619965 309.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 28 def
/ImageMatrix [44.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
44 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F
8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1
F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F8F8F8F801F1F1F1F1F103E3E3E3E3E30
7C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1F1F0E3E3E3E3E3E0C7C7C7C7C7C08F8F
8F8F8F801F1F1F1F1F103E3E3E3E3E307C7C7C7C7C70F8F8F8F8F8F0F1F1F1F1
F1F0E3E3E3E3E3E0
Q
Q
0.0 sg
111.360001 682.919983 m
(Anasazi)
[7.250476 5.026034 4.464916 3.913889 4.464916 4.464916 2.801592 ] pdfys
149.460052 55.259888 m
(Epetr)
[6.121045 5.0089 4.447782 2.784458 3.335485 ] pdfys
149.460052 77.042038 m
(a) show
n
136.289993 105.149986 26.279999 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.34 0.0 162.599976 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 27 def
/ImageMatrix [47.0 0.0 0.0 -27.0 0.0 27.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E
0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F
7F7E
Q
Q
0.0 sg
202.199997 55.259995 m
(AztecOO)
[7.255587 4.470026 2.806702 4.470026 4.470026 7.255587 7.255587 ] pdfys
n
189.029999 105.149986 26.339996 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.39999 0.0 215.399979 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E
7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F
7F7E7F7F7F7F7F7E
Q
Q
n
189.029999 150.029999 26.339996 51.059998 re
f
q
0.0 51.12001 -26.39999 0.0 215.399979 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
BFBFBFBFBFBFB800000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBF
BFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800
000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBF
BFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBF
BFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBF
B8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBFBFB8BFBFBF
BFBFBFB8
Q
Q
0.0 sg
228.600006 55.259995 m
(Kom)
[7.240456 5.016014 7.801574 ] pdfys
228.600006 75.197647 m
(p) show
228.600006 80.237671 m
(lex)
[2.791572 4.454896 5.016014 ] pdfys
n
215.429977 105.149986 26.940002 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -27.0 0.0 242.399979 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000
000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E
7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000
000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F
7F7E7F7F7F7F7F7E
Q
Q
n
215.429977 150.029999 26.940002 51.059998 re
f
q
0.0 51.12001 -27.0 0.0 242.399979 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBF
BFBFB800000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BF
BFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB80000000000
0000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBF
BFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBFBF
B8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBF
BFBFBFB8
Q
Q
n
215.429977 255.149979 26.940002 53.939987 re
f
q
0.0 54.0 -27.0 0.0 242.399979 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F700000000000000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F70000000000
0000F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F700000000000000F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7
Q
Q
0.0 sg
309.720001 55.259995 m
(ML)
[8.878801 6.093089 ] pdfys
n
296.549988 105.149986 27.059998 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -27.119999 0.0 323.639954 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7
C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8
F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E
3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7
C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8
F8F8F1F1F1F1F1F0
Q
Q
n
296.549988 150.029999 27.059998 51.059998 re
f
q
0.0 51.12001 -27.119999 0.0 323.639954 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
1F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1
F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E
3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3
E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C
7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7
C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8
F8F8F8F8
Q
Q
0.0 sg
390.47998 55.259995 m
(T) show
390.47998 61.381271 m
(SF E)
[5.518115 5.518115 2.520231 6.069141 ] pdfys
390.47998 81.058807 m
(x) show
390.47998 86.038803 m
(t) show
n
377.25 105.149986 26.339996 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -26.39999 0.0 403.619965 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C
7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F
8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0
E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C
7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F
8F8E1F1F1F1F1F1E
Q
Q
n
377.25 150.029999 26.339996 51.059998 re
f
q
0.0 51.12001 -26.39999 0.0 403.619965 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F
1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3
E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E
3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7
C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C
78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F
8F8F8F88
Q
Q
n
377.25 255.149979 26.339996 53.939987 re
f
q
0.0 54.0 -26.39999 0.0 403.619965 255.119995 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 28 def
/ImageMatrix [55.999996 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
56 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3
E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C
7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7
C7C78F8F8F8F8F8F8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8
F8F8F8F8F8F1F1F1F1F1F1F1E3E3E3E3E3E3E3C7C7C7C7C7C7C78F8F8F8F8F8F
8F1F1F1F1F1F1F1F3E3E3E3E3E3E3E7C7C7C7C7C7C7CF8F8F8F8F8F8F8F1F1F1
F1F1F1F1
Q
Q
0.0 sg
255.600006 55.259995 m
(Ifpack)
[3.360635 3.360635 5.03405 4.472932 4.472932 5.03405 ] pdfys
n
242.429977 105.149986 26.939987 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -27.0 0.0 269.399994 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F
7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E
7F7F7F7F7F7E0000000000007F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F
7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E7F7F7F7F7F7E0000000000007F7F7F7F
7F7E7F7F7F7F7F7E
Q
Q
n
242.429977 150.029999 26.939987 51.059998 re
f
q
0.0 51.12001 -27.0 0.0 269.399963 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
BFBFBFBFBFBFB800000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBF
BFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800
000000000000BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBF
BFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBF
BFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBFB8BFBFBFBFBFBF
B8BFBFBFBFBFBFB8BFBFBFBFBFBFB800000000000000BFBFBFBFBFBFB8BFBFBF
BFBFBFB8
Q
Q
0.0 sg
336.839996 55.259995 m
(NOX)
[7.258492 7.258492 7.258492 ] pdfys
n
323.669983 105.149986 27.180023 44.820015 re
1.0 1.0 1.0 setrgbcolor
f
q
0.0 44.879997 -27.240009 0.0 350.879974 105.120026 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 28 def
/ImageMatrix [47.0 0.0 0.0 -28.0 0.0 28.0]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
47 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8
F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F
1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2
C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F1F1E3E3E3E3E3E3E7C7C7C7C7C7CF8F8
F8F8F8F8F1F1F1F1F1F0E3E3E3E3E3E2C7C7C7C7C7C68F8F8F8F8F8E1F1F1F1F
1F1E3E3E3E3E3E3E
Q
Q
n
323.669983 150.029999 27.180023 51.059998 re
f
q
0.0 51.12001 -27.240009 0.0 350.879974 150.000015 cm
0.0 0.0 0.0  setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 28 def
/ImageMatrix [53.0 0.0 0.0 -27.999998 0.0 27.999998]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
53 28 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 7 string put
imagemask
E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E
3E3E387C7C7C7C7C7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7
C7C7C7C7C7C08F8F8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C
7C78F8F8F8F8F8F8F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F
8F8F8F8F881F1F1F1F1F1F183E3E3E3E3E3E387C7C7C7C7C7C78F8F8F8F8F8F8
F8F1F1F1F1F1F1F0E3E3E3E3E3E3E0C7C7C7C7C7C7C08F8F8F8F8F8F881F1F1F
1F1F1F18
Q
Q
2.22 w
1 j
2 J
n
60.0 48.0 m
60.0 723.119995 l
0.0 sg
S
1.02 w
0 J
n
136.259979 48.0 m
136.259979 105.119995 l
162.600006 48.0 m
162.600006 105.119995 l
215.400009 48.0 m
215.400009 723.119995 l
S
2.22 w
2 J
n
482.759979 48.0 m
482.759979 723.119995 l
60.0 48.0 m
482.759979 48.0 l
S
1.02 w
0 J
n
60.0 105.119995 m
136.259979 105.119995 l
S
2.22 w
2 J
n
60.0 723.119995 m
482.759979 723.119995 l
S
1.02 w
0 J
n
269.399994 48.0 m
269.399994 723.119995 l
242.400009 48.0 m
242.400009 723.119995 l
323.639984 48.0 m
323.639984 723.119995 l
350.880005 48.0 m
350.880005 723.119995 l
60.0 150.0 m
136.259979 150.0 l
60.0 309.119995 m
482.759979 309.119995 l
60.0 351.119995 m
482.759979 351.119995 l
136.259979 150.0 m
136.259979 723.119995 l
S
2 J
n
136.259979 105.119995 m
136.259979 150.0 l
S
0 J
n
162.600006 105.119995 m
482.759979 105.119995 l
S
2 J
n
136.259979 105.119995 m
162.600006 105.119995 l
S
0 J
n
162.600006 150.0 m
482.759979 150.0 l
S
2 J
n
136.259979 150.0 m
162.600006 150.0 l
S
0 J
n
162.600006 150.0 m
162.600006 723.119995 l
S
2 J
n
162.600006 105.119995 m
162.600006 150.0 l
S
0 J
n
296.519989 48.0 m
296.519989 723.119995 l
377.220001 48.0 m
377.220001 723.119995 l
403.619995 48.0 m
403.619995 723.119995 l
430.019989 48.0 m
430.019989 723.119995 l
189.0 48.0 m
189.0 723.119995 l
456.359985 48.0 m
456.359985 723.119995 l
98.100006 105.119995 m
98.100006 723.119995 l
98.100006 201.119995 m
482.759979 201.119995 l
98.100006 399.119995 m
482.759979 399.119995 l
98.100006 429.119995 m
482.759979 429.119995 l
98.100006 537.119995 m
482.759979 537.119995 l
98.100006 591.119995 m
482.759979 591.119995 l
98.100006 633.119995 m
482.759979 633.119995 l
98.100006 675.119995 m
482.759979 675.119995 l
98.100006 255.119995 m
482.759979 255.119995 l
98.100006 477.119995 m
482.759979 477.119995 l
S
0.72 w
1 J
n
96.0 72.0 m
124.259987 72.0 l
S
n
124.139999 68.100006 m
132.0 72.0 l
124.139999 75.960007 l
eofill
n
78.0 210.0 m
78.0 157.73999 l
S
n
74.100006 157.919998 m
78.0 150.0 l
81.960007 157.919998 l
eofill
n
78.0 444.0 m
78.0 361.73999 l
S
n
74.100006 361.919983 m
78.0 354.0 l
81.960007 361.919983 l
eofill
524.879883 73.26001 m
/N25 [0.0 13.979996 -13.979996 0.0 0.0 0.0] Tf
(Bas)
[9.334547 6.216908 5.44811 ] pdfys
524.879883 94.329346 m
(ed on t)
[6.216908 6.999784 3.479621 6.999784 6.999784 3.479621 3.896223 ] pdfys
524.879883 132.466934 m
(h) show
524.879883 139.486328 m
(is ch)
[3.896223 5.44811 3.479621 6.216908 6.999784 ] pdfys
524.879883 165.606659 m
(art:)
[6.216908 4.66502 3.896223 3.896223 ] pdfys
541.619568 73.26001 m
(\225) show
541.619568 81.599167 m
(A) show
541.619568 91.737564 m
(zt)
[6.208659 3.887975 ] pdfys
541.619568 101.908203 m
(ecOO dep)
[6.208659 6.208659 10.095096 10.095096 3.492203 6.991535 6.208659 6.991535 ] pdfys
541.619568 158.287399 m
(e) show
541.619568 164.469467 m
(nds o)
[6.991535 6.991535 5.439862 3.492203 6.991535 ] pdfys
541.619568 194.463928 m
(n) show
541.619568 201.483398 m
( Epetra, b)
[3.492203 8.543209 6.991535 6.208659 3.887975 4.656772 6.208659 3.496537 3.492203 6.991535 ] pdfys
541.619568 255.540649 m
(u) show
541.619568 262.560089 m
(t Ep)
[3.887975 3.492203 8.543209 6.991535 ] pdfys
541.619568 285.599304 m
(etra is independent of AztecOO)
[6.219704 3.899019 4.667817 6.219704 3.479621 3.899019 5.450906 3.479621 3.899019 7.002579 7.002579 
6.219704 7.002579 6.219704 7.002579 7.002579 6.219704 7.002579 3.899019 3.479621 7.002579 4.667817 
3.479621 10.10614 6.219704 3.899019 6.219704 6.219704 10.10614 10.10614 ] pdfys
558.359253 73.26001 m
(\225) show
558.359253 81.599182 m
(NOX can use Epetra, but is)
[10.107678 10.107678 10.107678 3.503527 6.221241 6.221241 7.004117 3.503527 7.004117 5.452444 6.221241 
3.503527 8.555792 7.004117 6.221241 3.900557 4.669354 6.221241 3.509119 3.503527 7.004117 7.004117 
3.900557 3.503527 3.900557 5.452444 ] pdfys
558.359253 234.959579 m
( indep)
[3.479621 3.892029 6.99559 6.99559 6.212714 6.99559 ] pdfys
558.359253 269.61438 m
(e) show
558.359253 275.796295 m
(nd)
[6.99559 6.99559 ] pdfys
558.359253 289.871277 m
(ent of Epetra.)
[6.212714 6.99559 3.892029 3.479621 6.99559 4.660827 3.479621 8.547264 6.99559 6.212714 3.892029 
4.660827 6.212714 3.500591 ] pdfys
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRomanPSMT
%%EOF
