INCLUDE(Parse_Variable_Arguments)
INCLUDE(Global_Set)
INCLUDE(Append_Set)
INCLUDE(Append_Global_Set)
INCLUDE(Remove_Global_Duplicates)


MACRO(TRILINOS_PACKAGE_CONFIGURE_FILE PACKAGE_NAME_CONFIG_FILE)

  IF (Trilinos_VERBOSE_CONFIGURE)
    MESSAGE("\nTRILINOS_PACKAGE_CONFIGURE_FILE: ${PACKAGE_NAME_CONFIG_FILE}")
  ENDIF()

  CONFIGURE_FILE(
    ${PACKAGE_SOURCE_DIR}/cmake/${PACKAGE_NAME_CONFIG_FILE}.in 
    ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME_CONFIG_FILE}
    )

  INSTALL(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME_CONFIG_FILE}
    DESTINATION ${TRILINOS_INSTALL_LIB_INCLUDE_DIR}
    COMPONENT ${PACKAGE_NAME}
    )

ENDMACRO()


MACRO(TRILINOS_PACKAGE_ADD_LIBRARY LIBRARY_NAME)

  IF (Trilinos_VERBOSE_CONFIGURE)
    MESSAGE("\nTRILINOS_PACKAGE_ADD_LIBRARY: ${LIBRARY_NAME}")
  ENDIF()

  PARSE_ARGUMENTS(
    PARSE #prefix
    "HEADERS;NOINSTALLHEADERS;SOURCES;DEPLIBS" # Lists
    "" #Options
    ${ARGN} # Remaining arguments passed in
    )

  # Add the link directory for this library.

  LINK_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

  # NOTE: Above , this link path not really used here for anything.
  # Instead it is just added to the other set link library directories
  # that are already set.  These link directories are then extracted
  # and stored into stored in ${PACKAGE_NAME}_LIBRARY_DIRS.

  # Add whatever include directories have been defined so far

  INCLUDE_DIRECTORIES(AFTER ${${PACKAGE_NAME}_INCLUDE_DIRS})

  # Add whatever link directories have been added so far

  LINK_DIRECTORIES(${${PACKAGE_NAME}_LIBRARY_DIRS})
  LINK_DIRECTORIES(${${PACKAGE_NAME}_TEST_LIBRARY_DIRS})

  # Add dependent libraries in dependent

  IF (PARSE_DEPLIBS AND Trilinos_VERBOSE_CONFIGURE)
    MESSAGE(STATUS "DEPLIBS = ${PARSE_DEPLIBS}")
  ENDIF()

  # Add the library and all the dependencies

  ADD_LIBRARY(${LIBRARY_NAME} ${PARSE_HEADERS} ${PARSE_NOINSTALLHEADERS}
    ${PARSE_SOURCES})

  # Add whatever link libraries there are

  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${${PACKAGE_NAME}_LIBRARIES})
  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${${PACKAGE_NAME}_TEST_LIBRARIES})

  SET(EXTRA_DEP_LIBS)

  IF (PARSE_DEPLIBS)
    APPEND_SET(EXTRA_DEP_LIBS ${PARSE_DEPLIBS})
  ENDIF()

  IF (Trilinos_ENABLE_MPI)
    APPEND_SET(EXTRA_DEP_LIBS ${MPI_LIBRARY} ${MPI_EXTRA_LIBRARY})
    INCLUDE_DIRECTORIES(AFTER ${MPI_INCLUDE_DIRS})
    # 2008/11/21: rabartl: ToDo: Above: We need to replace this with a
    # general TPL capability.
  ENDIF()

  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${EXTRA_DEP_LIBS})
  
  # Add to the install target

  INSTALL(
    TARGETS ${LIBRARY_NAME}
      RUNTIME DESTINATION bin
      LIBRARY DESTINATION lib
      ARCHIVE DESTINATION lib
    COMPONENT ${PACKAGE_NAME}
    )
  
  INSTALL(
    FILES ${PARSE_HEADERS}
    DESTINATION ${TRILINOS_INSTALL_INCLUDE_DIR}
    COMPONENT ${PACKAGE_NAME}
    )

  # Append the new include dirs, library dirs, and libraries 

  GET_DIRECTORY_PROPERTY(INCLUDE_DIRS_CURRENT INCLUDE_DIRECTORIES)
  APPEND_GLOBAL_SET(${PACKAGE_NAME}_INCLUDE_DIRS ${INCLUDE_DIRS_CURRENT})

  GET_DIRECTORY_PROPERTY(LIBRARY_DIRS_CURRENT LINK_DIRECTORIES)
  APPEND_GLOBAL_SET(${PACKAGE_NAME}_LIBRARY_DIRS ${LIBRARY_DIRS_CURRENT})

  APPEND_GLOBAL_SET(${PACKAGE_NAME}_LIBRARIES ${LIBRARY_NAME})

  REMOVE_GLOBAL_DUPLICATES(${PACKAGE_NAME}_INCLUDE_DIRS)
  REMOVE_GLOBAL_DUPLICATES(${PACKAGE_NAME}_LIBRARY_DIRS)
  REMOVE_GLOBAL_DUPLICATES(${PACKAGE_NAME}_LIBRARIES)

  IF (Trilinos_VERBOSE_CONFIGURE)
    PRINT_VAR(${PACKAGE_NAME}_INCLUDE_DIRS)
    PRINT_VAR(${PACKAGE_NAME}_LIBRARY_DIRS)
    PRINT_VAR(${PACKAGE_NAME}_LIBRARIES)
  ENDIF()

  # 2008/11/21: rabartl: ToDo: Above: Generalize this for test-only
  # libraries!

ENDMACRO()


MACRO(TRILINOS_PACKAGE_EXPORT_DEPENDENCY_VARIABLES)
  # 2008/11/21: rabartl: ToDo: Get rid if this!
ENDMACRO()
