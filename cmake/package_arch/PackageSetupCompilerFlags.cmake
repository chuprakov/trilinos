
INCLUDE(PackageArchSetupStrongCompileWarnings)
INCLUDE(PrependCmndlineArgs)



MACRO(PACKAGE_APPLY_WARNINGS_AS_ERROR_FLAGS_LANG LANG)
  PREPEND_CMNDLINE_ARGS(CMAKE_${LANG}_FLAGS
    "${${PROJECT_NAME}_WARNINGS_AS_ERRORS_FLAGS}") 
  IF (${PROJECT_NAME}_VERBOSE_CONFIGURE)
    MESSAGE(STATUS "Setting up for ${LANG} warnings as errors just in this package ...")
    PRINT_VAR(CMAKE_${LANG}_FLAGS)
  ENDIF()
ENDMACRO()


#
# Macro that sets up compiler flags for a package
#
# This CMake code is broken out in order to allow it to be unit tested.
#

MACRO(PACKAGE_SETUP_COMPILER_FLASGS)

  # Set up strong warning flags

  IF (NOT PARSE_DISABLE_STRONG_WARNINGS)
    PACKAGE_ARCH_SETUP_STRONG_COMPILE_WARNINGS(${PARSE_ENABLE_SHADOWING_WARNINGS})
  ENDIF()

  # Set up for warnings as errors if requested

  ASSERT_DEFINED(PARSE_CLEANED)

  ASSERT_DEFINED(${PROJECT_NAME}_ENABLE_C ${PROJECT_NAME}_ENABLE_C_DEBUG_COMPILE_FLAGS)
  IF (PARSE_CLEANED AND ${PROJECT_NAME}_ENABLE_STRONG_C_COMPILE_WARNINGS)
    PACKAGE_APPLY_WARNINGS_AS_ERROR_FLAGS_LANG(C)
  ENDIF()

  ASSERT_DEFINED(${PROJECT_NAME}_ENABLE_CXX ${PROJECT_NAME}_ENABLE_CXX_DEBUG_COMPILE_FLAGS)
  IF (PARSE_CLEANED AND ${PROJECT_NAME}_ENABLE_STRONG_CXX_COMPILE_WARNINGS)
    PACKAGE_APPLY_WARNINGS_AS_ERROR_FLAGS_LANG(CXX)
  ENDIF()

  IF (${PROJECT_NAME}_VERBOSE_CONFIGURE)
    MESSAGE("Final compiler flags")
    PRINT_VAR(CMAKE_CXX_FLAGS)
    PRINT_VAR(CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE})
    PRINT_VAR(CMAKE_C_FLAGS)
    PRINT_VAR(CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE})
    PRINT_VAR(CMAKE_Fortran_FLAGS)
    PRINT_VAR(CMAKE_Fortran_FLAGS_${CMAKE_BUILD_TYPE})
  ENDIF()

ENDMACRO()
