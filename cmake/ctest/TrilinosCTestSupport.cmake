#
# Helper macros
#


FUNCTION(PRINT_VAR VAR)
  MESSAGE("${VAR} = '${${VAR}}'")
ENDFUNCTION()



MACRO(SET_DEFAULT VAR DEFAULT_VAL)
  
  IF ("${${VAR}}" STREQUAL "")
    SET(${VAR} ${DEFAULT_VAL})
  ENDIF()

ENDMACRO()


MACRO(SET_DEFAULT_AND_FROM_ENV VAR DEFAULT_VAL)
  
  SET_DEFAULT(${VAR} ${DEFAULT_VAL})
  
  SET(ENV_${VAR} $ENV{${VAR}})
  IF (ENV_${VAR})
    PRINT_VAR(ENV_${VAR})
    SET(${VAR} ${ENV_${VAR}})
  ENDIF()

  PRINT_VAR(${VAR})

ENDMACRO()


#
# Default varaible settings
#

SET( CTEST_SOURCE_NAME Trilinos )
SET( CTEST_BINARY_NAME BUILD )

SET( CTEST_CVS_CHECKOUT
  "${CTEST_CVS_COMMAND} -d :ext:software.sandia.gov:/space/CVS co ${CTEST_SOURCE_NAME}"
  )

SET( BUILD_DIR_NAME "${BUILD_NAME}-${BUILD_TYPE}" )

SET( CTEST_DASHBOARD_ROOT
  "${CTEST_SCRIPT_DIRECTORY}/../${BUILD_DIR_NAME}"
  )

SET( CTEST_SOURCE_DIRECTORY
  "${CTEST_DASHBOARD_ROOT}/${CTEST_SOURCE_NAME}"
  )
SET( CTEST_BINARY_DIRECTORY
  "${CTEST_DASHBOARD_ROOT}/${CTEST_BINARY_NAME}")

SET( CTEST_NOTES_FILES_DEFAULT
  "${CTEST_BINARY_DIRECTORY}/CMakeCache.txt"
  "${CTEST_SCRIPT_DIRECTORY}/${CTEST_SCRIPT_NAME}"
  )

SET_DEFAULT_AND_FROM_ENV( CTEST_TEST_TYPE Nightly)

SET_DEFAULT_AND_FROM_ENV( CTEST_START_WITH_EMPTY_BINARY_DIRECTORY TRUE )

SET_DEFAULT_AND_FROM_ENV( CTEST_DUAL_CONFIGURE FALSE )

SET_DEFAULT_AND_FROM_ENV( CTEST_DO_COVERAGE_TESTING FALSE )

SET_DEFAULT_AND_FROM_ENV( CTEST_DO_MEMORY_TESTING FALSE )

# Get the host type

FIND_PROGRAM(UNAME_EXE NAMES uname)
EXECUTE_PROCESS(
  COMMAND ${UNAME_EXE}
  OUTPUT_VARIABLE HOST_TYPE
  OUTPUT_STRIP_TRAILING_WHITESPACE
  )

#
# Create the dashboard root directory if it does not already exist
#

IF (NOT EXISTS "${CTEST_DASHBOARD_ROOT}")
  MESSAGE("Creating the directory \"${CTEST_DASHBOARD_ROOT}\" ...")
  FILE(MAKE_DIRECTORY "${CTEST_DASHBOARD_ROOT}")
ENDIF()

#
# Set up the command that will run the build/tests
#

SET(CTEST_COMMAND
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Start"
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Update"
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Configure"
  )

IF (CTEST_DUAL_CONFIGURE)
  SET(CTEST_COMMAND
    ${CTEST_COMMAND}
    "\"${CTEST_CMAKE_COMMAND}\" \"${CTEST_SOURCE_DIRECTORY}\""
    )
ENDIF()

SET(CTEST_COMMAND
  ${CTEST_COMMAND}
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Build"
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Submit"
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Test"
  )

IF (CTEST_DO_COVERAGE_TESTING)
  SET(CTEST_COMMAND
    ${CTEST_COMMAND}
    "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Submit"
    "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Coverage"
    )
ENDIF()

IF (CTEST_DO_MEMORY_TESTING)
  SET(CTEST_COMMAND
    ${CTEST_COMMAND}
    "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Submit"
    "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}MemCheck"
    )
ENDIF()

SET(CTEST_COMMAND
  ${CTEST_COMMAND}
  "\"${CTEST_EXECUTABLE_NAME}\" -D ${CTEST_TEST_TYPE}Submit -A \"${CTEST_BINARY_DIRECTORY}/CMakeCache.txt\;${CTEST_SCRIPT_DIRECTORY}/${CTEST_SCRIPT_NAME}\""
  )

PRINT_VAR(CTEST_COMMAND)

#
# Add platform-independnet varibles to the initial cache
#

SET(CTEST_INITIAL_CACHE
"
${CTEST_INITIAL_CACHE}
CMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
BUILDNAME:STRING=${HOST_TYPE}-${CTEST_TEST_TYPE}-${BUILD_DIR_NAME}
"
)
