#ifndef INTREPID_F1_TRI_I3_FEM_FIAT_HPP
#define INTREPID_F1_TRI_I3_FEM_FIAT_HPP
#include "Intrepid_Basis.hpp"
#include "Intrepid_RealSpace.hpp"
#include "Intrepid_Utils.hpp"
#include "Intrepid_Tabulate.hpp"
#include "Intrepid_FieldContainer.hpp"
#include "Teuchos_Array.hpp"
#include "Teuchos_BLAS_types.hpp"

namespace Intrepid {

/** \class Intrepid::Basis_F1_TRI_I3_FEM_FIAT
  \brief Implementation of FIAT FEM basis functions of degree 3 for 1-forms on TRI cells. 
  Reconstruction space type is INCOMPLETE. Definition of the DoF set 
  for this basis, its enumeration and the associated local DoF tags are as follows,

\verbatim
  =================================================================================================
  |        |                degree-of-freedom-tag              |                                  |
  | DoF Id |---------------------------------------------------|          DoF definition          |
  |        |  subc dim  |  subc id   | subc DoFId |subc num DoF|                                  |
  |========|============|============|============|============|==================================|
  |    0   |     1      |     0      |     0      |     3      |          L_0(u)=(u.t)(0.25,0.0)  |
  |========|============|============|============|============|==================================|
  |    1   |     1      |     0      |     1      |     3      |           L_1(u)=(u.t)(0.5,0.0)  |
  |========|============|============|============|============|==================================|
  |    2   |     1      |     0      |     2      |     3      |          L_2(u)=(u.t)(0.75,0.0)  |
  |========|============|============|============|============|==================================|
  |    3   |     1      |     1      |     0      |     3      |         L_3(u)=(u.t)(0.75,0.25)  |
  |========|============|============|============|============|==================================|
  |    4   |     1      |     1      |     1      |     3      |           L_4(u)=(u.t)(0.5,0.5)  |
  |========|============|============|============|============|==================================|
  |    5   |     1      |     1      |     2      |     3      |         L_5(u)=(u.t)(0.25,0.75)  |
  |========|============|============|============|============|==================================|
  |    6   |     1      |     2      |     0      |     3      |          L_6(u)=(u.t)(0.0,0.75)  |
  |========|============|============|============|============|==================================|
  |    7   |     1      |     2      |     1      |     3      |           L_7(u)=(u.t)(0.0,0.5)  |
  |========|============|============|============|============|==================================|
  |    8   |     1      |     2      |     2      |     3      |          L_8(u)=(u.t)(0.0,0.25)  |
  |========|============|============|============|============|==================================|
  |    9   |     2      |     0      |     0      |     6      |           L_9(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   10   |     2      |     0      |     1      |     6      |          L_10(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   11   |     2      |     0      |     2      |     6      |          L_11(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   12   |     2      |     0      |     3      |     6      |          L_12(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   13   |     2      |     0      |     4      |     6      |          L_13(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   14   |     2      |     0      |     5      |     6      |          L_14(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|


\endverbatim

  The DefaultBasisFactory will select this basis
  if the following parameters are specified:
  \verbatim
  |=======================|===================================|
  |  EField               |  FIELD_FORM_1                     |
  |-----------------------|-----------------------------------|
  |  ECell                |  CELL_TRI                         |
  |-----------------------|-----------------------------------|
  |  EReconstructionSpace |  RECONSTRUCTION_SPACE_INCOMPLETE  |
  |-----------------------|-----------------------------------|
  |  degree               |  3                                |
  |-----------------------|-----------------------------------|
  |  EBasis               |  BASIS_FEM_FIAT                   |
  |-----------------------|-----------------------------------|
  |  ECoordinates         |  COORDINATES_CARTESIAN            |
  |=======================|===================================|
  \endverbatim

*/

template<class Scalar>
class Basis_F1_TRI_I3_FEM_FIAT: public Basis<Scalar> {
  private:
  
  /** \brief Dimension of the space spanned by the basis = number of degrees of freedom.
  */
  int numDof_;
  
  /**\brief Lookup table for the DoF's local enumeration (DoF Id) by its local DoF tag
  */
  Teuchos::Array<Teuchos::Array<Teuchos::Array<int> > > tagToEnum_;
  
  /**\brief Lookup table for the DoF's local DoF tag by its local enumeration (DoF Id)
  */
  Teuchos::Array<LocalDofTag> enumToTag_;
  
  /**\brief "true" if both lookup arrays have been set by initialize()
  */
  bool isSet_;

  /**\brief coefficients of nodal basis in terms of orthogonal polynomials */
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm1_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats1_;

/* \brief Static data array that provides the Vandermonde and derivative matrices.  They need to
     be static data members because of the templating w.r.t type */
  #ifndef DOXYGEN_SHOULD_SKIP_THIS
  static Scalar *get_vdm0_data () {
    static Scalar vdm0_data [] = { -9.554891802893567e-17 , 7.672150338409478e-17 , -6.392316906568779e-17 , 2.597799574084632e-17 , -1.698423504850363e-17 , 6.666306233981723e-17 , 2.869950906616193e-17 , -9.291134159581418e-17 , 6.394154901450156e-17 , 1.999999999999931e+00 , -1.502386610609345e-15 , 9.576134253344754e-16 , -1.518542130946158e-16 , -4.359901571501460e-16 , -3.796355327365403e-16 , -2.571642849840891e-16 , 7.162375076710803e-16 , -4.142380747229266e-16 , 4.271646445309744e-16 , -5.849728118350814e-16 , 1.103514788380698e-16 , 4.830011093535371e-16 , 1.874060395800140e-18 , 7.050532846355345e-17 , -1.307496998040683e-15 , 1.199999999999959e+01 , 1.904197828063448e-16 , -4.474574363648193e-16 , -3.398987363269212e-15 , 2.293152816343780e-15 , 3.585403644850360e-16 , -1.572703013826005e-16 , 5.166552635951674e-16 , -8.975097581635522e-17 , 6.288557888873138e-17 , -1.853254983597083e-16 , -2.443097195940027e-16 , 3.167140363682962e-16 , -1.064728885028128e-16 , 6.972046773462762e-16 , 2.544215923008797e-16 , 3.999999999999861e+00 , -2.876101166495365e-16 , 1.331437537261879e-15 , -3.442785531147601e-16 , 1.063514140009270e+00 , -1.980992118683352e+00 , 1.063514140009270e+00 , -5.479833101529935e-01 , 1.293463143254532e-01 , 8.344923504867364e-03 , 8.344923504866980e-03 , 1.293463143254531e-01 , -5.479833101529934e-01 , -1.112656467315681e+00 , -4.130737134909475e+00 , 1.432545201668942e+00 , -7.764327511006544e-16 , 8.261474269818953e+00 , -6.102567453106222e-16 , 5.136778115501532e-01 , -2.085862678326972e-15 , -5.136778115501512e-01 , 2.431610942249262e-01 , -4.863221884498489e-01 , -2.431610942249234e-01 , 2.431610942249242e-01 , 4.863221884498462e-01 , -2.431610942249209e-01 , -9.726443768996597e-01 , 4.705167173252137e+00 , -2.431610942249157e+00 , 1.945288753799324e+00 , -3.640973156651683e-14 , 4.863221884498309e+00 , 2.545863964500984e-01 , -1.344459898006543e-01 , 2.545863964500991e-01 , -2.006755414265800e-01 , 6.216968011126537e-01 , -6.234849990065561e-01 , -6.234849990065552e-01 , 6.216968011126551e-01 , -2.006755414265808e-01 , -1.154381084840010e+00 , 5.364593681703136e-02 , -1.744486389827135e-01 , 2.558008319307616e-15 , -1.072918736340664e-01 , 9.081417368933119e-15 , -5.288484846427484e-17 , 4.722976591274617e-17 , 1.275017996842992e-17 , -4.651639171981272e-17 , -3.831755939514785e-17 , -2.135886329449768e-17 , 1.781966853995412e-16 , -1.555097878387617e-16 , 1.656799261704350e-16 , -2.265758236527112e-16 , -6.561386688842050e-16 , -3.358198413133088e-16 , 7.436881906026143e-16 , 1.238624383647965e-15 , 5.969185995959768e-16 , -2.698191933240631e-01 , 6.856745479833143e-01 , -2.698191933240633e-01 , -5.479833101529938e-01 , 1.293463143254542e-01 , 8.344923504866890e-03 , 8.344923504866613e-03 , 1.293463143254540e-01 , -5.479833101529935e-01 , -1.112656467315682e+00 , -4.130737134909473e+00 , 1.432545201668937e+00 , -1.137978600240785e-15 , 8.261474269818947e+00 , -2.137179322403426e-15 , -4.863221884498464e-01 , -3.191891195797325e-15 , 4.863221884498495e-01 , 2.431610942249259e-01 , -4.863221884498486e-01 , -2.431610942249234e-01 , 2.431610942249239e-01 , 4.863221884498465e-01 , -2.431610942249213e-01 , -9.726443768996581e-01 , -7.294832826747450e+00 , -2.431610942249158e+00 , 1.945288753799325e+00 , -3.064215547965432e-14 , 4.863221884498307e+00 , -4.120802702165686e-01 , 1.988873435326793e-01 , -4.120802702165680e-01 , -2.006755414265799e-01 , 6.216968011126539e-01 , -6.234849990065559e-01 , -6.234849990065551e-01 , 6.216968011126552e-01 , -2.006755414265808e-01 , 8.456189151599200e-01 , 5.364593681703048e-02 , -4.174448638982576e+00 , 2.139347726748397e-15 , -1.072918736340695e-01 , 8.147996166663063e-15 };
    return vdm0_data ;
  }

  static Scalar *get_vdm1_data () {
    static Scalar vdm1_data [] = { -9.845215560866844e-17 , 1.142314740635580e-16 , -3.639207574294732e-18 , -1.450029689847212e-16 , 9.170692796358256e-17 , -3.514683364840634e-17 , 6.169732217899917e-17 , -2.870581244173433e-16 , 3.917525443959768e-17 , 2.087863382475176e-17 , -4.576573896558583e-16 , 3.123293911203001e-17 , 1.999999999999930e+00 , -1.532958326367783e-15 , 4.410951782748120e-16 , -2.524158182817815e-16 , 6.473364596096265e-16 , -7.151194241807046e-16 , -3.218318623751659e-16 , 4.832424608039454e-16 , -2.102750556531532e-16 , -5.330124227187136e-17 , 5.600243034066532e-17 , 2.864191089163581e-16 , 3.455894424797545e-16 , 4.206704429243757e-16 , -8.336972605327286e-16 , 1.713208839116548e-16 , 1.199999999999958e+01 , 1.754916741439350e-16 , -5.089566870166914e-17 , 1.192114169965702e-17 , 2.475225089454934e-16 , -6.827085554869661e-19 , -2.050226308170089e-16 , -1.915467072031074e-17 , -2.030234742428111e-16 , 1.912087939967121e-16 , 5.869768917882850e-17 , -2.344926011178805e-17 , -9.867459497062137e-16 , -3.711088511146321e-16 , 1.174799334216167e-15 , -3.007034725388547e-16 , 3.999999999999861e+00 , 4.086567660532744e-01 , -9.904960593416939e-01 , 6.548573739560124e-01 , 8.708918302325357e-01 , -5.584271467886485e-01 , 1.926223097767514e-01 , -1.842773862718797e-01 , 6.877734611140905e-01 , -1.418875140385500e+00 , 8.641378251060619e-01 , 3.588126873274630e+00 , -7.325622522556768e-01 , -2.840932117527756e+00 , 4.130737134909273e+00 , 2.897669706180256e+00 , 2.482952936153279e-01 , 1.439499304589770e-01 , -2.653825179348250e-01 , -2.374498522517393e-01 , 1.998152618251484e-01 , 2.203626279322421e-01 , 4.635237221571651e-01 , 6.861374502749952e-01 , -4.806109464766624e-01 , 1.117306627323401e-01 , 2.804997653782786e+00 , 2.246344340121088e+00 , 9.726443768996588e-01 , -9.048281343134373e-01 , 2.431610942249147e+00 , -3.405889920846593e-03 , -6.722299490032861e-02 , 2.579922863709467e-01 , 1.316784400263258e-01 , -3.198506875895699e-01 , 1.229079564237741e-01 , -7.463929554303292e-01 , 9.415474887022233e-01 , -3.323539814529041e-01 , -5.052553853784658e-01 , -1.933663353779858e+00 , 5.926135731124701e-01 , -1.438703140830744e-01 , -5.364593681704592e-02 , -1.359675785207653e+00 , 4.047287899860941e-01 , -1.028511821974971e+00 , 4.047287899860958e-01 , 8.219749652294912e-01 , -1.940194714881823e-01 , -1.251738525730044e-02 , -1.251738525729971e-02 , -1.940194714881799e-01 , 8.219749652294893e-01 , 1.668984700973521e+00 , 6.196105702364199e+00 , -2.148817802503407e+00 , 3.025357742103552e-15 , -1.239221140472842e+01 , 1.010302952408892e-14 , 1.568837164078734e-01 , 3.428372739916684e-01 , -4.267029097319469e-01 , -4.198883116114605e-01 , 3.564664702326403e-01 , 1.500691182873874e-01 , -1.417241947825225e-01 , -2.271201559071800e-01 , -1.280949985415503e-01 , 2.725839248194389e-02 , 2.311531128593703e+00 , 2.175239166183982e+00 , -1.167173252279601e+00 , 4.130737134909599e+00 , -2.917933130699001e+00 , -9.871444212875553e-02 , -1.314325452016763e-01 , 3.876077463210934e-01 , 2.382107875257400e-01 , -4.302264627923817e-01 , 5.068251666659727e-02 , 2.938436108915216e-01 , 5.609572565746686e-02 , -4.950306699184127e-03 , -5.975878351813911e-01 , -3.203347269721822e+00 , -2.154080938148643e-01 , 9.726443768996649e-01 , -8.881382873038397e-01 , 2.431610942249160e+00 , -6.014347857333471e-02 , 9.944367176635102e-02 , -3.519367916432442e-01 , -1.732860989807764e-01 , 4.567450570912854e-01 , -2.387941712358019e-01 , -3.846908277707564e-01 , 1.649517440213764e-01 , -2.738944244582224e-02 , 7.146027706498446e-01 , 2.215272816432700e+00 , -1.357741036816526e+00 , -5.835866261397991e-01 , -5.364593681690671e-02 , -1.458966565349495e+00 };
    return vdm1_data ;
  }

  static Scalar *get_dmats0_data() {
    static Scalar dmats0_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.000000000000003e+00 , 2.601093943407511e-15 , 1.332267629550188e-15 , -3.357858209172413e-16 , -8.881784197001252e-16 , 4.440892098500626e-16 , 3.332182674458116e-31 , 9.044919008782904e-16 , 3.806478941571979e-16 , 4.440892098500626e-16 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.803313137178519e-16 , 6.000000000000002e+00 , -2.287059430727823e-15 , 2.808127879887354e-15 , -1.110223024625157e-16 , 8.691460249922652e-16 , 9.827852817271120e-16 , -6.647007207688176e-15 , 1.332267629550189e-15 , -1.795389234108110e-15 , 1.333333333333335e+00 , -4.440892098500591e-16 , 3.333333333333334e+00 , 1.160069772669550e-16 , -8.881784197001252e-16 , -8.881784197001252e-16 , -1.110223024625148e-16 , -6.960418636017305e-16 , -2.664535259100372e-15 , -2.664535259100376e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 9.999999999999998e-01 , 4.988073446351596e-15 , -7.999999999999989e-01 , 9.999999999999998e+00 , -3.497202527569243e-15 , 2.000000000000002e-01 , 3.354459567260294e-15 , 2.439771740645651e-15 , 7.375052949295683e-15 , 8.326672684688674e-16 , -1.206442353426004e-15 , 2.400000000000002e+00 , -2.205643075588645e-15 , 2.246360693830211e-15 , 8.399999999999999e+00 , 8.183929724379720e-16 , 4.785457744357509e-16 , -8.179823032069250e-15 , 2.789186772031433e-30 , -2.512276101437497e-15 , 1.000000000000000e+00 , -2.775557561562887e-15 , 3.199999999999998e+00 , 1.885113380588022e-16 , 1.110223024625157e-16 , 4.199999999999999e+00 , -4.440892098500619e-16 , -1.797201843127905e-15 , -4.218847493575590e-15 , -2.664535259100376e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 };
    return dmats0_data;
  }

  static Scalar *get_dmats1_data() {
    static Scalar dmats1_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.000000000000001e+00 , 1.300546971703756e-15 , 6.661338147750939e-16 , -1.678929104586207e-16 , -4.440892098500626e-16 , 2.220446049250313e-16 , 1.666091337229058e-31 , 4.522459504391452e-16 , 1.903239470785990e-16 , 2.220446049250313e-16 , 3.000000000000004e+00 , 3.901640915111266e-15 , 1.776356839400250e-15 , -6.702121850696354e-16 , -1.332267629550188e-15 , 8.881784197001252e-16 , -1.776356839400250e-15 , 2.447022176724795e-17 , -7.612957883143911e-16 , -8.881784197001252e-16 , 6.666666666666679e-01 , 3.000000000000002e+00 , -3.333333333333336e-01 , 7.252418620300098e-16 , 1.110223024625157e-16 , 5.551115123125783e-16 , -3.967857788365693e-16 , -2.803284815162586e-15 , 9.516197353929919e-16 , -5.551115123125783e-17 , 6.666666666666674e-01 , 5.000000000000003e+00 , 1.666666666666664e+00 , 2.509132357668788e-15 , -6.661338147750939e-16 , 0.000000000000000e+00 , -6.919068492753150e-17 , -6.035223341491033e-15 , -8.881784197001221e-16 , -2.664535259100376e-15 , -1.333333333333336e+00 , -6.534455516365203e-15 , 6.666666666666663e+00 , 1.902786318531034e-15 , 1.332267629550188e-15 , -2.664535259100376e-15 , 5.598900026800757e-31 , -2.312889109259917e-15 , -4.314009467114889e-15 , -4.440892098500626e-15 , 4.999999999999999e-01 , 2.400000000000003e+00 , -4.000000000000002e-01 , 5.000000000000001e+00 , -6.000000000000018e-01 , 1.000000000000004e-01 , 3.174464659392941e-15 , 7.793793954884532e-16 , 4.464682591885451e-15 , -5.551115123125783e-17 , 4.999999999999992e-01 , 1.200000000000005e+00 , 7.999999999999996e-01 , 6.999999999999998e+00 , 4.199999999999996e+00 , -6.999999999999998e-01 , 4.230524660745312e-15 , 2.843672009884914e-16 , 5.265629202507887e-15 , -1.554312234475219e-15 , 4.999999999999987e-01 , -3.600000000000002e+00 , 1.600000000000000e+00 , 1.113904886696612e-16 , 8.399999999999999e+00 , 2.100000000000000e+00 , -5.042395072913611e-16 , -2.241092798866429e-15 , -1.776356839400246e-15 , -8.881784197001252e-16 , 2.500000000000001e+00 , 9.516197353930126e-17 , -2.000000000000000e+00 , -1.380981496957210e-15 , 4.440892098500626e-16 , 1.050000000000000e+01 , 2.664535259100376e-15 , -5.958952152579898e-16 , -3.679596310186229e-15 , 8.881784197001252e-16 };
    return dmats1_data;
  }
#endif


  public:

  /** \brief Constructor.
  */
  Basis_F1_TRI_I3_FEM_FIAT() : numDof_(15), isSet_(false) , vdm0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F1_TRI_I3_FEM_FIAT::get_vdm0_data(),15,15,10) ) ),vdm1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F1_TRI_I3_FEM_FIAT::get_vdm1_data(),15,15,10) ) ),dmats0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F1_TRI_I3_FEM_FIAT::get_dmats0_data(),10,10,10) ) ),dmats1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F1_TRI_I3_FEM_FIAT::get_dmats1_data(),10,10,10) ) ) { }
  
  /** \brief Initializes arrays needed for the lookup of the local enumeration (DoF Id) of a 
    degree-of-freedom by its local DoF tag and the reverse lookup of the DoF tag by DoF Id.
   */
  void initialize();
  
  
  /** \brief Returns FieldContainer with multi-indexed quantity with the values of an operator 
  applied to a set of FEM basis functions, evaluated at a set of
  points in a <strong>reference</strong> cell. The rank of the return
  FieldContainer argument depends on the number of points, number of
  basis, functions, their rank, and the rank of the operator applied to them; see 
  FieldContainer::resize(int,int,EField,EOperator,int) for summary of
  the admissible index combinations.
  In particular, the admissible range of the <var>operatorType</var> argument depends on the rank of 
  the basis functions and the space dimension.Because FEM
  reconstruction relies on COMPLETE or INCOMPLETE polynomials, i.e.,
  smooth local spaces, the admissible range of <var>operatorType</var>
  always includes VALUE, D0, D1,...,D10. If derivative order exceeds
  polynomial degree, output container is filled with 0. 
 
      \param outputValues   [out]         - FieldContainer with the computed values (see
                                            implementation for index ordering)
      \param inputPoints     [in]         - evaluation points on the reference cell  
      \param operatorType    [in]         - the operator being applied to the basis function
  */    

  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const EOperator                        operatorType) const;
  
  
  /** \brief This method is intended for FVD reconstructions and should not be used here. Its 
    invocation will throw an exception. 
  */  
  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const Cell<Scalar>&                    cell) const;

  
  int getNumLocalDof() const;
  
  
  int getLocalDofEnumeration(const LocalDofTag dofTag);

  
  LocalDofTag getLocalDofTag(int id);

  
  const Teuchos::Array<LocalDofTag> & getAllLocalDofTags();

  
  ECell getCellType() const;

  
  EBasis getBasisType() const;

  
  ECoordinates getCoordinateSystem() const;

  
  int getDegree() const;

};

} // namespace Intrepid

#include "Intrepid_F1_TRI_I3_FEM_FIATDef.hpp"

#endif

