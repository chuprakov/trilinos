#ifndef INTREPID_F2_TRI_I3_FEM_FIAT_HPP
#define INTREPID_F2_TRI_I3_FEM_FIAT_HPP
#include "Intrepid_Basis.hpp"
#include "Intrepid_RealSpace.hpp"
#include "Intrepid_Utils.hpp"
#include "Intrepid_Tabulate.hpp"
#include "Intrepid_FieldContainer.hpp"
#include "Teuchos_Array.hpp"
#include "Teuchos_BLAS_types.hpp"

namespace Intrepid {

/** \class Intrepid::Basis_F2_TRI_I3_FEM_FIAT
  \brief Implementation of FIAT FEM basis functions of degree 3 for 2-forms on TRI cells. 
  Reconstruction space type is INCOMPLETE. Definition of the DoF set 
  for this basis, its enumeration and the associated local DoF tags are as follows,

\verbatim
  =================================================================================================
  |        |                degree-of-freedom-tag              |                                  |
  | DoF Id |---------------------------------------------------|          DoF definition          |
  |        |  subc dim  |  subc id   | subc DoFId |subc num DoF|                                  |
  |========|============|============|============|============|==================================|
  |    0   |     1      |     0      |     0      |     3      |          L_0(u)=(u.n)(0.25,0.0)  |
  |========|============|============|============|============|==================================|
  |    1   |     1      |     0      |     1      |     3      |           L_1(u)=(u.n)(0.5,0.0)  |
  |========|============|============|============|============|==================================|
  |    2   |     1      |     0      |     2      |     3      |          L_2(u)=(u.n)(0.75,0.0)  |
  |========|============|============|============|============|==================================|
  |    3   |     1      |     1      |     0      |     3      |         L_3(u)=(u.n)(0.75,0.25)  |
  |========|============|============|============|============|==================================|
  |    4   |     1      |     1      |     1      |     3      |           L_4(u)=(u.n)(0.5,0.5)  |
  |========|============|============|============|============|==================================|
  |    5   |     1      |     1      |     2      |     3      |         L_5(u)=(u.n)(0.25,0.75)  |
  |========|============|============|============|============|==================================|
  |    6   |     1      |     2      |     0      |     3      |          L_6(u)=(u.n)(0.0,0.75)  |
  |========|============|============|============|============|==================================|
  |    7   |     1      |     2      |     1      |     3      |           L_7(u)=(u.n)(0.0,0.5)  |
  |========|============|============|============|============|==================================|
  |    8   |     1      |     2      |     2      |     3      |          L_8(u)=(u.n)(0.0,0.25)  |
  |========|============|============|============|============|==================================|
  |    9   |     2      |     0      |     0      |     6      |           L_9(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   10   |     2      |     0      |     1      |     6      |          L_10(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   11   |     2      |     0      |     2      |     6      |          L_11(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   12   |     2      |     0      |     3      |     6      |          L_12(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   13   |     2      |     0      |     4      |     6      |          L_13(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   14   |     2      |     0      |     5      |     6      |          L_14(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|


\endverbatim

  The DefaultBasisFactory will select this basis
  if the following parameters are specified:
  \verbatim
  |=======================|===================================|
  |  EField               |  FIELD_FORM_2                     |
  |-----------------------|-----------------------------------|
  |  ECell                |  CELL_TRI                         |
  |-----------------------|-----------------------------------|
  |  EReconstructionSpace |  RECONSTRUCTION_SPACE_INCOMPLETE  |
  |-----------------------|-----------------------------------|
  |  degree               |  3                                |
  |-----------------------|-----------------------------------|
  |  EBasis               |  BASIS_FEM_FIAT                   |
  |-----------------------|-----------------------------------|
  |  ECoordinates         |  COORDINATES_CARTESIAN            |
  |=======================|===================================|
  \endverbatim

*/

template<class Scalar>
class Basis_F2_TRI_I3_FEM_FIAT: public Basis<Scalar> {
  private:
  
  /** \brief Dimension of the space spanned by the basis = number of degrees of freedom.
  */
  int numDof_;
  
  /**\brief Lookup table for the DoF's local enumeration (DoF Id) by its local DoF tag
  */
  Teuchos::Array<Teuchos::Array<Teuchos::Array<int> > > tagToEnum_;
  
  /**\brief Lookup table for the DoF's local DoF tag by its local enumeration (DoF Id)
  */
  Teuchos::Array<LocalDofTag> enumToTag_;
  
  /**\brief "true" if both lookup arrays have been set by initialize()
  */
  bool isSet_;

  /**\brief coefficients of nodal basis in terms of orthogonal polynomials */
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm1_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats1_;

/* \brief Static data array that provides the Vandermonde and derivative matrices.  They need to
     be static data members because of the templating w.r.t type */
  #ifndef DOXYGEN_SHOULD_SKIP_THIS
  static Scalar *get_vdm0_data () {
    static Scalar vdm0_data [] = { -5.987431494422506e-17 , 1.096394294829380e-16 , -8.563680401298630e-17 , -9.776463931421946e-17 , 8.538375888047146e-17 , -4.774647964299179e-17 , 5.212930176111606e-17 , -1.502802707814761e-16 , 5.447272445695980e-17 , 1.999999999999931e+00 , -8.786600164589344e-16 , 8.910603982408249e-16 , 4.851134120493105e-17 , 3.562437050615408e-16 , 1.136869990368859e-16 , 4.123695200412836e-16 , 1.813192608210445e-16 , -3.985120610242032e-17 , -3.889033192705504e-16 , 4.614533852687758e-16 , -1.730287140915563e-17 , 1.188298286538322e-16 , -1.183609959175269e-16 , 8.196568423990414e-16 , 5.173677241829266e-18 , 1.199999999999958e+01 , 5.989708783214059e-16 , -3.323621759754314e-16 , 1.814195495219995e-15 , -2.741947294215841e-16 , -1.379757378770947e-16 , 2.159883193521631e-16 , 3.123730454531772e-16 , 1.102599728099868e-16 , -3.142310122229795e-16 , 5.120891538219808e-17 , -1.642159715500857e-16 , 1.073364385925386e-16 , 1.720832135641837e-16 , 1.439101777605005e-15 , -1.859244095486767e-15 , 3.999999999999860e+00 , 1.795811492132787e-16 , 8.716985466783456e-17 , 1.790810609612198e-15 , 4.086567660532692e-01 , -9.904960593416802e-01 , 6.548573739560065e-01 , 8.708918302325253e-01 , -5.584271467886438e-01 , 1.926223097767506e-01 , -1.842773862718814e-01 , 6.877734611140945e-01 , -1.418875140385510e+00 , -2.840932117527760e+00 , 4.130737134909420e+00 , 2.897669706180249e+00 , -8.641378251060436e-01 , -3.588126873274559e+00 , 7.325622522556583e-01 , 2.482952936153307e-01 , 1.439499304589729e-01 , -2.653825179348241e-01 , -2.374498522517364e-01 , 1.998152618251474e-01 , 2.203626279322433e-01 , 4.635237221571659e-01 , 6.861374502749928e-01 , -4.806109464766592e-01 , 9.726443768996581e-01 , -9.048281343134813e-01 , 2.431610942249143e+00 , -1.117306627323448e-01 , -2.804997653782818e+00 , -2.246344340121090e+00 , -3.405889920847704e-03 , -6.722299490032740e-02 , 2.579922863709465e-01 , 1.316784400263246e-01 , -3.198506875895693e-01 , 1.229079564237734e-01 , -7.463929554303295e-01 , 9.415474887022247e-01 , -3.323539814529056e-01 , -1.438703140830739e-01 , -5.364593681703023e-02 , -1.359675785207650e+00 , 5.052553853784675e-01 , 1.933663353779872e+00 , -5.926135731124673e-01 , 4.047287899860900e-01 , -1.028511821974966e+00 , 4.047287899860944e-01 , 8.219749652294884e-01 , -1.940194714881809e-01 , -1.251738525730248e-02 , -1.251738525730056e-02 , -1.940194714881764e-01 , 8.219749652294851e-01 , 7.965850201685498e-15 , -1.239221140472837e+01 , 1.865174681370263e-14 , -1.668984700973514e+00 , -6.196105702364160e+00 , 2.148817802503414e+00 , 1.568837164078782e-01 , 3.428372739916569e-01 , -4.267029097319415e-01 , -4.198883116114519e-01 , 3.564664702326368e-01 , 1.500691182873880e-01 , -1.417241947825213e-01 , -2.271201559071833e-01 , -1.280949985415415e-01 , -1.167173252279599e+00 , 4.130737134909475e+00 , -2.917933130698996e+00 , -2.725839248195761e-02 , -2.311531128593759e+00 , -2.175239166183966e+00 , -9.871444212875818e-02 , -1.314325452016726e-01 , 3.876077463210921e-01 , 2.382107875257376e-01 , -4.302264627923806e-01 , 5.068251666659613e-02 , 2.938436108915208e-01 , 5.609572565746937e-02 , -4.950306699187425e-03 , 9.726443768996663e-01 , -8.881382873038047e-01 , 2.431610942249165e+00 , 5.975878351813952e-01 , 3.203347269721846e+00 , 2.154080938148669e-01 , -6.014347857333283e-02 , 9.944367176634504e-02 , -3.519367916432409e-01 , -1.732860989807714e-01 , 4.567450570912832e-01 , -2.387941712358018e-01 , -3.846908277707556e-01 , 1.649517440213746e-01 , -2.738944244581711e-02 , -5.835866261397962e-01 , -5.364593681697749e-02 , -1.458966565349490e+00 , -7.146027706498523e-01 , -2.215272816432726e+00 , 1.357741036816538e+00 };
    return vdm0_data ;
  }

  static Scalar *get_vdm1_data () {
    static Scalar vdm1_data [] = { 7.705449824816845e-17 , -2.853183594640330e-16 , -3.807761152914024e-17 , -3.180970835415751e-18 , 6.532749822415320e-18 , -1.035529875607833e-16 , 4.010712292263820e-17 , -2.535097922068012e-17 , -1.499516436151983e-17 , -1.192647437512920e-16 , 1.126007346695624e-15 , 7.010723885647215e-16 , 1.999999999999931e+00 , 2.824410740189914e-16 , 8.693313612168570e-16 , 9.880300516542512e-17 , -7.470373196991412e-16 , 4.797666611048874e-16 , -4.356891841121417e-16 , 4.472926884565784e-17 , 8.673060521895665e-17 , -2.643529477283179e-16 , -1.307696050783288e-16 , -3.471971110136432e-16 , -9.232042908602746e-16 , 5.857375131798626e-15 , -1.306302258068581e-15 , -8.098312602108915e-16 , 1.199999999999959e+01 , -1.313311032190637e-15 , 2.283509769755764e-16 , 3.867393618485525e-16 , -2.270409346435292e-16 , 9.618990852314560e-17 , -1.452141108674156e-16 , 7.379125547044483e-17 , 1.883861890488852e-16 , 9.044517225618933e-17 , 1.462021218608285e-17 , 1.607299280463218e-16 , 6.511548841358489e-16 , 9.521323718331403e-16 , 3.811381447265966e-16 , 1.157382430996487e-15 , 3.999999999999861e+00 , -1.063514140009271e+00 , 1.980992118683354e+00 , -1.063514140009272e+00 , 5.479833101529927e-01 , -1.293463143254531e-01 , -8.344923504867641e-03 , -8.344923504867045e-03 , -1.293463143254525e-01 , 5.479833101529918e-01 , 1.090922531889020e-15 , -8.261474269818935e+00 , 2.910471275335662e-15 , -1.112656467315680e+00 , -4.130737134909476e+00 , 1.432545201668941e+00 , -5.136778115501536e-01 , 1.524476345941134e-15 , 5.136778115501516e-01 , -2.431610942249262e-01 , 4.863221884498486e-01 , 2.431610942249235e-01 , -2.431610942249242e-01 , -4.863221884498472e-01 , 2.431610942249214e-01 , -1.945288753799325e+00 , 3.553450936277791e-14 , -4.863221884498309e+00 , -9.726443768996583e-01 , 4.705167173252135e+00 , -2.431610942249161e+00 , -2.545863964500957e-01 , 1.344459898006509e-01 , -2.545863964500983e-01 , 2.006755414265823e-01 , -6.216968011126546e-01 , 6.234849990065572e-01 , 6.234849990065559e-01 , -6.216968011126570e-01 , 2.006755414265836e-01 , -4.484767716954129e-15 , 1.072918736340341e-01 , -1.225524283427317e-14 , -1.154381084840015e+00 , 5.364593681699910e-02 , -1.744486389827185e-01 , 6.045600979115561e-17 , -4.643706258129135e-17 , -6.058117771222795e-17 , 4.560677065055755e-18 , 8.384664697327566e-17 , -4.685844986127925e-18 , -6.520443873781964e-17 , -3.719054053010787e-17 , 6.507927081674743e-17 , -2.420743750067588e-16 , -6.970253184233682e-16 , -6.051859375168967e-16 , -2.605674191091252e-16 , -1.256291565487030e-15 , 4.654553005859681e-17 , 2.698191933240620e-01 , -6.856745479833121e-01 , 2.698191933240620e-01 , 5.479833101529926e-01 , -1.293463143254527e-01 , -8.344923504867622e-03 , -8.344923504867735e-03 , -1.293463143254524e-01 , 5.479833101529916e-01 , -2.498001805406602e-16 , -8.261474269818931e+00 , -1.304512053934559e-15 , -1.112656467315681e+00 , -4.130737134909472e+00 , 1.432545201668938e+00 , 4.863221884498466e-01 , 2.747801985947262e-15 , -4.863221884498493e-01 , -2.431610942249258e-01 , 4.863221884498486e-01 , 2.431610942249234e-01 , -2.431610942249240e-01 , -4.863221884498472e-01 , 2.431610942249219e-01 , -1.945288753799324e+00 , 2.886579864025407e-14 , -4.863221884498309e+00 , -9.726443768996578e-01 , -7.294832826747454e+00 , -2.431610942249158e+00 , 4.120802702165710e-01 , -1.988873435326826e-01 , 4.120802702165688e-01 , 2.006755414265821e-01 , -6.216968011126544e-01 , 6.234849990065570e-01 , 6.234849990065555e-01 , -6.216968011126568e-01 , 2.006755414265835e-01 , -5.231058641808062e-15 , 1.072918736340370e-01 , -1.364099805334362e-14 , 8.456189151599154e-01 , 5.364593681700022e-02 , -4.174448638982579e+00 };
    return vdm1_data ;
  }

  static Scalar *get_dmats0_data() {
    static Scalar dmats0_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.000000000000003e+00 , 2.601093943407511e-15 , 1.332267629550188e-15 , -3.357858209172413e-16 , -8.881784197001252e-16 , 4.440892098500626e-16 , 3.332182674458116e-31 , 9.044919008782904e-16 , 3.806478941571979e-16 , 4.440892098500626e-16 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.803313137178519e-16 , 6.000000000000002e+00 , -2.287059430727823e-15 , 2.808127879887354e-15 , -1.110223024625157e-16 , 8.691460249922652e-16 , 9.827852817271120e-16 , -6.647007207688176e-15 , 1.332267629550189e-15 , -1.795389234108110e-15 , 1.333333333333335e+00 , -4.440892098500591e-16 , 3.333333333333334e+00 , 1.160069772669550e-16 , -8.881784197001252e-16 , -8.881784197001252e-16 , -1.110223024625148e-16 , -6.960418636017305e-16 , -2.664535259100372e-15 , -2.664535259100376e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 9.999999999999998e-01 , 4.988073446351596e-15 , -7.999999999999989e-01 , 9.999999999999998e+00 , -3.497202527569243e-15 , 2.000000000000002e-01 , 3.354459567260294e-15 , 2.439771740645651e-15 , 7.375052949295683e-15 , 8.326672684688674e-16 , -1.206442353426004e-15 , 2.400000000000002e+00 , -2.205643075588645e-15 , 2.246360693830211e-15 , 8.399999999999999e+00 , 8.183929724379720e-16 , 4.785457744357509e-16 , -8.179823032069250e-15 , 2.789186772031433e-30 , -2.512276101437497e-15 , 1.000000000000000e+00 , -2.775557561562887e-15 , 3.199999999999998e+00 , 1.885113380588022e-16 , 1.110223024625157e-16 , 4.199999999999999e+00 , -4.440892098500619e-16 , -1.797201843127905e-15 , -4.218847493575590e-15 , -2.664535259100376e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 };
    return dmats0_data;
  }

  static Scalar *get_dmats1_data() {
    static Scalar dmats1_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.000000000000001e+00 , 1.300546971703756e-15 , 6.661338147750939e-16 , -1.678929104586207e-16 , -4.440892098500626e-16 , 2.220446049250313e-16 , 1.666091337229058e-31 , 4.522459504391452e-16 , 1.903239470785990e-16 , 2.220446049250313e-16 , 3.000000000000004e+00 , 3.901640915111266e-15 , 1.776356839400250e-15 , -6.702121850696354e-16 , -1.332267629550188e-15 , 8.881784197001252e-16 , -1.776356839400250e-15 , 2.447022176724795e-17 , -7.612957883143911e-16 , -8.881784197001252e-16 , 6.666666666666679e-01 , 3.000000000000002e+00 , -3.333333333333336e-01 , 7.252418620300098e-16 , 1.110223024625157e-16 , 5.551115123125783e-16 , -3.967857788365693e-16 , -2.803284815162586e-15 , 9.516197353929919e-16 , -5.551115123125783e-17 , 6.666666666666674e-01 , 5.000000000000003e+00 , 1.666666666666664e+00 , 2.509132357668788e-15 , -6.661338147750939e-16 , 0.000000000000000e+00 , -6.919068492753150e-17 , -6.035223341491033e-15 , -8.881784197001221e-16 , -2.664535259100376e-15 , -1.333333333333336e+00 , -6.534455516365203e-15 , 6.666666666666663e+00 , 1.902786318531034e-15 , 1.332267629550188e-15 , -2.664535259100376e-15 , 5.598900026800757e-31 , -2.312889109259917e-15 , -4.314009467114889e-15 , -4.440892098500626e-15 , 4.999999999999999e-01 , 2.400000000000003e+00 , -4.000000000000002e-01 , 5.000000000000001e+00 , -6.000000000000018e-01 , 1.000000000000004e-01 , 3.174464659392941e-15 , 7.793793954884532e-16 , 4.464682591885451e-15 , -5.551115123125783e-17 , 4.999999999999992e-01 , 1.200000000000005e+00 , 7.999999999999996e-01 , 6.999999999999998e+00 , 4.199999999999996e+00 , -6.999999999999998e-01 , 4.230524660745312e-15 , 2.843672009884914e-16 , 5.265629202507887e-15 , -1.554312234475219e-15 , 4.999999999999987e-01 , -3.600000000000002e+00 , 1.600000000000000e+00 , 1.113904886696612e-16 , 8.399999999999999e+00 , 2.100000000000000e+00 , -5.042395072913611e-16 , -2.241092798866429e-15 , -1.776356839400246e-15 , -8.881784197001252e-16 , 2.500000000000001e+00 , 9.516197353930126e-17 , -2.000000000000000e+00 , -1.380981496957210e-15 , 4.440892098500626e-16 , 1.050000000000000e+01 , 2.664535259100376e-15 , -5.958952152579898e-16 , -3.679596310186229e-15 , 8.881784197001252e-16 };
    return dmats1_data;
  }
#endif


  public:

  /** \brief Constructor.
  */
  Basis_F2_TRI_I3_FEM_FIAT() : numDof_(15), isSet_(false) , vdm0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TRI_I3_FEM_FIAT::get_vdm0_data(),15,15,10) ) ),vdm1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TRI_I3_FEM_FIAT::get_vdm1_data(),15,15,10) ) ),dmats0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TRI_I3_FEM_FIAT::get_dmats0_data(),10,10,10) ) ),dmats1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TRI_I3_FEM_FIAT::get_dmats1_data(),10,10,10) ) ) { }
  
  /** \brief Initializes arrays needed for the lookup of the local enumeration (DoF Id) of a 
    degree-of-freedom by its local DoF tag and the reverse lookup of the DoF tag by DoF Id.
   */
  void initialize();
  
  
  /** \brief Returns FieldContainer with multi-indexed quantity with the values of an operator 
  applied to a set of FEM basis functions, evaluated at a set of
  points in a <strong>reference</strong> cell. The rank of the return
  FieldContainer argument depends on the number of points, number of
  basis, functions, their rank, and the rank of the operator applied to them; see 
  FieldContainer::resize(int,int,EField,EOperator,int) for summary of
  the admissible index combinations.
  In particular, the admissible range of the <var>operatorType</var> argument depends on the rank of 
  the basis functions and the space dimension.Because FEM
  reconstruction relies on COMPLETE or INCOMPLETE polynomials, i.e.,
  smooth local spaces, the admissible range of <var>operatorType</var>
  always includes VALUE, D0, D1,...,D10. If derivative order exceeds
  polynomial degree, output container is filled with 0. 
 
      \param outputValues   [out]         - FieldContainer with the computed values (see
                                            implementation for index ordering)
      \param inputPoints     [in]         - evaluation points on the reference cell  
      \param operatorType    [in]         - the operator being applied to the basis function
  */    

  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const EOperator                        operatorType) const;
  
  
  /** \brief This method is intended for FVD reconstructions and should not be used here. Its 
    invocation will throw an exception. 
  */  
  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const Cell<Scalar>&                    cell) const;

  
  int getNumLocalDof() const;
  
  
  int getLocalDofEnumeration(const LocalDofTag dofTag);

  
  LocalDofTag getLocalDofTag(int id);

  
  const Teuchos::Array<LocalDofTag> & getAllLocalDofTags();

  
  ECell getCellType() const;

  
  EBasis getBasisType() const;

  
  ECoordinates getCoordinateSystem() const;

  
  int getDegree() const;

};

} // namespace Intrepid

#include "Intrepid_F2_TRI_I3_FEM_FIATDef.hpp"

#endif

