#ifndef INTREPID_F2_TET_I2_FEM_FIAT_HPP
#define INTREPID_F2_TET_I2_FEM_FIAT_HPP
#include "Intrepid_Basis.hpp"
#include "Intrepid_RealSpace.hpp"
#include "Intrepid_Utils.hpp"
#include "Intrepid_Tabulate.hpp"
#include "Intrepid_FieldContainer.hpp"
#include "Teuchos_Array.hpp"
#include "Teuchos_BLAS_types.hpp"

namespace Intrepid {

/** \class Intrepid::Basis_F2_TET_I2_FEM_FIAT
  \brief Implementation of FIAT FEM basis functions of degree 2 for 2-forms on TET cells. 
  Reconstruction space type is INCOMPLETE. Definition of the DoF set 
  for this basis, its enumeration and the associated local DoF tags are as follows,

\verbatim
  =================================================================================================
  |        |                degree-of-freedom-tag              |                                  |
  | DoF Id |---------------------------------------------------|          DoF definition          |
  |        |  subc dim  |  subc id   | subc DoFId |subc num DoF|                                  |
  |========|============|============|============|============|==================================|
  |    0   |     2      |     0      |     0      |     3      |     L_0(u)=(u.n)(0.25,0.0,0.25)  |
  |========|============|============|============|============|==================================|
  |    1   |     2      |     0      |     1      |     3      |      L_1(u)=(u.n)(0.5,0.0,0.25)  |
  |========|============|============|============|============|==================================|
  |    2   |     2      |     0      |     2      |     3      |      L_2(u)=(u.n)(0.25,0.0,0.5)  |
  |========|============|============|============|============|==================================|
  |    3   |     2      |     1      |     0      |     3      |     L_3(u)=(u.n)(0.5,0.25,0.25)  |
  |========|============|============|============|============|==================================|
  |    4   |     2      |     1      |     1      |     3      |     L_4(u)=(u.n)(0.25,0.5,0.25)  |
  |========|============|============|============|============|==================================|
  |    5   |     2      |     1      |     2      |     3      |     L_5(u)=(u.n)(0.25,0.25,0.5)  |
  |========|============|============|============|============|==================================|
  |    6   |     2      |     2      |     0      |     3      |     L_6(u)=(u.n)(0.0,0.25,0.25)  |
  |========|============|============|============|============|==================================|
  |    7   |     2      |     2      |     1      |     3      |      L_7(u)=(u.n)(0.0,0.25,0.5)  |
  |========|============|============|============|============|==================================|
  |    8   |     2      |     2      |     2      |     3      |      L_8(u)=(u.n)(0.0,0.5,0.25)  |
  |========|============|============|============|============|==================================|
  |    9   |     2      |     3      |     0      |     3      |     L_9(u)=(u.n)(0.25,0.25,0.0)  |
  |========|============|============|============|============|==================================|
  |   10   |     2      |     3      |     1      |     3      |     L_10(u)=(u.n)(0.25,0.5,0.0)  |
  |========|============|============|============|============|==================================|
  |   11   |     2      |     3      |     2      |     3      |     L_11(u)=(u.n)(0.5,0.25,0.0)  |
  |========|============|============|============|============|==================================|
  |   12   |     3      |     0      |     0      |     3      |          L_12(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   13   |     3      |     0      |     1      |     3      |          L_13(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|
  |   14   |     3      |     0      |     2      |     3      |          L_14(u)=IntegralMoment  |
  |========|============|============|============|============|==================================|


\endverbatim

  The DefaultBasisFactory will select this basis
  if the following parameters are specified:
  \verbatim
  |=======================|===================================|
  |  EField               |  FIELD_FORM_2                     |
  |-----------------------|-----------------------------------|
  |  ECell                |  CELL_TET                         |
  |-----------------------|-----------------------------------|
  |  EReconstructionSpace |  RECONSTRUCTION_SPACE_INCOMPLETE  |
  |-----------------------|-----------------------------------|
  |  degree               |  2                                |
  |-----------------------|-----------------------------------|
  |  EBasis               |  BASIS_FEM_FIAT                   |
  |-----------------------|-----------------------------------|
  |  ECoordinates         |  COORDINATES_CARTESIAN            |
  |=======================|===================================|
  \endverbatim

*/

template<class Scalar>
class Basis_F2_TET_I2_FEM_FIAT: public Basis<Scalar> {
  private:
  
  /** \brief Dimension of the space spanned by the basis = number of degrees of freedom.
  */
  int numDof_;
  
  /**\brief Lookup table for the DoF's local enumeration (DoF Id) by its local DoF tag
  */
  Teuchos::Array<Teuchos::Array<Teuchos::Array<int> > > tagToEnum_;
  
  /**\brief Lookup table for the DoF's local DoF tag by its local enumeration (DoF Id)
  */
  Teuchos::Array<LocalDofTag> enumToTag_;
  
  /**\brief "true" if both lookup arrays have been set by initialize()
  */
  bool isSet_;

  /**\brief coefficients of nodal basis in terms of orthogonal polynomials */
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm1_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > vdm2_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats0_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats1_;
  Teuchos::RCP<Teuchos::SerialDenseMatrix<int,Scalar> > dmats2_;

/* \brief Static data array that provides the Vandermonde and derivative matrices.  They need to
     be static data members because of the templating w.r.t type */
  #ifndef DOXYGEN_SHOULD_SKIP_THIS
  static Scalar *get_vdm0_data () {
    static Scalar vdm0_data [] = { -5.693145607721384e-16 , 2.850367511464391e-16 , -1.701371553678669e-18 , 2.313822961355627e-16 , -2.117814243405062e-16 , -2.154817671799254e-16 , -1.476032837621766e-15 , 2.155847081527964e-16 , -5.057648551132004e-16 , -2.304200667074818e-16 , -3.745346758698021e-17 , -4.267690801446067e-17 , 6.000000000000006e+00 , 9.984959907505253e-16 , -9.643978324258562e-17 , -8.963120213120201e-01 , 4.883033633033632e-01 , 3.095238095238085e-01 , 4.883033633033628e-01 , 9.848484848484743e-02 , 3.095238095238089e-01 , 3.103687978687980e+00 , 3.095238095238103e-01 , 9.848484848484713e-02 , -8.963120213120200e-01 , 9.848484848484798e-02 , 4.883033633033635e-01 , 7.846153846153864e+00 , -2.984390609390610e+00 , -3.617507492507491e+00 , 8.562271062271175e-02 , -4.784798534798535e-01 , -2.380952380952383e-02 , -4.784798534798533e-01 , 4.166666666666659e-01 , -2.380952380952369e-02 , 1.418956043956046e+00 , -2.380952380952326e-02 , -2.250000000000001e+00 , 8.562271062271085e-02 , 4.166666666666659e-01 , -4.784798534798531e-01 , -2.307692307692307e+00 , -9.931318681318675e-01 , 3.282967032967045e-01 , 1.760947385947379e-01 , -4.136488511488495e-01 , 2.261904761904759e-01 , -4.136488511488501e-01 , 1.136363636363602e-02 , 2.261904761904759e-01 , 8.427614052614053e-01 , -1.773809523809524e+00 , 6.780303030303028e-01 , 1.760947385947381e-01 , 1.136363636363616e-02 , -4.136488511488499e-01 , -2.307692307692359e-01 , 4.941933066933062e-01 , -1.502872127872139e-01 , -1.230769230769227e+00 , 1.230769230769227e+00 , 1.836638480190445e-16 , 1.230769230769227e+00 , -5.152128723651117e-16 , 8.703975040713630e-16 , -1.230769230769226e+00 , 9.540979117872439e-17 , -1.526556658859590e-16 , -1.230769230769227e+00 , -1.821459649775647e-16 , 1.230769230769228e+00 , -7.384615384615373e+00 , -3.692307692307687e+00 , -3.692307692307688e+00 , 4.335664335664326e-01 , -7.972027972027956e-01 , -9.551821139597294e-17 , -7.972027972027955e-01 , 3.636363636363630e-01 , -3.124670661103224e-16 , 4.335664335664322e-01 , 1.076612757278106e-16 , 3.636363636363630e-01 , 4.335664335664326e-01 , 3.636363636363630e-01 , -7.972027972027957e-01 , 3.692307692307689e+00 , 2.097902097902093e-01 , 1.300699300699300e+00 , 5.039127539127521e-01 , -7.268564768564749e-01 , 2.380952380952379e-01 , -7.268564768564747e-01 , -1.515151515151520e-02 , 2.380952380952375e-01 , 5.039127539127519e-01 , 2.380952380952380e-01 , -1.515151515151538e-02 , 5.039127539127525e-01 , -1.515151515151535e-02 , -7.268564768564749e-01 , 3.692307692307686e+00 , 1.557192807192805e+00 , 7.974525474525451e-01 , -3.496503496503536e-02 , 5.804195804195802e-01 , -2.138588785227657e-17 , 5.804195804195802e-01 , -5.454545454545444e-01 , -4.087442190270352e-17 , -3.496503496503511e-02 , -2.834375529420230e-16 , -5.454545454545445e-01 , -3.496503496503545e-02 , -5.454545454545446e-01 , 5.804195804195803e-01 , -1.846153846153849e+00 , 1.531468531468530e+00 , -1.048951048951061e-01 , -1.053113553113547e-01 , 5.100732600732586e-01 , -2.380952380952378e-01 , 5.100732600732586e-01 , -1.666666666666659e-01 , -2.380952380952376e-01 , -1.053113553113547e-01 , -2.380952380952379e-01 , -1.666666666666659e-01 , -1.053113553113551e-01 , -1.666666666666659e-01 , 5.100732600732587e-01 , -1.846153846153843e+00 , 1.840659340659334e-01 , 3.983516483516486e-01 , -1.475191475191457e-01 , 4.678654678654653e-01 , -3.809523809523804e-01 , 4.678654678654655e-01 , 6.060606060606087e-02 , -3.809523809523802e-01 , -1.475191475191459e-01 , -3.809523809523804e-01 , 6.060606060606098e-02 , -1.475191475191463e-01 , 6.060606060606096e-02 , 4.678654678654655e-01 , -1.846153846153837e+00 , -6.243756243756218e-01 , 7.002997002997030e-01 };
    return vdm0_data ;
  }

  static Scalar *get_vdm1_data () {
    static Scalar vdm1_data [] = { -7.197374478091351e-16 , -2.483271902453850e-16 , 4.224788930083494e-16 , -2.935562085299229e-17 , 7.653944096379385e-16 , -1.453057781957181e-16 , -4.946011726266256e-16 , -2.720773918989096e-16 , 2.669838585322694e-16 , 1.410225153883685e-17 , 1.612538907160925e-16 , 9.654058016330888e-17 , -1.890577538271598e-17 , 6.000000000000011e+00 , 9.513569131699290e-16 , 2.923076923076926e+00 , -2.923076923076924e+00 , 1.083689174921934e-15 , 1.076923076923075e+00 , -1.244665152804543e-16 , 4.716817514756798e-16 , -1.076923076923074e+00 , -3.115359982302776e-16 , 1.035577213826967e-15 , -1.076923076923075e+00 , -2.898020261587938e-16 , 1.076923076923075e+00 , -6.461538461538460e+00 , -3.230769230769234e+00 , -3.230769230769230e+00 , 8.474025974025975e-01 , 8.474025974025970e-01 , 4.761904761904776e-02 , -4.859307359307361e-01 , 9.242424242424246e-01 , 4.761904761904699e-02 , -4.859307359307354e-01 , 4.761904761904687e-02 , 9.242424242424246e-01 , -4.859307359307349e-01 , 9.242424242424240e-01 , -4.859307359307361e-01 , 2.674496366560086e-15 , 3.769480519480528e+00 , -1.600649350649348e+00 , 6.271645021645026e-01 , 6.271645021645021e-01 , -1.595238095238095e+00 , -3.950216450216484e-02 , -3.257575757575755e-01 , 4.047619047619049e-01 , -3.950216450216418e-02 , 4.047619047619046e-01 , -3.257575757575750e-01 , -3.950216450216468e-02 , -3.257575757575751e-01 , -3.950216450216475e-02 , 1.187616848532256e-15 , -1.141233766233770e+00 , -1.332792207792209e+00 , 2.207575202219052e-16 , -2.777901811198238e-16 , 2.791322736517620e-17 , -2.777901811198237e-16 , 2.911943353274245e-17 , 2.791322736517606e-17 , 2.207575202219050e-16 , 2.791322736517622e-17 , 2.911943353274238e-17 , 2.207575202219052e-16 , 2.911943353274240e-17 , -2.777901811198238e-16 , 1.495643104025189e-15 , 5.749142600674892e-16 , 5.785328785701879e-16 , -1.230769230769229e+00 , 1.230769230769229e+00 , -2.125036258071589e-17 , 1.230769230769229e+00 , -6.765421556309548e-17 , 6.652664530371055e-16 , -1.230769230769228e+00 , -1.095044194210359e-16 , 2.966377143920340e-16 , -1.230769230769229e+00 , 2.688821387764051e-16 , 1.230769230769229e+00 , -7.384615384615383e+00 , -3.692307692307695e+00 , -3.692307692307693e+00 , 3.076923076923065e-01 , -3.076923076923065e-01 , 1.474514954580286e-17 , -3.076923076923064e-01 , 1.045170894276026e-16 , -1.569924745759010e-16 , 3.076923076923063e-01 , 3.675445364725860e-17 , 1.387778780781446e-17 , 3.076923076923065e-01 , 2.081668171172169e-17 , -3.076923076923067e-01 , 1.846153846153842e+00 , 9.230769230769212e-01 , 9.230769230769210e-01 , -5.454545454545449e-01 , -5.454545454545454e-01 , -3.434752482434078e-16 , -5.454545454545454e-01 , 1.090909090909090e+00 , 3.599551212651875e-17 , -5.454545454545450e-01 , 1.342784390623297e-16 , 1.090909090909090e+00 , -5.454545454545447e-01 , 1.090909090909090e+00 , -5.454545454545452e-01 , 6.661338147750939e-16 , -4.909090909090913e+00 , -1.636363636363636e+00 , 4.978354978354912e-02 , 4.978354978354928e-02 , 4.761904761904763e-01 , 4.978354978354910e-02 , -5.757575757575746e-01 , 4.761904761904760e-01 , 4.978354978354954e-02 , 4.761904761904762e-01 , -5.757575757575748e-01 , 4.978354978354975e-02 , -5.757575757575749e-01 , 4.978354978354930e-02 , 1.708702623837155e-15 , 1.876623376623375e+00 , -1.279220779220781e+00 , 6.926406926406922e-02 , 6.926406926406993e-02 , -3.809523809523805e-01 , 6.926406926407011e-02 , 2.424242424242414e-01 , -3.809523809523804e-01 , 6.926406926406892e-02 , -3.809523809523804e-01 , 2.424242424242415e-01 , 6.926406926406868e-02 , 2.424242424242415e-01 , 6.926406926406994e-02 , -3.774758283725532e-15 , -5.194805194805181e-01 , 1.350649350649349e+00 };
    return vdm1_data ;
  }

  static Scalar *get_vdm2_data () {
    static Scalar vdm2_data [] = { 2.138207620401393e-16 , -5.296001504906996e-16 , -3.344466760821487e-16 , 1.693684729682336e-17 , 1.380111147375324e-16 , 2.931020739659221e-17 , -2.046169020352741e-16 , 7.082060297735406e-17 , 1.077086996466895e-16 , -4.517917039559196e-16 , -5.738447378195157e-17 , -3.612959744206910e-16 , 2.404218317486606e-17 , 2.926244722879431e-16 , 6.000000000000005e+00 , -1.538461538461537e+00 , 1.538461538461539e+00 , 4.214118085114600e-16 , 1.538461538461537e+00 , -8.159326502882010e-16 , 1.415968884299016e-15 , -1.538461538461538e+00 , 7.331501946765722e-16 , 2.608360934010977e-16 , 2.461538461538462e+00 , -1.763654945081462e-16 , -2.461538461538462e+00 , -9.230769230769242e+00 , -4.615384615384620e+00 , -4.615384615384625e+00 , -4.545454545454543e-01 , -4.545454545454544e-01 , 1.763611236857894e-16 , -4.545454545454546e-01 , 9.090909090909080e-01 , 7.315551906914520e-16 , -4.545454545454543e-01 , 1.425086624048767e-16 , 9.090909090909093e-01 , 8.787878787878790e-01 , -1.757575757575758e+00 , 8.787878787878790e-01 , 3.316201751136366e-16 , -4.090909090909095e+00 , -1.363636363636366e+00 , -3.896103896103884e-01 , -3.896103896103911e-01 , 1.142857142857143e+00 , -3.896103896103907e-01 , -3.636363636363641e-01 , 1.142857142857142e+00 , -3.896103896103884e-01 , 1.142857142857143e+00 , -3.636363636363642e-01 , 2.770562770562786e-01 , 3.030303030303025e-01 , 2.770562770562759e-01 , 6.977505053774868e-15 , -7.792207792207252e-02 , 1.402597402597408e+00 , 1.677412584225566e-16 , -2.463890797160835e-16 , 1.293379605787913e-17 , -2.463890797160834e-16 , 6.571402523564778e-17 , 1.293379605787903e-17 , 1.677412584225564e-16 , 1.293379605787917e-17 , 6.571402523564774e-17 , 1.677412584225566e-16 , 6.571402523564775e-17 , -2.463890797160835e-16 , 1.242391014415922e-15 , 3.060816995607270e-16 , 4.644223870940331e-16 , -2.238095017285139e-16 , 1.566384414588318e-16 , 2.628766751803723e-17 , 1.566384414588317e-16 , 4.088339275164481e-17 , 2.628766751803735e-17 , -2.238095017285138e-16 , 2.628766751803723e-17 , 4.088339275164488e-17 , -2.238095017285139e-16 , 4.088339275164488e-17 , 1.566384414588318e-16 , -1.141343829562038e-15 , -7.940786834404776e-16 , -7.502915077396545e-16 , -1.538461538461538e+00 , 1.538461538461538e+00 , 1.350915906916939e-16 , 1.538461538461538e+00 , -5.932754287840680e-16 , 9.937797113002134e-16 , -1.538461538461537e+00 , 2.515349040166370e-17 , -1.405126015541214e-16 , -1.538461538461539e+00 , -1.752070710736575e-16 , 1.538461538461539e+00 , -9.230769230769242e+00 , -4.615384615384622e+00 , -4.615384615384623e+00 , -1.039664824720431e-17 , -3.051042292546611e-17 , -6.627185779317653e-17 , -3.051042292546609e-17 , 1.071789289658469e-16 , -6.627185779317650e-17 , -1.039664824720437e-17 , -6.627185779317651e-17 , 1.071789289658470e-16 , -1.039664824720439e-17 , 1.071789289658470e-16 , -3.051042292546612e-17 , 6.034132403478518e-17 , -3.527267316391545e-16 , 1.676256286379167e-16 , -4.545454545454545e-01 , -4.545454545454548e-01 , 9.269928574751063e-17 , -4.545454545454549e-01 , 9.090909090909084e-01 , 4.112378840237518e-16 , -4.545454545454545e-01 , 4.919838408196098e-16 , 9.090909090909086e-01 , -4.545454545454543e-01 , 9.090909090909088e-01 , -4.545454545454548e-01 , 6.661338147750939e-16 , -4.090909090909096e+00 , -1.363636363636366e+00 , -3.896103896103890e-01 , -3.896103896103903e-01 , 1.142857142857143e+00 , -3.896103896103907e-01 , -3.636363636363642e-01 , 1.142857142857143e+00 , -3.896103896103881e-01 , 1.142857142857143e+00 , -3.636363636363643e-01 , -3.896103896103874e-01 , -3.636363636363644e-01 , -3.896103896103903e-01 , 8.215650382226158e-15 , -7.792207792207306e-02 , -4.597402597402597e+00 };
    return vdm2_data ;
  }

  static Scalar *get_dmats0_data() {
    static Scalar dmats0_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 5.656854249492381e+00 , -1.776356839400250e-15 , -8.881784197001252e-16 , -8.881784197001252e-16 , 0.000000000000000e+00 , -2.583561076591731e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.077541110202794e-16 , -8.881784197001252e-16 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , -3.434996394210077e-15 , 1.697056274847714e+01 , 5.518433208703432e-16 , 7.200108702852338e-16 , -7.105427357601002e-15 , 8.881784197001251e-15 , 5.329070518200751e-15 , -6.055934969857329e-15 , -3.768221900841061e-15 , -2.085912009718399e-15 , 2.828427124746190e+00 , 8.367133432421036e-31 , 9.428090415820634e+00 , -9.428090415820636e-01 , 0.000000000000000e+00 , 3.983730122881619e-15 , -2.664535259100376e-15 , 3.552713678800501e-15 , 6.280369834735097e-16 , 0.000000000000000e+00 , 2.828427124746191e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 8.485281374238570e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.991865061440809e-15 , -1.776356839400250e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 };
    return dmats0_data;
  }

  static Scalar *get_dmats1_data() {
    static Scalar dmats1_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.828427124746190e+00 , -8.881784197001251e-16 , -4.440892098500626e-16 , -4.440892098500626e-16 , 0.000000000000000e+00 , -1.291780538295865e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 5.387705551013972e-17 , -4.440892098500626e-16 , 8.485281374238571e+00 , -3.552713678800500e-15 , 1.776356839400250e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , -3.226279360870944e-16 , -3.552713678800501e-15 , 0.000000000000000e+00 , 2.826166425630795e-15 , 1.776356839400250e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.414213562373093e+00 , 8.485281374238570e+00 , -9.428090415820630e-01 , -4.714045207910313e-01 , -5.329070518200751e-15 , 4.306358058968712e-15 , 3.552713678800501e-15 , -3.108624468950438e-15 , -1.684382952588527e-15 , -1.110223024625157e-15 , 1.414213562373092e+00 , 1.414213562373095e+01 , 4.714045207910317e+00 , -4.714045207910316e-01 , -3.552713678800501e-15 , 1.442636293724256e-14 , 3.552713678800501e-15 , -5.329070518200751e-15 , -2.350516767363621e-15 , -1.332267629550188e-15 , 1.414213562373096e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 4.242640687119285e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 9.959325307204047e-16 , -8.881784197001252e-16 , -2.828427124746193e+00 , 3.552713678800502e-15 , 1.885618083164127e+01 , 9.428090415820634e-01 , 0.000000000000000e+00 , 1.108915748048262e-14 , 0.000000000000000e+00 , 3.552713678800501e-15 , -1.516215403173636e-15 , 2.664535259100376e-15 , 4.242640687119286e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 1.272792206135786e+01 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.099619172461089e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 };
    return dmats1_data;
  }

  static Scalar *get_dmats2_data() {
    static Scalar dmats2_data[] = { 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.828427124746190e+00 , -8.881784197001251e-16 , -4.440892098500626e-16 , -4.440892098500626e-16 , 0.000000000000000e+00 , -1.291780538295865e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 5.387705551013972e-17 , -4.440892098500626e-16 , 2.828427124746190e+00 , -8.881784197001251e-16 , -8.881784197001252e-16 , -4.440892098500626e-16 , 0.000000000000000e+00 , -1.291780538295865e-15 , 0.000000000000000e+00 , -8.881784197001252e-16 , 5.387705551013972e-17 , -4.440892098500626e-16 , 1.131370849898476e+01 , -3.552713678800501e-15 , -1.776356839400250e-15 , -1.776356839400250e-15 , 0.000000000000000e+00 , -5.167122153183461e-15 , 0.000000000000000e+00 , 0.000000000000000e+00 , 2.155082220405589e-16 , -1.776356839400250e-15 , 1.414213562373093e+00 , 8.485281374238571e+00 , -9.428090415820628e-01 , -4.714045207910313e-01 , -7.105427357601002e-15 , 4.306358058968712e-15 , 3.552713678800501e-15 , -3.996802888650564e-15 , -2.572561372288652e-15 , -1.554312234475219e-15 , 1.414213562373094e+00 , 2.828427124746190e+00 , 4.714045207910318e+00 , -4.714045207910318e-01 , -1.332267629550188e-15 , 5.544578740241310e-15 , -1.332267629550188e-15 , 0.000000000000000e+00 , -5.741599279633705e-16 , 2.220446049250313e-16 , 1.414213562373092e+00 , 1.697056274847714e+01 , 1.077541110202802e-16 , 4.242640687119286e+00 , -7.105427357601002e-15 , 8.881784197001251e-15 , 3.552713678800501e-15 , -5.167756550157204e-15 , -2.556781148080097e-15 , -2.664535259100376e-15 , 1.414213562373094e+00 , 2.220446049250317e-16 , 7.542472332656508e+00 , -4.714045207910318e-01 , 0.000000000000000e+00 , 3.499153821777232e-15 , -1.543153930928705e-15 , 0.000000000000000e+00 , 1.202196911436880e-15 , 8.881784197001252e-16 , 1.414213562373094e+00 , 1.776356839400251e-15 , 1.697056274847714e+01 , 4.242640687119286e+00 , 0.000000000000000e+00 , 7.267375722618292e-15 , -2.994333975045686e-15 , 0.000000000000000e+00 , 1.884110950420530e-15 , 5.329070518200751e-15 , -7.071067811865475e+00 , 3.552713678800501e-15 , 0.000000000000000e+00 , 2.121320343559643e+01 , 0.000000000000000e+00 , 1.001161637027983e-14 , 4.131495527425913e-15 , 3.552713678800501e-15 , 4.710277376051325e-15 , 0.000000000000000e+00 };
    return dmats2_data;
  }
#endif


  public:

  /** \brief Constructor.
  */
  Basis_F2_TET_I2_FEM_FIAT() : numDof_(15), isSet_(false) , vdm0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_vdm0_data(),15,15,10) ) ),vdm1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_vdm1_data(),15,15,10) ) ),vdm2_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_vdm2_data(),15,15,10) ) ),dmats0_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_dmats0_data(),10,10,10) ) ),dmats1_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_dmats1_data(),10,10,10) ) ),dmats2_( rcp( new Teuchos::SerialDenseMatrix<int,Scalar>(Teuchos::View,Basis_F2_TET_I2_FEM_FIAT::get_dmats2_data(),10,10,10) ) ) { }
  
  /** \brief Initializes arrays needed for the lookup of the local enumeration (DoF Id) of a 
    degree-of-freedom by its local DoF tag and the reverse lookup of the DoF tag by DoF Id.
   */
  void initialize();
  
  
  /** \brief Returns FieldContainer with multi-indexed quantity with the values of an operator 
  applied to a set of FEM basis functions, evaluated at a set of
  points in a <strong>reference</strong> cell. The rank of the return
  FieldContainer argument depends on the number of points, number of
  basis, functions, their rank, and the rank of the operator applied to them; see 
  FieldContainer::resize(int,int,EField,EOperator,int) for summary of
  the admissible index combinations.
  In particular, the admissible range of the <var>operatorType</var> argument depends on the rank of 
  the basis functions and the space dimension.Because FEM
  reconstruction relies on COMPLETE or INCOMPLETE polynomials, i.e.,
  smooth local spaces, the admissible range of <var>operatorType</var>
  always includes VALUE, D0, D1,...,D10. If derivative order exceeds
  polynomial degree, output container is filled with 0. 
 
      \param outputValues   [out]         - FieldContainer with the computed values (see
                                            implementation for index ordering)
      \param inputPoints     [in]         - evaluation points on the reference cell  
      \param operatorType    [in]         - the operator being applied to the basis function
  */    

  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const EOperator                        operatorType) const;
  
  
  /** \brief This method is intended for FVD reconstructions and should not be used here. Its 
    invocation will throw an exception. 
  */  
  void getValues(FieldContainer<Scalar>&                  outputValues,
                 const Teuchos::Array< Point<Scalar> >& inputPoints,
                 const Cell<Scalar>&                    cell) const;

  
  int getNumLocalDof() const;
  
  
  int getLocalDofEnumeration(const LocalDofTag dofTag);

  
  LocalDofTag getLocalDofTag(int id);

  
  const Teuchos::Array<LocalDofTag> & getAllLocalDofTags();

  
  ECell getCellType() const;

  
  EBasis getBasisType() const;

  
  ECoordinates getCoordinateSystem() const;

  
  int getDegree() const;

};

} // namespace Intrepid

#include "Intrepid_F2_TET_I2_FEM_FIATDef.hpp"

#endif

