The "external" Trilinos package makes it possible to easily add additional
packages that are external to Trilinos to the Trilinos build process.

To add a package with a top level directory called NEW (that has been properly
set up, more about this below) to the build process:

1. Put the code into a new directory Trilinos/packages/external/NEW. 

2. In Trilinos/packages/external, type ./CustomizeExternal.csh NEW

3. Build Trilinos in the usual way, adding any arguments necessary for NEW.

Note that NEW can be a single package or a multilevel configure structure 
like Trilinos.  If more than one package is to be added to the build process
at the Trilinos/packages/external level, modify the above steps as follows:

1. Put the code into new directories Trilinos/packages/external/NEW 
Trilinos/packages/external/NEW1 (and so on)

2. In Trilinos/packages/external, type ./CustomizeExternal.csh NEW NEW1 ...

3. Build Trilinos in the usual way, adding '--enable-external' to the list of 
configure arguments.  Also add any configure arguments necessary for the 
external package(s) being added to the build process.

The setup requirements for NEW are fairly minimal:

1. NEW must recognize the "configure" command in the same way that Trilinos
packages do.

2. sed must be in your path.

3. Autoconf version 2.59 and automake version 1.8.2 must be in your path when 
adding *more than one* package at the external/ level.

It is suggested that packages also:

1. Use Autoconf and Automake.

2. Support the same basic set of options that Trilinos packages support.

3. Support the make install make target.

4. Utilize makefile.export - both reading from other packages and producing
a makefile.export.NEW file for other applications to use.  **If starting with
makefile.export files from a Trilinos package, keep in mind that the 
relative location of the top level Trilinos directory will be ../../../ 
instead of ../../.

