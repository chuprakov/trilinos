[io]
XMLheaders = Tpetra__MultiVector__decl_8hpp.xml
XMLclass   = classTpetra_1_1MultiVector.xml
template   = Cthulhu_TpetraMultiVector.hpp.tmpl
output     = MultiVector/Cthulhu_TpetraMultiVector.hpp_

[header]
skip =

[function]
skip = MultiVector;~MultiVector;replaceGlobalValue;sumIntoGlobalValue;replaceLocalValue;sumIntoLocalValue;replaceMap;reduce;operator=;subCopy;subCopy;subView;subView;subViewNonConst;subViewNonConst;offsetView;offsetViewNonConst;getVector;getVectorNonConst;get1dCopy;get2dCopy;get1dView;get2dView;get1dViewNonConst;get2dViewNonConst;getLocalMV;getLocalMVNonConst;getStride;isConstantStride
removeref =

[inheritance]
parent = : public virtual Cthulhu::MultiVector<Scalar,LocalOrdinal,GlobalOrdinal,Node>

[member]
name = vec_

[type]
wrapped = const Map< LocalOrdinal, GlobalOrdinal, Node > &;LookupStatus;LocalGlobal;const RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;ProfileType;const RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node, LocalMatOps > > &;OptimizeOption;const MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node, LocalMatOps > >
