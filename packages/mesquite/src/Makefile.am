LIBTOOL = @LIBTOOL@ @MSQ_LIBTOOL_FLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@

# Need to be explicit about these for old versions of automake
OLD_AM_GENERATED_HDRS = include/mesquite_config.h \
                        include/mesquite_version.h 


EXTRA_DIST = 	$(OLD_AM_GENERATED_HDRS:=.in) \
		include/mesquite_config.win.h \
	        CMakeList.txt 

BUILT_SOURCES = include/Mesquite_all_headers.hpp cppflags.make
MSQ_SRCS=
MSQ_HDRS=
MSQ_INCLUDES =
INCLUDED_MAKEFILES =
lib_LTLIBRARIES = libmesquite.la
libmesquite_la_DEPENDENCIES=
# Tell libtool that there are no undefined symbols when linking 
# the library.  This means that either the symbol is defined in
# the library or we include a -lname argument to specify which 
# other library provides the symbol.  Libtool requires this 
# guarantee to generate libraries on platforms for which shared
# libs cannot have any unmet depenendencies (windows, and maybe AIX)
libmesquite_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined

include Mesh/Makefile.am
include Control/Makefile.am
include Control/Wrappers/Makefile.am
include MappingFunction/Makefile.am
include MappingFunction/Lagrange/Makefile.am
include MappingFunction/Linear/Makefile.am
include Misc/Makefile.am
include ObjectiveFunction/Makefile.am
include QualityAssessor/Makefile.am
include QualityImprover/Makefile.am
include QualityImprover/TopologyModifier/Makefile.am
include QualityImprover/VertexMover/Makefile.am
include QualityImprover/VertexMover/ConjugateGradient/Makefile.am
include QualityImprover/VertexMover/Relaxation/Makefile.am
include QualityImprover/VertexMover/SteepestDescent/Makefile.am
include QualityImprover/VertexMover/NonSmoothDescent/Makefile.am
include QualityImprover/VertexMover/FeasibleNewton/Makefile.am
include QualityImprover/VertexMover/Randomize/Makefile.am
include QualityImprover/VertexMover/TrustRegion/Makefile.am
include QualityImprover/VertexMover/QuasiNewton/Makefile.am
include QualityMetric/Makefile.am
include QualityMetric/Shape/Makefile.am
include QualityMetric/Smoothness/Makefile.am
include QualityMetric/TMP/Makefile.am
include QualityMetric/Untangle/Makefile.am
include QualityMetric/Volume/Makefile.am
include TargetCalculator/Makefile.am
include TargetMetric/Makefile.am
include TargetMetric/Misc/Makefile.am
include TargetMetric/Shape/Makefile.am
include TargetMetric/ShapeOrient/Makefile.am
include TargetMetric/ShapeSize/Makefile.am
include TargetMetric/ShapeSizeOrient/Makefile.am
include TargetMetric/Size/Makefile.am
include TargetMetric/Untangle/Makefile.am

libmesquite_la_includedir = $(includedir)
libmesquite_la_SOURCES = $(MSQ_SRCS) 

libmesquite_la_include_HEADERS = include/Mesquite.hpp \
                                 include/Mesquite_all_headers.hpp \
                                 $(top_builddir)/src/include/mesquite_config.h \
				 $(top_builddir)/src/include/mesquite_version.h \
                                 include/MeshInterface.hpp \
				 include/ParallelMeshInterface.hpp \
				 include/ParallelHelperInterface.hpp \
				 include/CurveDomain.hpp \
                                 $(MSQ_HDRS)
libmesquite_la_LIBADD = $(MESQUITE_LIBS)
AM_CPPFLAGS += -Iinclude \
               -I$(srcdir)/include  \
               $(MSQ_INCLUDES) \
	       $(IBASE_INCL)

include/Mesquite_all_headers.hpp: $(MSQ_HDRS)
	@echo "Generating $@..."
	@echo '/* NOTE: This file is generated by make.' > $@
	@echo ' *       Do not manually edit it.'       >> $@
	@echo ' */'                                     >> $@
	@echo '#ifndef MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#define MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#include "Mesquite.hpp"'                 >> $@
	@echo '#include "MeshInterface.hpp"'            >> $@ 
	@echo '#include "ParallelMeshInterface.hpp"'    >> $@
	@echo '#include "ParallelHelperInterface.hpp"'  >> $@ 
	@echo '#include "CurveDomain.hpp"'  >> $@ 
	@for file in $(MSQ_HDRS); do \
	   n=`expr X"$$file" : X".*/\([^/]*\)"`;\
	   test -z "$$n" || echo "#include \"$$n\"" >> $@; \
	done
	@echo '#endif'                                  >> $@ 


$(RECURSIVE_TARGETS) distdir: cppflags.make
cppflags.make: $(MSQ_HDRS) Makefile.am ../config.status
	@echo "Generating $@..."
	@echo "INCLUDES = -I\$$(top_srcdir)/src/include \\" > $@
	@for flag in $(MSQ_INCLUDES); do \
	  n=`expr X"$$flag" : X"-I$(srcdir)/\(.*\)" || true`; \
	  if test "x$$n" != "x"; then \
	    echo "	-I\$$(top_srcdir)/src/$$n \\"     >> $@ ; \
	  fi ; \
	done
	@echo "	-I\$$(top_builddir)/src/include \\"       >> $@ 
	@echo "	-I\$$(top_builddir)/testSuite \\"         >> $@
	@echo "	-I\$$(top_srcdir)/itaps \\"               >> $@ 
	@echo "	-I\$$(top_builddir)/itaps \\"             >> $@
	@echo "	\$$(IBASE_INCL)"                          >> $@

MOSTLYCLEANFILES = include/Mesquite_all_headers.hpp 
DISTCLEANFILES = cppflags.make  $(OLD_AM_GENERATED_HDRS)

