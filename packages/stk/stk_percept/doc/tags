<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>main</name>
    <title>STK Encore Documentation</title>
    <filename>main</filename>
    <docanchor file="main">ex_string_function</docanchor>
    <docanchor file="main">overview_sec</docanchor>
    <docanchor file="main">intro_sec</docanchor>
    <docanchor file="main">quickstart_sec</docanchor>
    <docanchor file="main">future_dev</docanchor>
    <docanchor file="main">math_sec</docanchor>
  </compound>
  <compound kind="file">
    <name>array.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>array_8hpp</filename>
    <class kind="struct">array</class>
  </compound>
  <compound kind="file">
    <name>BucketOp.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>BucketOp_8hpp</filename>
    <class kind="class">stk::encore::BucketOp</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>BuildBoundingBoxes.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>BuildBoundingBoxes_8hpp</filename>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <class kind="class">stk::encore::BuildBoundingBoxes</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXTRA_PRINT</name>
      <anchorfile>BuildBoundingBoxes_8hpp.html</anchorfile>
      <anchor>a0c346f9df419cb26bec71316858b8ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af113a45586b6c1ae850d4754cb1cea02</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 3 &gt;::AABoundingBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3100e4f418fe0bfb87c072ea827adc64</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 3 &gt;::BoundingPoint &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad116ee49e4acfa77875679818c64c9cc</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 2 &gt;::AABoundingBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a057085e910f3beb064d5a0b54c108a32</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 2 &gt;::BoundingPoint &amp;bbox)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellTopology.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>CellTopology_8hpp</filename>
    <includes id="stk__encore__code__types_8hpp" name="stk_encore_code_types.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/stk_encore_code_types.hpp</includes>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::Elem</namespace>
    <namespace>shards</namespace>
    <member kind="typedef">
      <type>shards::CellTopology</type>
      <name>CellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ab5c9a058c04bb3d5cd3e0f166e707402</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TopologyId</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a3f2dd4455b965feb34ee39d4eac37655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE_0</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747af05654694913dd3a1132ca2017db4aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a6651cc6336eb7273cf651371d0fff33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a0b17bc83f80f458fa28f662a9cf73676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a60fb96009ee448077d972dccc00f8702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a42a04cd8324940acde3a506806dcfa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2be9fd02fbd16e572d90279e8daa2572</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a1f15a237aeef81cd456a119794fa69a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a0b4459f109a6b514a66658f39648f0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a9f2a8ec256228c7d710fae9e64dc34a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_9</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a25368b37047057e91c6c0ec29758184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTICLE_1</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a365e695aadf9bb94dbccca875ab9dddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROD_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aea6cc045ee7e44eb57781d9b0e6705f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROD_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a59c7cb2a686086e046563e11ae6bd328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_LINE_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a289f740976e39f12ba7e6d747393f437</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_LINE_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adbbf75e1fdc4b2697780929d4ced9ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_TRI_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a80b535a5f11739edfeed02ef4ba5ad83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_TRI_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a84b61749fa22f57f73954de1875e821a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747afa1d5d1298ca901cd5bda67a8d856b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_9</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adcb3307a15424bcc891e575682cfdd22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ac7edb0c8435d08b29e4569aa218e68f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_20</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a84842184330a5dc5647098448e80ef88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_27</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2b85dd58af4f4d8017c4b1f90ebc3d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ad124d0f23ef80a9987ad61ecae4c1ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a360cdeb7cf4f68f1de5e40f8440ac38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_10</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a701838d9d8ebb4ab728082071f4531d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2e31d89f3b89fb7aa967a8df2f3d2419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_15</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a1bba65338ab36eaf46b08e1a9ca362aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adde1d1a186cdb9535efc1e98d8662653</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_13</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aabccd0f146139b91405edc91d82e25fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2c3d4c5129bc39240909b08b0aedb59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_18</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a30c2dd87cb199e6543a461c155b5dcee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_14</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a98a1d7fe827bcaba77dcb7847e4a73b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_PENT_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aec0d80207611b14d235292fa3d514c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_HEX_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ac0deed0285d35e52e326d7e2d00f5ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a81dfe05c2880c03e405746b3aec558d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TopologyId</type>
      <name>getCellTopologyId</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a096fc7fdee00255e6de6bc4cd9ed0ec0</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getBasicCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a0cf15e938c9f7b28268601451330867a</anchor>
      <arglist>(TopologyId id)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getBasicCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a2163460ba4173963b59d79337d188db8</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>nodeCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a927811aef229d0d881f23f38a2c64db1</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>edgeCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a7636f1b1c1d56375ae8f3eac8e56f73b</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>faceCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae9cf8e129f70af3c8c47915bf864cb0a</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>sideCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ac3e3fe6e85cefebcb57c5ffcfa216322</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ab7a4b627fc18c0ba585dc61cf0625972</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned spatial_dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolidElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a297bda140f400fbae10165f8d186055b</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned spatial_dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShellElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a145ace072614f70d78cda45ed0144f54</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRodElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>af8fddd9fd0e404a36143f31e18c0048f</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParticleElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ad0b01fa8a956cb14da2fbee28ce4cdcf</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getEdgeNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a060f2b30c61bd76c04831f6968baffda</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned edge, unsigned node_of_edge)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaceNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>acb28b106b2a9a3303bcce6a7ad2f39e2</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face, unsigned node_of_face)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSideNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ad2e20b88d57ae85f7ec341457dc22727</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned side, unsigned node_of_side)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaceEdge</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a987279586d5944942cf3a096038b574c</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face, unsigned edge_of_face)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfEdge</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>abfbb351d66874e8b2a6fde22bfeb9131</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned edge)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfFace</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ac2d371ddc93840296005aa4eed95a342</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfSide</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a2a03cdcc2bd19a541d05094ea9c8c049</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned side)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCellTopologySubsetOf</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>adfedce86224d8cb0c0ea5e94fc401141</anchor>
      <arglist>(const CellTopology &amp;cell_topology, const CellTopology &amp;richer)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getParametricDimension</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a42dcb4f761fd2912f024f54b22c1fc42</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findReversePermutation</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a0feeadb0edc5d45714366a15356d06df</anchor>
      <arglist>(const CellTopologyData &amp;top, int permutation_ord)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>a7f9c6c0c5412e95bbaf1b98e0d878083</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>aaba1023e0ea247b9bc17c43b03edf0d2</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>a2c87731429a217e013b9b71318987845</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Colorer.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</path>
    <filename>Colorer_8hpp</filename>
    <includes id="stk__mesh_8hpp" name="stk_mesh.hpp" local="no" imported="no">stk_encore/stk_mesh.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <class kind="class">stk::encore::Colorer</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>CompositeFunction_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <class kind="class">stk::encore::CompositeFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>ComputeBases.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>ComputeBases_8hpp</filename>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <class kind="class">stk::encore::ComputeBases</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>ComputeFieldValues.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>ComputeFieldValues_8hpp</filename>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="IntrepidManager_8hpp" name="IntrepidManager.hpp" local="no" imported="no">stk_encore/norm/IntrepidManager.hpp</includes>
    <class kind="class">stk::encore::ComputeFieldValues</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>ConstantFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>ConstantFunction_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <class kind="class">stk::encore::ConstantFunction</class>
    <class kind="class">stk::encore::ConstantFunctionVec</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>Dimensions.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>Dimensions_8hpp</filename>
    <class kind="class">stk::encore::Dimensions</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aec005c03c92406d9132b3043c24a6f01</anchor>
      <arglist>(std::ostream &amp;out, const Dimensions &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Documentation.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>Documentation_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Edge.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>Edge_8hpp</filename>
    <class kind="class">stk::encore::MyEdge</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>ElementOp.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>ElementOp_8hpp</filename>
    <class kind="class">stk::encore::ElementOp</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>Encore.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>Encore_8hpp</filename>
    <includes id="ExceptionWatch_8hpp" name="ExceptionWatch.hpp" local="no" imported="no">stk_encore/ExceptionWatch.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_INTREPID_DEBUG</name>
      <anchorfile>Encore_8hpp.html</anchorfile>
      <anchor>ac0ec79d2925cfa9111672b3b5dea07f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_PGI_7_1_COMPILER_BUG_WORKAROUND</name>
      <anchorfile>Encore_8hpp.html</anchorfile>
      <anchor>a0edba60b025427bbf021a9f22b1718a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EncoreMesh.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>EncoreMesh_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="Name_8hpp" name="Name.hpp" local="no" imported="no">stk_encore/Name.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="yes" imported="no">ShardsInterfaceTable.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <class kind="class">stk::encore::EncoreMesh</class>
    <class kind="class">stk::encore::EncoreMesh::GMeshSpec</class>
    <class kind="struct">stk::encore::EncoreMesh::FieldCreateOrder</class>
    <namespace>Intrepid</namespace>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="typedef">
      <type>mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac33b82eb06a879b62e137d77b68b84de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aafa1b9733aca8c19cfdfcd484e37d3f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EncoreMeshReadWrite.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>EncoreMeshReadWrite_8hpp</filename>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::io_util</namespace>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodeblocks_meta</name>
      <anchorfile>namespacestk_1_1encore_1_1io__util.html</anchorfile>
      <anchor>aa71828a2be25a08a26f508f85ff71d77</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta, int &amp;spatial_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gaa7577a053f5665c7475941ae3c8f4176</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gae14054bc090314029a28bbd89373d337</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga0f537326216a705795528e00a73e638f</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga4d20ab136871d5d7e9c1ec797eddbe1a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodeblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga652d7b74de1b3a64571453f9aa3d7b73</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga011b943e4e92f9f10d554671dd46d536</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga222c9f76d830b85321fc97caf519ce87</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga2d39815dfc6f38e2da28de7c9940f465</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga24144c1ff3bcf528e5180b235f6c6c14</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_input_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gafee9db305f97a5198a35a2d6968bd17e</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_output_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga27708937428399675529d263e15ea53a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>example_8hpp</filename>
    <class kind="class">Shape</class>
    <class kind="class">Circle</class>
    <class kind="class">Square</class>
  </compound>
  <compound kind="file">
    <name>ExceptionWatch.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>ExceptionWatch_8hpp</filename>
    <class kind="class">stk::encore::ExceptionWatch</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TOKENPASTE_LOC</name>
      <anchorfile>ExceptionWatch_8hpp.html</anchorfile>
      <anchor>ae402018f257b6a5077347b465eeab0cf</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOKENPASTE2_LOC</name>
      <anchorfile>ExceptionWatch_8hpp.html</anchorfile>
      <anchor>a705a99927092b5fa6cae170a9289cead</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXCEPTWATCH</name>
      <anchorfile>ExceptionWatch_8hpp.html</anchorfile>
      <anchor>a7188f14021c515a204462815d45e08f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FieldFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>FieldFunction_8hpp</filename>
    <includes id="Encore_8hpp" name="Encore.hpp" local="no" imported="no">stk_encore/Encore.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="Searcher_8hpp" name="Searcher.hpp" local="no" imported="no">stk_encore/function/internal/Searcher.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <class kind="class">stk::encore::FieldFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXTRA_PRINT</name>
      <anchorfile>FieldFunction_8hpp.html</anchorfile>
      <anchor>a0c346f9df419cb26bec71316858b8ddf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>function.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>function_8hpp</filename>
    <class kind="class">stk::encore::utils::Function</class>
    <class kind="class">stk::encore::utils::FunctionWithGrad</class>
    <class kind="class">stk::encore::utils::CompositeFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::utils</namespace>
  </compound>
  <compound kind="file">
    <name>Function.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>Function_8hpp</filename>
    <includes id="Dimensions_8hpp" name="Dimensions.hpp" local="no" imported="no">stk_encore/function/internal/Dimensions.hpp</includes>
    <includes id="GenericFunction_8hpp" name="GenericFunction.hpp" local="no" imported="no">stk_encore/function/internal/GenericFunction.hpp</includes>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <class kind="class">stk::encore::Function</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1efd9db3ecca8ae23d694291ba993106</anchor>
      <arglist>(std::ostream &amp;out, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3383052738deed23d69df207b9bac405</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalPrint</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a86c1ef02f3d81c1cd20680df51012e2e</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>MDArray</type>
      <name>evalVec3</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af31224a5aac5f1c1c6cc8fa131955622</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalVec3Print</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad37d95e9dc731da5fed2e42afc33f2ce</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FunctionOperator.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>FunctionOperator_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <class kind="class">stk::encore::FunctionOperator</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>FunctionWithIntrepidRequest.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>FunctionWithIntrepidRequest_8hpp</filename>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="IntrepidManager_8hpp" name="IntrepidManager.hpp" local="no" imported="no">stk_encore/norm/IntrepidManager.hpp</includes>
    <class kind="class">stk::encore::FunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::ExampleFunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::Example2FunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::l2NormOpScalar</class>
    <class kind="class">stk::encore::l2NormOpScalarFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>GenericFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>GenericFunction_8hpp</filename>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="Dimensions_8hpp" name="Dimensions.hpp" local="no" imported="no">stk_encore/function/internal/Dimensions.hpp</includes>
    <class kind="class">stk::encore::GenericFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a10e5163c971daf4d612f32989494a0c9</anchor>
      <arglist>(std::ostream &amp;out, GenericFunction &amp;func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HasValue.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>HasValue_8hpp</filename>
    <class kind="class">stk::encore::HasValue</class>
    <class kind="class">stk::encore::HasConstValue</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>index.dox</name>
    <path>/scratch/srkenno/code/stk_encore/dox/</path>
    <filename>index_8dox</filename>
  </compound>
  <compound kind="file">
    <name>IntegratedOp.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>IntegratedOp_8hpp</filename>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="CompositeFunction_8hpp" name="CompositeFunction.hpp" local="no" imported="no">stk_encore/function/CompositeFunction.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="ConstantFunction_8hpp" name="ConstantFunction.hpp" local="no" imported="no">stk_encore/function/ConstantFunction.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <includes id="MultipleFieldFunction_8hpp" name="MultipleFieldFunction.hpp" local="no" imported="no">stk_encore/function/MultipleFieldFunction.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="ExceptionWatch_8hpp" name="ExceptionWatch.hpp" local="no" imported="no">stk_encore/ExceptionWatch.hpp</includes>
    <includes id="IntrepidManager_8hpp" name="IntrepidManager.hpp" local="no" imported="no">stk_encore/norm/IntrepidManager.hpp</includes>
    <class kind="class">stk::encore::IntegratedOp</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>IntrepidManager.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/norm/</path>
    <filename>IntrepidManager_8hpp</filename>
    <includes id="Encore_8hpp" name="Encore.hpp" local="no" imported="no">stk_encore/Encore.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="ComputeBases_8hpp" name="ComputeBases.hpp" local="no" imported="no">stk_encore/function/internal/ComputeBases.hpp</includes>
    <class kind="class">stk::encore::IntrepidManager</class>
    <class kind="class">stk::encore::IntrepidManager::temp</class>
    <class kind="class">stk::encore::IntrepidManager::CubaturePoints</class>
    <class kind="class">stk::encore::IntrepidManager::CubatureWeights</class>
    <class kind="class">stk::encore::IntrepidManager::CellWorkSet</class>
    <class kind="class">stk::encore::IntrepidManager::PhysicalCoords</class>
    <class kind="class">stk::encore::IntrepidManager::Jacobian</class>
    <class kind="class">stk::encore::IntrepidManager::JacobianInverse</class>
    <class kind="class">stk::encore::IntrepidManager::JacobianDet</class>
    <class kind="class">stk::encore::IntrepidManager::WeightedMeasure</class>
    <class kind="class">stk::encore::IntrepidManager::IntegrandValuesDOF</class>
    <class kind="class">stk::encore::IntrepidManager::IntegrandValues</class>
    <class kind="class">stk::encore::IntrepidManager::IntegralDOF</class>
    <class kind="class">stk::encore::IntrepidManager::Integral</class>
    <class kind="class">stk::encore::IntrepidManager::FieldValues</class>
    <class kind="class">stk::encore::IntrepidManager::Bases</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>IM_TAG</name>
      <anchorfile>IntrepidManager_8hpp.html</anchorfile>
      <anchor>a1182c2c4bc6b70197142fd2dc1dee140</anchor>
      <arglist>(ADT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>IntrepidManager_8hpp.html</anchorfile>
      <anchor>a60118b2529a5c3591e53760fbabe35b1</anchor>
      <arglist>(ADT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_IMPLEMENTATION</name>
      <anchorfile>IntrepidManager_8hpp.html</anchorfile>
      <anchor>a5066a8df6a644bb5c5cfa9542cd5ed40</anchor>
      <arglist>(ADT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM</name>
      <anchorfile>IntrepidManager_8hpp.html</anchorfile>
      <anchor>a8a9642099f7ee19846b9c466b0282005</anchor>
      <arglist>(AClass)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a2737e30b9f07283a43707b6cee2b2b51</anchor>
      <arglist>(Elements_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aba216965ea571416f720cdfd7263d2b7</anchor>
      <arglist>(Cub_Points_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aca747617fcf5d199c046794d7d14ddd6</anchor>
      <arglist>(NodesPerElem_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>abd91f223b8d0301a795ebf63390421eb</anchor>
      <arglist>(Spatial_Dim_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7e457f060c40beaa50ccc8b6a1b5c933</anchor>
      <arglist>(DOFs_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3d71af4f4fc066b5a8364f72c8537232</anchor>
      <arglist>(BasisFields_Tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tni</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af64389b055afba1869ad7e27b4893660</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac92363145b9cf9844ea29f02d15186a1</anchor>
      <arglist>(std::ostream &amp;os, const shards::Array&lt; double, NaturalOrder &gt; &amp;container)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IsInElement.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>IsInElement_8hpp</filename>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <class kind="class">stk::encore::IsInElement</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>MDArray.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>MDArray_8hpp</filename>
    <class kind="class">stk::encore::MDArrayString</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; double &gt;</type>
      <name>MDArray</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1bc90e6da13163d3b697b96c90bc8afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; int &gt;</type>
      <name>MDArrayInt</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aa3979627e4213229da818624dd8a75ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; unsigned &gt;</type>
      <name>MDArrayUInt</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a99f1ad723842db5decce28fd196ccb75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshObjTopology.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>MeshObjTopology_8hpp</filename>
    <includes id="CellTopology_8hpp" name="CellTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/CellTopology.hpp</includes>
    <class kind="class">stk::encore::Elem::MeshObjTopology</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::Elem</namespace>
  </compound>
  <compound kind="file">
    <name>MultipleFieldFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>MultipleFieldFunction_8hpp</filename>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="IntrepidManager_8hpp" name="IntrepidManager.hpp" local="no" imported="no">stk_encore/norm/IntrepidManager.hpp</includes>
    <class kind="class">stk::encore::MultipleFieldFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>Name.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>Name_8hpp</filename>
    <class kind="class">stk::encore::Name</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>NodeRegistry.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</path>
    <filename>NodeRegistry_8hpp</filename>
    <includes id="stk__mesh_8hpp" name="stk_mesh.hpp" local="no" imported="no">stk_encore/stk_mesh.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="SubDimCell_8hpp" name="SubDimCell.hpp" local="no" imported="no">stk_encore/mesh/util/SubDimCell.hpp</includes>
    <class kind="class">stk::encore::NodeRegistry</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="typedef">
      <type>boost::tuple&lt; EntityId, EntityId &gt;</type>
      <name>SubDimCellData</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af7c590bd54c79e3f103b8f77f6a918b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SubDimCell&lt; EntityId &gt;</type>
      <name>SubDimCell_EntityId</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a6e26ec407a5b7e2b59eddb83f0f8b11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; SubDimCell_EntityId, SubDimCellData &gt;</type>
      <name>SubDimCellToDataMap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac239ff52cce9e5e87e394085934b087a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; EntityRank, unsigned, EntityId, EntityId &gt;</type>
      <name>CommDataType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>adb9d8e315d4731f4258f9a4ee0801e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SubDimCellDataEnum</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL_NODE_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714ae0cc4caaa35af583d74fe6db46ea1e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNING_ELEMENT_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714ab635b6daf6328580dffedabda2c8dc3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CommDataTypeEnum</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEEDED_ENTITY_RANK</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a5dae9c940f3292255fa248a82d85525f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUB_DIM_ENTITY_ORDINAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a62c522ca429445af2ad6bda68ee2ed5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_OWNING_ELEMENT_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a60a351c8d3fbcb1318ce69dca0942de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW_NODE_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a0ba68fc8c934363b4ee935fdf75556b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SERIAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca3b281889d675de19ab72fefd7f77dbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_BUFFER_SIZING</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836caba9304a447c332c519ff1f947eebe02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_BUFFERS_ALLOCD</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca9ddab05c8c4b9a853771246a04dfb198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SEND_DONE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca0b3cbac401d0ee22fa9ecfb60a082bb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Norm.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/norm/</path>
    <filename>Norm_8hpp</filename>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="MDArray_8hpp" name="MDArray.hpp" local="no" imported="no">stk_encore/function/MDArray.hpp</includes>
    <includes id="FunctionOperator_8hpp" name="FunctionOperator.hpp" local="no" imported="no">stk_encore/function/FunctionOperator.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="CompositeFunction_8hpp" name="CompositeFunction.hpp" local="no" imported="no">stk_encore/function/CompositeFunction.hpp</includes>
    <includes id="StringFunction_8hpp" name="StringFunction.hpp" local="no" imported="no">stk_encore/function/StringFunction.hpp</includes>
    <includes id="ConstantFunction_8hpp" name="ConstantFunction.hpp" local="no" imported="no">stk_encore/function/ConstantFunction.hpp</includes>
    <includes id="ElementOp_8hpp" name="ElementOp.hpp" local="no" imported="no">stk_encore/function/ElementOp.hpp</includes>
    <includes id="BucketOp_8hpp" name="BucketOp.hpp" local="no" imported="no">stk_encore/function/BucketOp.hpp</includes>
    <includes id="MultipleFieldFunction_8hpp" name="MultipleFieldFunction.hpp" local="no" imported="no">stk_encore/function/MultipleFieldFunction.hpp</includes>
    <includes id="HasValue_8hpp" name="HasValue.hpp" local="no" imported="no">stk_encore/function/internal/HasValue.hpp</includes>
    <includes id="IntegratedOp_8hpp" name="IntegratedOp.hpp" local="no" imported="no">stk_encore/function/internal/IntegratedOp.hpp</includes>
    <includes id="ExceptionWatch_8hpp" name="ExceptionWatch.hpp" local="no" imported="no">stk_encore/ExceptionWatch.hpp</includes>
    <includes id="IntrepidManager_8hpp" name="IntrepidManager.hpp" local="no" imported="no">stk_encore/norm/IntrepidManager.hpp</includes>
    <class kind="class">stk::encore::HasFinalOp</class>
    <class kind="class">stk::encore::LN_NormOp</class>
    <class kind="class">stk::encore::Norm</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="function">
      <type>double</type>
      <name>square</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab2907abcfe1cb0c46433f6cf793c780e</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ParallelUtil.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>ParallelUtil_8hpp</filename>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <includes id="ParallelUtilDef_8hpp" name="ParallelUtilDef.hpp" local="no" imported="no">stk_encore/ParallelUtilDef.hpp</includes>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>ParallelUtilDef.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>ParallelUtilDef_8hpp</filename>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>PartOp.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>PartOp_8hpp</filename>
    <class kind="class">stk::encore::PartOp</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>pyencore.h</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>pyencore_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PY_ENCORE</name>
      <anchorfile>pyencore_8h.html</anchorfile>
      <anchor>ab04b06d0ef587d85ebc55736bbddaba0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RefinementKey.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>RefinementKey_8hpp</filename>
    <includes id="stk__encore__code__types_8hpp" name="stk_encore_code_types.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/stk_encore_code_types.hpp</includes>
    <class kind="class">stk::encore::Elem::RefinementKey</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::Elem</namespace>
  </compound>
  <compound kind="file">
    <name>RefinementTopology.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>RefinementTopology_8hpp</filename>
    <includes id="RefinementKey_8hpp" name="RefinementKey.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementKey.hpp</includes>
    <includes id="CellTopology_8hpp" name="CellTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/CellTopology.hpp</includes>
    <class kind="class">stk::encore::Elem::RefinementTopology</class>
    <class kind="class">stk::encore::Elem::MeshObjRefinementTopology</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::Elem</namespace>
    <member kind="function">
      <type>const RefinementTopology *</type>
      <name>getRefinementTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a12544e19222e7e1b9bd94efba3051b7f</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementEdgeNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a446d86f0a1de5ef12d8b223eb6edc9b4</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt edge)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementFaceNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>add71eb91e9320e0fb890bd0d599de134</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt face)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementEdgePermutation</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a863cf9b3b7dd45697d5a49c5c904f6d4</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt permutation_ordinal)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RunEnvironment.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>RunEnvironment_8hpp</filename>
    <class kind="struct">stk::encore::RunEnvironment</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DWENDL</name>
      <anchorfile>RunEnvironment_8hpp.html</anchorfile>
      <anchor>af4bb1e9455f2e6997b492392a79dba7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LogMask</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_ALWAYS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea34b8b8fc3e9e07a72ef0e607e3159a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ceaf7620abc993026ab4849b3361905a9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE_STATS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea9ace447e47dbe6a68bd2d6db7f018d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE_SUB_CALLS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea49d27f0fc9ee691e162ef9e7799cd3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_MEMBERS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea78d008e9a25f136b3693c6446b03ee22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_APPLICATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ceac0c3cffab7b21456fb96f8c213af02a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>message_type</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_WARNING</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaca13e5144abf867abc473e920bf11967</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_FATAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62ea45bdf8521025042d6b79bd5ab9408cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_INFORMATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaf47d7d8e1ed5da71f6aca93a96540b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_EXCEPTION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62ea19455a6fd85b43a99b444b2e0c8aff32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_PARALLEL_EXCEPTION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaacfcf8d439f9b34bfe76fe33245ed761</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>message_throttle_type</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_APPLICATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9a9e8d91c740f0f554875b841bb8330c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_TIME_STEP</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9a16932bcd10805f16f6af4b60c061d085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TimerSetMask</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_MESH</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfaa1ede73eb6e0b06303e3d17ec01294b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_ALL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfab399a8717bc6948c4cb3fafaad20705f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_FORCE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfa2d55409c39b63742ba3de38f75245b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae89123732d9f53ab1c28907a341e690a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a23b815371f2d7b879a3d59d7497af795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>pout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3b72442dd30fe702d9101de070e85c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>tout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae517eaa627bad6ac28f75816f905482a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dwout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab4c7b21d00e7e3e277eac53652aa0786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Writer &amp;</type>
      <name>dw</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a728c97c5fc99fd3746847bf1b0b8b16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::TimerSet &amp;</type>
      <name>timerSet</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aefd1840135202d9abc4dcba28aff36ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Timer &amp;</type>
      <name>timer</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5dd35939622ab9ffdd76227d3fef128f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>my_report_handler</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a59f59f612ce30cf2747cd07f9080cfa3</anchor>
      <arglist>(const char *message, int type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Searcher.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>Searcher_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <class kind="class">stk::encore::Searcher</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>SEncr_GeometryVerifier.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>SEncr__GeometryVerifier_8hpp</filename>
    <class kind="class">stk::encore::GeometryVerifier</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>SEncr_TopologyVerifier.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>SEncr__TopologyVerifier_8hpp</filename>
    <includes id="SEncr__TopologyVerifier_8hpp" name="SEncr_TopologyVerifier.hpp" local="yes" imported="no">Edge.hpp</includes>
    <includes id="ShardsInterfaceTable_8hpp" name="ShardsInterfaceTable.hpp" local="yes" imported="no">ShardsInterfaceTable.hpp</includes>
    <class kind="class">stk::encore::TopologyVerifier</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>SEncr_Verifier.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/verifier/mesh/</path>
    <filename>SEncr__Verifier_8hpp</filename>
    <includes id="SEncr__TopologyVerifier_8hpp" name="SEncr_TopologyVerifier.hpp" local="no" imported="no">stk_encore/SEncr_TopologyVerifier.hpp</includes>
    <includes id="SEncr__GeometryVerifier_8hpp" name="SEncr_GeometryVerifier.hpp" local="no" imported="no">stk_encore/SEncr_GeometryVerifier.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <class kind="class">stk::encore::Verifier</class>
    <class kind="class">stk::encore::MeshVerifier</class>
    <class kind="class">stk::encore::CodeVerifier</class>
    <class kind="class">stk::encore::MeshGeometryVerifier</class>
    <class kind="class">stk::encore::MeshTopologyVerifier</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>SEunit_Fixture.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>SEunit__Fixture_8hpp</filename>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <includes id="RunEnvironment_8hpp" name="RunEnvironment.hpp" local="no" imported="no">stk_encore/RunEnvironment.hpp</includes>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::unit_tests</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXPECT_DOUBLE_EQ_APPROX_TOL</name>
      <anchorfile>SEunit__Fixture_8hpp.html</anchorfile>
      <anchor>a2815367e162e9d59d6fad03a1cada475</anchor>
      <arglist>(expected, actual, tol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXPECT_DOUBLE_EQ_APPROX</name>
      <anchorfile>SEunit__Fixture_8hpp.html</anchorfile>
      <anchor>a71e0907e7920244cfde0c159edaecc13</anchor>
      <arglist>(expected, actual)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIME_IT</name>
      <anchorfile>SEunit__Fixture_8hpp.html</anchorfile>
      <anchor>a7f55292511f5ae28ae2e8099bb2d7896</anchor>
      <arglist>(expr, total_time)</arglist>
    </member>
    <member kind="typedef">
      <type>RunEnvironment</type>
      <name>Fixture</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a5943e238502960906b004392920bf9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_NORM</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea6e7d89ca42d17993473acd638a1ec6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_GEOMETRY_VERIFIER</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea7b97dac287ec19f48550a053a3305b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_MESH_COLORER</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea28873fec2c2f89ce6f818970decc7a04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SEunit_QuadFixture.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>SEunit__QuadFixture_8hpp</filename>
    <class kind="class">stk::encore::unit_tests::QuadFixture</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::unit_tests</namespace>
  </compound>
  <compound kind="file">
    <name>ShardsInterfaceTable.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>ShardsInterfaceTable_8hpp</filename>
    <class kind="struct">stk::encore::interface_table::elemInfoType</class>
    <class kind="struct">stk::encore::lstr</class>
    <class kind="class">stk::encore::ShardsInterfaceTable</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::interface_table</namespace>
    <member kind="typedef">
      <type>void(*</type>
      <name>stk_set_cell_topology_fptr</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>a84a879391fa63ecdb71531e71b0ba946</anchor>
      <arglist>)(stk::mesh::Part &amp;)</arglist>
    </member>
    <member kind="enumeration">
      <name>ElemTypes</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Node</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae299e11305f5f654147f0c04271bee9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Particle</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae0c5a82d7dc6d9a6a2f882d928113ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Line_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a50645fd38f36d99d6f5a4eb1b5f444be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellLine_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a41f52c5f0def1c0243a37cd102adb981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellLine_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a06246479549dffd5d95260f0a63a286e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Beam_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aed690d26d1d139d6e731fd596cfa2a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Beam_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a11efc0d2f4c6c97fd64f10150627ee99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Triangle_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae1e7ebf50c6415fed21dfa20ca97d8d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Triangle_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a216d501a42139f6b45ecde9afaf32f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellTriangle_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881adb576f75fc5eccb1a70ef387533689c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellTriangle_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a9a2811f447d62ac4ec307e5180273eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae0c88e0c75751c2fe38b57a207204943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a78bedd0f14bb76252d0f98c525b2a727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_9</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aa460f55a345e535658c543e8c00ae67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a71cce8cb39957b31cf3525d079179f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a4209ab813fb6ea14420525bf068b9991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_9</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a0354a8a201edab5d972d51bcb8271ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pentagon_5</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a64ae01956423b1057a3943712acf2fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexagon_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a6e6fcdcc4ecdd2f247e653f846e5f5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Tetrahedron_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ada5afde665e1d20ba561ea5e3a852148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Tetrahedron_10</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aa02b3f2d2b05b6ab824291e1ae46000a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_5</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a7b52026e909070a26a5e8ff2ed36c382</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_13</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a79f9f496c9b71dee4028b3d18f7f336e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_14</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a7d920c93089f39b9ff64bc95eafa7e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a3e76581f6677f08b4173a23ed6f17e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_15</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aefd61f23c99ae2e65bece8b0097f92bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_18</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a46926ff33f9eb01a9f9e5f17db821ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a8606c09d95fb8f6ae87c7ce3c28534eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_20</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a88ddb143323004d8e481f71e5e987a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_27</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a855cd90964b8fa4f76353ffffca17197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ELEM_TYPES</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a8f1406680ba8251a6be86371e214be40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimpleSearcher.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>SimpleSearcher_8hpp</filename>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="Searcher_8hpp" name="Searcher.hpp" local="no" imported="no">stk_encore/function/internal/Searcher.hpp</includes>
    <includes id="IsInElement_8hpp" name="IsInElement.hpp" local="no" imported="no">stk_encore/function/internal/IsInElement.hpp</includes>
    <class kind="class">stk::encore::SimpleSearcher</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>StdMeshObjTopologies.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>StdMeshObjTopologies_8hpp</filename>
    <class kind="struct">stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtraEntry</class>
    <class kind="class">stk::encore::Elem::StdMeshObjTopologies::RefTopoX1</class>
    <class kind="class">stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtra</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::Elem</namespace>
    <namespace>stk::encore::Elem::StdMeshObjTopologies</namespace>
    <member kind="typedef">
      <type>RefinementTopologyExtraEntry</type>
      <name>RefTopoX</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem_1_1StdMeshObjTopologies.html</anchorfile>
      <anchor>a61fe963d41865d5755c098df5a8d1b36</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bootstrap</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem_1_1StdMeshObjTopologies.html</anchorfile>
      <anchor>aa9a95cdc95118514e4673038c4fb0621</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stk_encore_code_types.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>stk__encore__code__types_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>THROW</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>ae75a60c35dc420f1c47f4949508f8fdd</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOUR_BYTE_LONG</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a055f105d02eabd558aa2735dd5beb1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MIN</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a1a65dbec08ab3fa8f62b157a5e13216c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UInt_MAX</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a7c43d07e31139a6b295a4082ba007910</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Long_MAX</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a95bfcdd78232b6552b486e59c6f941f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Long_MIN</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a96eb1def054d61d6d5aa8aa60a765b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ULong_MAX</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a3267afc83f4f503d02a492fcc2ec0a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>Void</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>afdf0f22c576e6ee1b982f64b839c4bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Int</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a7cc214a236ad3bb6ad435bdcf5262a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>UInt</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>aba0996d26f7be2572973245b51852757</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long</type>
      <name>Long</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a3bb1dddc49d9e4f6f66634f964e6131c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>ULong</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>a758b09c0b13933408d1f96e0b78f0c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; Real &gt;</type>
      <name>Complex</name>
      <anchorfile>stk__encore__code__types_8hpp.html</anchorfile>
      <anchor>ae71815a9f70bd1d668591ffd98814a01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stk_mesh.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>stk__mesh_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>stk_utest_macros.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>stk__utest__macros_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a94e8658014458be8b192aaca500cf5d3</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT_EQUAL</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>af0c1b03998c4a072deb2d3dac367f7a4</anchor>
      <arglist>(A, B)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_EXPECT_EQUAL</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a2ee239f0d585d63a4c9bde2d32f46bd2</anchor>
      <arglist>(A, B)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT_THROW</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a4958e69070f0f16f46fd90aa41d55725</anchor>
      <arglist>(A, B)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT_NO_THROW</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a41e9010f0aaf77b344fd6c6aa3438616</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_EXPECT_TRUE</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a23722204bc564b233bea54dfebac3526</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_EXPECT_FALSE</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a0fe6d2de60b4b2ed2ffb382fa9d76ea3</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT_TRUE</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a268244cc207a0b3abec51d503e9f99d8</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_ASSERT_FALSE</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>aafb4ba316a400e5e48b4aadbca67996a</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_UNIT_TEST</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a751a48aacc9fa7f6009e398ca41c595f</anchor>
      <arglist>(testclass, testmethod)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STKUNIT_MAIN</name>
      <anchorfile>stk__utest__macros_8hpp.html</anchorfile>
      <anchor>a55c538978eb3e5dfec99826809cc8ee7</anchor>
      <arglist>(argc, argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>STKSearcher.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>STKSearcher_8hpp</filename>
    <includes id="Encore_8hpp" name="Encore.hpp" local="no" imported="no">stk_encore/Encore.hpp</includes>
    <includes id="FieldFunction_8hpp" name="FieldFunction.hpp" local="no" imported="no">stk_encore/function/FieldFunction.hpp</includes>
    <includes id="Searcher_8hpp" name="Searcher.hpp" local="no" imported="no">stk_encore/function/internal/Searcher.hpp</includes>
    <includes id="BuildBoundingBoxes_8hpp" name="BuildBoundingBoxes.hpp" local="no" imported="no">stk_encore/function/internal/BuildBoundingBoxes.hpp</includes>
    <includes id="STKSearcher_8hpp" name="STKSearcher.hpp" local="yes" imported="no">STKSearcherDef.hpp</includes>
    <class kind="class">stk::encore::STKSearcher</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXTRA_PRINT</name>
      <anchorfile>STKSearcher_8hpp.html</anchorfile>
      <anchor>a0c346f9df419cb26bec71316858b8ddf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>STKSearcherDef.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>STKSearcherDef_8hpp</filename>
    <includes id="Encore_8hpp" name="Encore.hpp" local="no" imported="no">stk_encore/Encore.hpp</includes>
    <includes id="STKSearcher_8hpp" name="STKSearcher.hpp" local="yes" imported="no">STKSearcher.hpp</includes>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>StringFunction.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>StringFunction_8hpp</filename>
    <includes id="Function_8hpp" name="Function.hpp" local="no" imported="no">stk_encore/function/Function.hpp</includes>
    <includes id="Name_8hpp" name="Name.hpp" local="no" imported="no">stk_encore/Name.hpp</includes>
    <class kind="class">stk::encore::StringFunction</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator-</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af21a2bb85521571c89626abc799fd7d8</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator+</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a90d00e10616872957c45bd49abd180c1</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator/</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac2c457787a8ac66f4efe0223d806a702</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator*</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af2cdfb033760fc8596a6d919ff1e69ed</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator-</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>abe6899f2071ca2d20848af4b1896d88a</anchor>
      <arglist>(StringFunction &amp;lhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SubDimCell.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</path>
    <filename>SubDimCell_8hpp</filename>
    <class kind="class">stk::encore::SubDimCell</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>TensorProductMesh.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>TensorProductMesh_8hpp</filename>
    <includes id="TensorProductMesh_8hpp" name="TensorProductMesh.hpp" local="yes" imported="no">array.hpp</includes>
    <includes id="ShardsInterfaceTable_8hpp" name="ShardsInterfaceTable.hpp" local="no" imported="no">stk_encore/ShardsInterfaceTable.hpp</includes>
    <class kind="class">stk::encore::utils::XForm</class>
    <class kind="class">stk::encore::utils::XFormDir</class>
    <class kind="class">stk::encore::utils::TensorProductMesh</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::utils</namespace>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a5a82a25cbf3f40d9c9314d4b3444ec6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a51454f67c1bbb91e27d7e0244275b6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double *, stk::mesh::ElementNode &gt;</type>
      <name>ElementNodePointerFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>ad6149ddcdc75dbd0ced9ad47b42af1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>array&lt; 3, double &gt;</type>
      <name>Coord</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a52e2cfabc2ba7bfd84f3f7e80ac56bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Function&lt; Coord, Coord &gt;</type>
      <name>VectorFieldFunction</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>ac58a68d092e20e98bab3a48702645a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Coord &gt;</type>
      <name>VectorOfCoord</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a1658179617178d0808ac3913cfccf400</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; unsigned &gt;</type>
      <name>VectorOfInt</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a6ed1cc920301fe6648c903812cfa4214</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a5aa524bdb870d41b2822cbc81dd12cfa</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;dst, const std::vector&lt; T &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefiner.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefiner_8hpp</filename>
    <includes id="stk__mesh_8hpp" name="stk_mesh.hpp" local="no" imported="no">stk_encore/stk_mesh.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="UniformRefinerPattern_8hpp" name="UniformRefinerPattern.hpp" local="no" imported="no">stk_encore/mesh/mod/UniformRefinerPattern.hpp</includes>
    <includes id="NodeRegistry_8hpp" name="NodeRegistry.hpp" local="no" imported="no">stk_encore/mesh/util/NodeRegistry.hpp</includes>
    <includes id="SubDimCell_8hpp" name="SubDimCell.hpp" local="no" imported="no">stk_encore/mesh/util/SubDimCell.hpp</includes>
    <class kind="class">stk::encore::UniformRefiner</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern_8hpp</filename>
    <includes id="stk__mesh_8hpp" name="stk_mesh.hpp" local="no" imported="no">stk_encore/stk_mesh.hpp</includes>
    <includes id="Util_8hpp" name="Util.hpp" local="no" imported="no">stk_encore/Util.hpp</includes>
    <includes id="EncoreMesh_8hpp" name="EncoreMesh.hpp" local="no" imported="no">stk_encore/EncoreMesh.hpp</includes>
    <includes id="NodeRegistry_8hpp" name="NodeRegistry.hpp" local="no" imported="no">stk_encore/mesh/util/NodeRegistry.hpp</includes>
    <includes id="UniformRefinerPattern_8hpp" name="UniformRefinerPattern.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Quad4_4.hpp</includes>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <includes id="UniformRefinerPattern__Line2__Line2__2__sierra_8hpp" name="UniformRefinerPattern_Line2_Line2_2_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Line2_Line2_2_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Tri3__Tri3__4__sierra_8hpp" name="UniformRefinerPattern_Tri3_Tri3_4_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Tri3_Tri3_4_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp" name="UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Line2__Line3__1__sierra_8hpp" name="UniformRefinerPattern_Line2_Line3_1_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Line2_Line3_1_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Tri3__Tri6__1__sierra_8hpp" name="UniformRefinerPattern_Tri3_Tri6_1_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Tri3_Tri6_1_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Quad9__1__sierra_8hpp" name="UniformRefinerPattern_Quad4_Quad9_1_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Quad9_1_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Quad8__1__sierra_8hpp" name="UniformRefinerPattern_Quad4_Quad8_1_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Quad8_1_sierra.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Tri3__4_8hpp" name="UniformRefinerPattern_Quad4_Tri3_4.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Tri3_4.hpp</includes>
    <class kind="struct">stk::encore::SierraPort</class>
    <class kind="class">stk::encore::UniformRefinerPatternBase</class>
    <class kind="class">stk::encore::URP1</class>
    <class kind="class">stk::encore::URP</class>
    <class kind="class">stk::encore::UniformRefinerPattern</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NODE_COORD</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>a69199cbb5de4b973c41972f0cb5e70e7</anchor>
      <arglist>(node)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERT_COORD</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>a4b7ea1d6ac7f9775d174212806fb2b76</anchor>
      <arglist>(ivert)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_COORD</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>ac8353e02e8bc2e9b7d44cc5c44cfdbdc</anchor>
      <arglist>(iedge, inode)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FACE_COORD</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>a569c8eadebab0cf7ee715d2b76b8f610</anchor>
      <arglist>(iface, inode)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERT_N</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>a40961085451143392ba614469a18cf29</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_N</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>ad5479d437807b39881bd0a8a674256a9</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FACE_N</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>aed0d5736651f490bd98452f0976d2c88</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NN</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>ab19784d5b92067742012b50bc1624d6e</anchor>
      <arglist>(i_entity_rank, j_ordinal_on_subDim_entity)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>BlockNamesType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a62498deb06f527b64ca197c9b135d065</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>StringStringMap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a278a89ab65d40295a18a2bfe5c491ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4 &gt;</type>
      <name>Quad4_Quad4_4_Old</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3691ebc2530ed49d2ff9cd15b0a67b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt;, 2 &gt;</type>
      <name>Line2_Line2_2</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3efa3c24ab9c7908f1be5c60b485b791</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</type>
      <name>Quad4_Quad4_4_Sierra</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a705d1d209563e4c7aa1851fed5114409</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</type>
      <name>Quad4_Quad4_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3bd14ca5a6c92e8891115f506156a04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt;, 4, SierraPort &gt;</type>
      <name>Tri3_Tri3_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad9a4324ea945f11b526ec335a6968f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt;, 8, SierraPort &gt;</type>
      <name>Tet4_Tet4_8</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1b4d64035435f6d96d927120ae114865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt;, 8, SierraPort &gt;</type>
      <name>Hex8_Hex8_8</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5b08222e9affac7ae810f2dfa65e6756</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt;, 1, SierraPort &gt;</type>
      <name>Quad4_Quad9_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a39290053df78f293dcb9390f6fe279ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt;, 1, SierraPort &gt;</type>
      <name>Quad4_Quad8_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a130d2d0b06a9f749047f90f7fbf0e40a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt;, 1, SierraPort &gt;</type>
      <name>Tri3_Tri6_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a4c2030055063a62aff28e17f9b1c0745</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt;, 1, SierraPort &gt;</type>
      <name>Tet4_Tet10_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>add05edefb9e22466b7215badd68b2f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt;, 1, SierraPort &gt;</type>
      <name>Hex8_Hex27_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad67c00f495a2334089baa820aa2a1eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt;, 1, SierraPort &gt;</type>
      <name>Hex8_Hex20_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a00cff4622e2b1d1d3c7094db6577feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 6 &gt;</type>
      <name>Quad4_Tri3_6</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a084779bc96e4f7cacc5e92e58f0390f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 4, Specialization &gt;</type>
      <name>Quad4_Tri3_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af72710d6541aa6744b1e40fb9753fc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt;, 24 &gt;</type>
      <name>Hex8_Tet4_24</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a08e46bb5fadbdd9b9a340d0ebc01676d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Hex8_Hex20_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Hex8__Hex20__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FACE_BREAKER_HEX8_HEX20_1</name>
      <anchorfile>UniformRefinerPattern__Hex8__Hex20__1__sierra_8hpp.html</anchorfile>
      <anchor>adfd3a1f0e5f28521e202bb1f6c10ebc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Hex8_Hex27_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Hex8__Hex27__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FACE_BREAKER_HEX8_HEX27_1</name>
      <anchorfile>UniformRefinerPattern__Hex8__Hex27__1__sierra_8hpp.html</anchorfile>
      <anchor>a9c52d07e463ba88263002763c13fcf95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Hex8_Hex8_8_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Hex8__Hex8__8__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp" name="UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt;, 8, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FACE_BREAKER_H8_H8_8</name>
      <anchorfile>UniformRefinerPattern__Hex8__Hex8__8__sierra_8hpp.html</anchorfile>
      <anchor>aaeb50865e56056cccd540b84ffc6e4db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Hex8__Hex8__8__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Hex8__Hex8__8__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Hex8_Tet4_24.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Hex8__Tet4__24_8hpp</filename>
    <includes id="UniformRefinerPattern_8hpp" name="UniformRefinerPattern.hpp" local="yes" imported="no">UniformRefinerPattern.hpp</includes>
    <includes id="UniformRefinerPattern__Quad4__Tri3__4_8hpp" name="UniformRefinerPattern_Quad4_Tri3_4.hpp" local="yes" imported="no">UniformRefinerPattern_Quad4_Tri3_4.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt;, 24 &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>USE_FACE_BREAKER</name>
      <anchorfile>UniformRefinerPattern__Hex8__Tet4__24_8hpp.html</anchorfile>
      <anchor>a1abeb4e096c301a36892e3897a921e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Hex8__Tet4__24_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Hex8__Tet4__24_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Line2_Line2_2_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Line2__Line2__2__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt;, 2, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Line2__Line2__2__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Line2__Line2__2__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Line2_Line3_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Line2__Line3__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 3 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Line2__Line3__1__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Line2__Line3__1__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Quad4_4.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Quad4__4_8hpp</filename>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4 &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad4__4_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad4__4_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <includes id="UniformRefinerPattern__Line2__Line2__2__sierra_8hpp" name="UniformRefinerPattern_Line2_Line2_2_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Line2_Line2_2_sierra.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_BREAKER</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp.html</anchorfile>
      <anchor>a880269f3ecca4c44d79dd858da35b516</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad4__4__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Quad8_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Quad8__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_BREAKER_Q4_Q8_1</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad8__1__sierra_8hpp.html</anchorfile>
      <anchor>a02184f42132a93371a4907205e2f205a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad8__1__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Quad9_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Quad9__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_BREAKER_Q4_Q9_1</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad9__1__sierra_8hpp.html</anchorfile>
      <anchor>a19e84d542e4a32501f74d9b3b0fbb50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Quad9__1__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Tri3_4.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Tri3__4_8hpp</filename>
    <class kind="struct">stk::encore::Specialization</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 4, Specialization &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Quad4__Tri3__4_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Tri3__4_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Quad4_Tri3_6.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Quad4__Tri3__6_8hpp</filename>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 6 &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Quad4__Tri3__6_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Tet4_Tet10_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Tet4__Tet10__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FACE_BREAKER_TET4_TET10_1</name>
      <anchorfile>UniformRefinerPattern__Tet4__Tet10__1__sierra_8hpp.html</anchorfile>
      <anchor>a98b8ca4c55981e8df3dff1dac4dca475</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Tet4_Tet4_8_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Tet4__Tet4__8__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt;, 8, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>USE_FACE_BREAKER_T4_T4_8</name>
      <anchorfile>UniformRefinerPattern__Tet4__Tet4__8__sierra_8hpp.html</anchorfile>
      <anchor>a8ba45bf116763893038d299a3f44f3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Tet4__Tet4__8__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Tet4__Tet4__8__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Tri3_Tri3_4_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Tri3__Tri3__4__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <includes id="UniformRefinerPattern__Line2__Line2__2__sierra_8hpp" name="UniformRefinerPattern_Line2_Line2_2_sierra.hpp" local="yes" imported="no">UniformRefinerPattern_Line2_Line2_2_sierra.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt;, 4, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_BREAKER</name>
      <anchorfile>UniformRefinerPattern__Tri3__Tri3__4__sierra_8hpp.html</anchorfile>
      <anchor>a880269f3ecca4c44d79dd858da35b516</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CENTROID_N</name>
      <anchorfile>UniformRefinerPattern__Tri3__Tri3__4__sierra_8hpp.html</anchorfile>
      <anchor>abbf2c06993a9de7a99afabaac55357d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DIAGRAM</name>
      <anchorfile>UniformRefinerPattern__Tri3__Tri3__4__sierra_8hpp.html</anchorfile>
      <anchor>a00fa1017864f9dabfecc99f6815dca37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniformRefinerPattern_Tri3_Tri6_1_sierra.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>UniformRefinerPattern__Tri3__Tri6__1__sierra_8hpp</filename>
    <includes id="RefinementTopology_8hpp" name="RefinementTopology.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/RefinementTopology.hpp</includes>
    <includes id="StdMeshObjTopologies_8hpp" name="StdMeshObjTopologies.hpp" local="no" imported="no">stk_encore/mesh/util/sierra_element/StdMeshObjTopologies.hpp</includes>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt;, 1, SierraPort &gt;</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EDGE_BREAKER_T3_T6_1</name>
      <anchorfile>UniformRefinerPattern__Tri3__Tri6__1__sierra_8hpp.html</anchorfile>
      <anchor>a9e99948079b81489babe96ea8492220a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UseCase_3.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>UseCase__3_8hpp</filename>
    <class kind="class">stk::mesh::use_cases::UseCase_3_Mesh</class>
    <namespace>stk</namespace>
    <namespace>stk::mesh</namespace>
    <namespace>stk::mesh::use_cases</namespace>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>a728db7769b52367878e4fad10d616633</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>ad9c434645be7f52ceb2641ed22c0b112</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double *, stk::mesh::ElementNode &gt;</type>
      <name>ElementNodePointerFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>ad118e1a32ea4d059a3aa1fddeeb16ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyMesh</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>a1a7bafbf013ef68958d657c1fe119b75</anchor>
      <arglist>(const UseCase_3_Mesh &amp;mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Util.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>Util_8hpp</filename>
    <includes id="ExceptionWatch_8hpp" name="ExceptionWatch.hpp" local="no" imported="no">stk_encore/ExceptionWatch.hpp</includes>
    <includes id="stk__mesh_8hpp" name="stk_mesh.hpp" local="no" imported="no">stk_encore/stk_mesh.hpp</includes>
    <class kind="class">stk::encore::Util</class>
    <class kind="class">stk::encore::GenericVectorOfObjectPointers</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <member kind="define">
      <type>#define</type>
      <name>QUOTE</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a992dc9b5eb2c7b6d76add030b20766bc</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXPAND_AND_QUOTE</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a847181ec2a4e812853463941d393fb3d</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOKENPASTE2</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a8cb4837e09f6f8295f4c47826eafb91f</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOKENPASTE</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>aaf9a1b8a5982f1fdaecbfedc30afc3a3</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_1</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a144a545a5443ae4e5a26d9ae58d80269</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>ac572cde8f8ce397e318bfd09ab8c6982</anchor>
      <arglist>(expr, val1, val2, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_OP</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>aab5cf13a976c633ed57cd2bb30c6991a</anchor>
      <arglist>(val1, op, val2, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_EQ</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>aae5a3e1a1317c4db59d32881708cf876</anchor>
      <arglist>(val1, val2, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_TRUE</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a6a71e86c9ba96926a7a1a06e0a84a86b</anchor>
      <arglist>(val1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_EQ1</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a5b935090299c19ba08707f274d348558</anchor>
      <arglist>(val1, val2, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_NE</name>
      <anchorfile>Util_8hpp.html</anchorfile>
      <anchor>a48b0d128ecfe1160e822d0e80a31bc2c</anchor>
      <arglist>(val1, val2, message)</arglist>
    </member>
    <member kind="typedef">
      <type>stk::diag::MetricTraits&lt; stk::diag::WallTime &gt;::Type</type>
      <name>LapTimeType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab6c81e9f5a17af6f8cc5623745e9ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::diag::MetricTraits&lt; stk::diag::LapCount &gt;::Type</type>
      <name>LapCountType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad5b8d2345ba189c976dafbd2ead612d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TurboOption</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_ELEMENT</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795a72d159a78f1d5ea12cb2c17fa77f407b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_BUCKET</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795abd38155df0ce52b8fd597325a424ef97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_NONE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795a2cb2774347f7d42ace45afaa49b4fca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCORE_TIMER_ROOT</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af9f6770261d8ef1992858d1b8855c04fab233ff2814503126bef0965ea89deb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae77d3d217fce49fb25d660d7497d213a</anchor>
      <arglist>(std::ostream &amp;out, const stk::mesh::Entity &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a80e80edc7680b2c54bb8b73dc78a84bd</anchor>
      <arglist>(std::ostream &amp;os, const shards::Array&lt; double, shards::NaturalOrder &gt; &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a148c909fe16f28fd4d57ecd5a760ff89</anchor>
      <arglist>(std::ostream &amp;out, const std::set&lt; T, L, A &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5ac955fb85f96bb38d51a21b53d922f0</anchor>
      <arglist>(std::ostream &amp;out, const std::vector&lt; T, L &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aec5821e3b372308dbc506945f670ab5e</anchor>
      <arglist>(std::ostream &amp;out, std::map&lt; Key, Val, Comp, Alloc &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1af6af4c0e0c94c9ab87f3a8f1137a53</anchor>
      <arglist>(std::ostream &amp;os, const std::vector&lt; Scalar &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::TimerSet &amp;</type>
      <name>encoreTimerSet</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a4ee0924048a4d025df81d3dbeb5bcd61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Timer &amp;</type>
      <name>encoreTimer</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a74c6fe98c8039e84aa4798e21de82328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LapTimeType</type>
      <name>getLapTime</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7334d3294caecbaa1400b72144a0aac1</anchor>
      <arglist>(stk::diag::Timer &amp;lap_timer)</arglist>
    </member>
    <member kind="function">
      <type>LapCountType</type>
      <name>getAccumulatedLap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0519fb45c7cbd3cf486e32b0ab43a3e0</anchor>
      <arglist>(stk::diag::Timer &amp;timer, bool option=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5d4f7c8be10302f7bfbb6cb88c6792f3</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad5fd6d08ef0583c1c33a1dd2b1593a4a</anchor>
      <arglist>(unsigned v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7758cd21ad80c02e41c14b075a309d84</anchor>
      <arglist>(double v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XFormPath.hpp</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>XFormPath_8hpp</filename>
    <includes id="XFormPath_8hpp" name="XFormPath.hpp" local="yes" imported="no">TensorProductMesh.hpp</includes>
    <includes id="array_8hpp" name="array.hpp" local="yes" imported="no">array.hpp</includes>
    <includes id="function_8hpp" name="function.hpp" local="yes" imported="no">function.hpp</includes>
    <includes id="ShardsInterfaceTable_8hpp" name="ShardsInterfaceTable.hpp" local="no" imported="no">stk_encore/ShardsInterfaceTable.hpp</includes>
    <class kind="class">stk::encore::utils::XFormPath</class>
    <namespace>stk</namespace>
    <namespace>stk::encore</namespace>
    <namespace>stk::encore::utils</namespace>
  </compound>
  <compound kind="page">
    <name>parallel_node_registry</name>
    <title>Parallel Node Registry</title>
    <filename>parallel__node__registry</filename>
  </compound>
  <compound kind="group">
    <name>stk_io_module</name>
    <title>Stk_io_module</title>
    <filename>group__stk__io__module.html</filename>
    <namespace>stk</namespace>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gaa7577a053f5665c7475941ae3c8f4176</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gae14054bc090314029a28bbd89373d337</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga0f537326216a705795528e00a73e638f</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga4d20ab136871d5d7e9c1ec797eddbe1a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodeblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga652d7b74de1b3a64571453f9aa3d7b73</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga011b943e4e92f9f10d554671dd46d536</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga222c9f76d830b85321fc97caf519ce87</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga2d39815dfc6f38e2da28de7c9940f465</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga24144c1ff3bcf528e5180b235f6c6c14</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_input_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gafee9db305f97a5198a35a2d6968bd17e</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_output_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga27708937428399675529d263e15ea53a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>array</name>
    <filename>structarray.html</filename>
    <templarg>N</templarg>
    <templarg>Scalar</templarg>
    <member kind="function">
      <type>Scalar &amp;</type>
      <name>operator[]</name>
      <anchorfile>structarray.html</anchorfile>
      <anchor>afe0b283d4b89f4d3f6538aa6a4720ca5</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const Scalar &amp;</type>
      <name>operator[]</name>
      <anchorfile>structarray.html</anchorfile>
      <anchor>ad601010e27676d1fbad66cb18be323c6</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="variable">
      <type>Scalar</type>
      <name>v</name>
      <anchorfile>structarray.html</anchorfile>
      <anchor>a07d70ed1e202d36037f97db1effa7f12</anchor>
      <arglist>[N]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayVector</name>
    <filename>classArrayVector.html</filename>
  </compound>
  <compound kind="class">
    <name>Circle</name>
    <filename>classCircle.html</filename>
    <base>Shape</base>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a456559c3f355f2bf0bf9d5918b21d3f4</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>area</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>abcf7c765184e0a0d23e12cfde255241c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>perimeter</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a9e545a5822c4125a28657d449395f1db</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDArray</name>
    <filename>classMDArray.html</filename>
  </compound>
  <compound kind="class">
    <name>stk::expreval::VariableMap::Resolver</name>
    <filename>classstk_1_1expreval_1_1VariableMap_1_1Resolver.html</filename>
  </compound>
  <compound kind="class">
    <name>std::set</name>
    <filename>classstd_1_1set.html</filename>
  </compound>
  <compound kind="class">
    <name>Shape</name>
    <filename>classShape.html</filename>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>aaa8d87171e65e0d8ba3c5459978992a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>ac3b9fc48965274893f25b18aa14ba665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a6020b8c69f57e5e196b8f012a3be1277</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>area</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a3ed4363a88c79ce647843564acd70f82</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>perimeter</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a752a587b5d16e708624e803d6f43b428</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a6213788eeacd82f066a2ccdafdc6b37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a2b1c4ce81efeb2fa0340493addfee75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>nshapes</name>
      <anchorfile>classShape.html</anchorfile>
      <anchor>a1e6a5bb20ad6fc0a7cf403448e12d39e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Square</name>
    <filename>classSquare.html</filename>
    <base>Shape</base>
    <member kind="function">
      <type></type>
      <name>Square</name>
      <anchorfile>classSquare.html</anchorfile>
      <anchor>ad5aeea3105faa559f4a88e08042c5e60</anchor>
      <arglist>(double w)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>area</name>
      <anchorfile>classSquare.html</anchorfile>
      <anchor>aec95cbadbc57dde6c8cbdc790e7a46f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>perimeter</name>
      <anchorfile>classSquare.html</anchorfile>
      <anchor>af981e20b2c9b7988bd7d02cf8293fb01</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::vector</name>
    <filename>classstd_1_1vector.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Intrepid</name>
    <filename>namespaceIntrepid.html</filename>
  </compound>
  <compound kind="namespace">
    <name>shards</name>
    <filename>namespaceshards.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>a7f9c6c0c5412e95bbaf1b98e0d878083</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>aaba1023e0ea247b9bc17c43b03edf0d2</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceshards.html</anchorfile>
      <anchor>a2c87731429a217e013b9b71318987845</anchor>
      <arglist>(const CellTopology &amp;c1, const CellTopology &amp;c2)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk</name>
    <filename>namespacestk.html</filename>
    <namespace>stk::encore</namespace>
    <namespace>stk::mesh</namespace>
    <namespace>stk::utils</namespace>
  </compound>
  <compound kind="namespace">
    <name>stk::encore</name>
    <filename>namespacestk_1_1encore.html</filename>
    <namespace>stk::encore::io_util</namespace>
    <namespace>stk::encore::Elem</namespace>
    <namespace>stk::encore::interface_table</namespace>
    <namespace>stk::encore::utils</namespace>
    <namespace>stk::encore::unit_tests</namespace>
    <class kind="class">stk::encore::MyEdge</class>
    <class kind="class">stk::encore::EncoreMesh</class>
    <class kind="class">stk::encore::ExceptionWatch</class>
    <class kind="class">stk::encore::BucketOp</class>
    <class kind="class">stk::encore::CompositeFunction</class>
    <class kind="class">stk::encore::ConstantFunction</class>
    <class kind="class">stk::encore::ConstantFunctionVec</class>
    <class kind="class">stk::encore::ElementOp</class>
    <class kind="class">stk::encore::FieldFunction</class>
    <class kind="class">stk::encore::Function</class>
    <class kind="class">stk::encore::FunctionOperator</class>
    <class kind="class">stk::encore::BuildBoundingBoxes</class>
    <class kind="class">stk::encore::ComputeBases</class>
    <class kind="class">stk::encore::ComputeFieldValues</class>
    <class kind="class">stk::encore::Dimensions</class>
    <class kind="class">stk::encore::FunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::ExampleFunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::Example2FunctionWithIntrepidRequest</class>
    <class kind="class">stk::encore::l2NormOpScalar</class>
    <class kind="class">stk::encore::l2NormOpScalarFunction</class>
    <class kind="class">stk::encore::GenericFunction</class>
    <class kind="class">stk::encore::HasValue</class>
    <class kind="class">stk::encore::HasConstValue</class>
    <class kind="class">stk::encore::IntegratedOp</class>
    <class kind="class">stk::encore::IsInElement</class>
    <class kind="class">stk::encore::Searcher</class>
    <class kind="class">stk::encore::SimpleSearcher</class>
    <class kind="class">stk::encore::STKSearcher</class>
    <class kind="class">stk::encore::MDArrayString</class>
    <class kind="class">stk::encore::MultipleFieldFunction</class>
    <class kind="class">stk::encore::PartOp</class>
    <class kind="class">stk::encore::StringFunction</class>
    <class kind="class">stk::encore::UniformRefiner</class>
    <class kind="struct">stk::encore::SierraPort</class>
    <class kind="class">stk::encore::UniformRefinerPatternBase</class>
    <class kind="class">stk::encore::URP1</class>
    <class kind="class">stk::encore::URP</class>
    <class kind="class">stk::encore::UniformRefinerPattern</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt;, 8, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt;, 24 &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt;, 2, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 3 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4 &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt;, 1, SierraPort &gt;</class>
    <class kind="struct">stk::encore::Specialization</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 4, Specialization &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 6 &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt;, 8, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt;, 4, SierraPort &gt;</class>
    <class kind="class">stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt;, 1, SierraPort &gt;</class>
    <class kind="class">stk::encore::Colorer</class>
    <class kind="class">stk::encore::NodeRegistry</class>
    <class kind="class">stk::encore::SubDimCell</class>
    <class kind="class">stk::encore::Name</class>
    <class kind="class">stk::encore::IntrepidManager</class>
    <class kind="class">stk::encore::HasFinalOp</class>
    <class kind="class">stk::encore::LN_NormOp</class>
    <class kind="class">stk::encore::Norm</class>
    <class kind="struct">stk::encore::RunEnvironment</class>
    <class kind="class">stk::encore::GeometryVerifier</class>
    <class kind="class">stk::encore::TopologyVerifier</class>
    <class kind="struct">stk::encore::lstr</class>
    <class kind="class">stk::encore::ShardsInterfaceTable</class>
    <class kind="class">stk::encore::Util</class>
    <class kind="class">stk::encore::GenericVectorOfObjectPointers</class>
    <class kind="class">stk::encore::Verifier</class>
    <class kind="class">stk::encore::MeshVerifier</class>
    <class kind="class">stk::encore::CodeVerifier</class>
    <class kind="class">stk::encore::MeshGeometryVerifier</class>
    <class kind="class">stk::encore::MeshTopologyVerifier</class>
    <member kind="typedef">
      <type>mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac33b82eb06a879b62e137d77b68b84de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aafa1b9733aca8c19cfdfcd484e37d3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; double &gt;</type>
      <name>MDArray</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1bc90e6da13163d3b697b96c90bc8afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; int &gt;</type>
      <name>MDArrayInt</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aa3979627e4213229da818624dd8a75ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Intrepid::FieldContainer&lt; unsigned &gt;</type>
      <name>MDArrayUInt</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a99f1ad723842db5decce28fd196ccb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>BlockNamesType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a62498deb06f527b64ca197c9b135d065</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>StringStringMap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a278a89ab65d40295a18a2bfe5c491ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4 &gt;</type>
      <name>Quad4_Quad4_4_Old</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3691ebc2530ed49d2ff9cd15b0a67b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt;, 2 &gt;</type>
      <name>Line2_Line2_2</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3efa3c24ab9c7908f1be5c60b485b791</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</type>
      <name>Quad4_Quad4_4_Sierra</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a705d1d209563e4c7aa1851fed5114409</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</type>
      <name>Quad4_Quad4_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3bd14ca5a6c92e8891115f506156a04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt;, 4, SierraPort &gt;</type>
      <name>Tri3_Tri3_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad9a4324ea945f11b526ec335a6968f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt;, 8, SierraPort &gt;</type>
      <name>Tet4_Tet4_8</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1b4d64035435f6d96d927120ae114865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt;, 8, SierraPort &gt;</type>
      <name>Hex8_Hex8_8</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5b08222e9affac7ae810f2dfa65e6756</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt;, 1, SierraPort &gt;</type>
      <name>Quad4_Quad9_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a39290053df78f293dcb9390f6fe279ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt;, 1, SierraPort &gt;</type>
      <name>Quad4_Quad8_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a130d2d0b06a9f749047f90f7fbf0e40a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt;, 1, SierraPort &gt;</type>
      <name>Tri3_Tri6_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a4c2030055063a62aff28e17f9b1c0745</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt;, 1, SierraPort &gt;</type>
      <name>Tet4_Tet10_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>add05edefb9e22466b7215badd68b2f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt;, 1, SierraPort &gt;</type>
      <name>Hex8_Hex27_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad67c00f495a2334089baa820aa2a1eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt;, 1, SierraPort &gt;</type>
      <name>Hex8_Hex20_1</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a00cff4622e2b1d1d3c7094db6577feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 6 &gt;</type>
      <name>Quad4_Tri3_6</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a084779bc96e4f7cacc5e92e58f0390f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 4, Specialization &gt;</type>
      <name>Quad4_Tri3_4</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af72710d6541aa6744b1e40fb9753fc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt;, 24 &gt;</type>
      <name>Hex8_Tet4_24</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a08e46bb5fadbdd9b9a340d0ebc01676d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; EntityId, EntityId &gt;</type>
      <name>SubDimCellData</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af7c590bd54c79e3f103b8f77f6a918b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SubDimCell&lt; EntityId &gt;</type>
      <name>SubDimCell_EntityId</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a6e26ec407a5b7e2b59eddb83f0f8b11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; SubDimCell_EntityId, SubDimCellData &gt;</type>
      <name>SubDimCellToDataMap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac239ff52cce9e5e87e394085934b087a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; EntityRank, unsigned, EntityId, EntityId &gt;</type>
      <name>CommDataType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>adb9d8e315d4731f4258f9a4ee0801e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::diag::MetricTraits&lt; stk::diag::WallTime &gt;::Type</type>
      <name>LapTimeType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab6c81e9f5a17af6f8cc5623745e9ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::diag::MetricTraits&lt; stk::diag::LapCount &gt;::Type</type>
      <name>LapCountType</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad5b8d2345ba189c976dafbd2ead612d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SubDimCellDataEnum</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL_NODE_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714ae0cc4caaa35af583d74fe6db46ea1e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNING_ELEMENT_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2ff84787174bf91de414ee75cc1f714ab635b6daf6328580dffedabda2c8dc3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CommDataTypeEnum</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEEDED_ENTITY_RANK</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a5dae9c940f3292255fa248a82d85525f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUB_DIM_ENTITY_ORDINAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a62c522ca429445af2ad6bda68ee2ed5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_OWNING_ELEMENT_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a60a351c8d3fbcb1318ce69dca0942de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW_NODE_ID</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a16b477b33177b6e0da9862790103a410a0ba68fc8c934363b4ee935fdf75556b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SERIAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca3b281889d675de19ab72fefd7f77dbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_BUFFER_SIZING</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836caba9304a447c332c519ff1f947eebe02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_BUFFERS_ALLOCD</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca9ddab05c8c4b9a853771246a04dfb198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SEND_DONE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a672850bf6d2924934e1ec6761f47836ca0b3cbac401d0ee22fa9ecfb60a082bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LogMask</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_ALWAYS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea34b8b8fc3e9e07a72ef0e607e3159a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ceaf7620abc993026ab4849b3361905a9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE_STATS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea9ace447e47dbe6a68bd2d6db7f018d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_TRACE_SUB_CALLS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea49d27f0fc9ee691e162ef9e7799cd3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_MEMBERS</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66cea78d008e9a25f136b3693c6446b03ee22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_APPLICATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e37926a73041439ffff0c7827cc66ceac0c3cffab7b21456fb96f8c213af02a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>message_type</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_WARNING</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaca13e5144abf867abc473e920bf11967</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_FATAL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62ea45bdf8521025042d6b79bd5ab9408cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_INFORMATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaf47d7d8e1ed5da71f6aca93a96540b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_EXCEPTION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62ea19455a6fd85b43a99b444b2e0c8aff32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_PARALLEL_EXCEPTION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad2d6d9b41ec2f812cc7139f27d3cc62eaacfcf8d439f9b34bfe76fe33245ed761</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>message_throttle_type</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_APPLICATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9a9e8d91c740f0f554875b841bb8330c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSG_TIME_STEP</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0442ba31318e3102e67fd70394fe43e9a16932bcd10805f16f6af4b60c061d085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TimerSetMask</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_MESH</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfaa1ede73eb6e0b06303e3d17ec01294b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_ALL</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfab399a8717bc6948c4cb3fafaad20705f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_FORCE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aef26233b8fde560905e59a10b9b6bbcfa2d55409c39b63742ba3de38f75245b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TurboOption</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_ELEMENT</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795a72d159a78f1d5ea12cb2c17fa77f407b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_BUCKET</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795abd38155df0ce52b8fd597325a424ef97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TURBO_NONE</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3e1780e953ab83a2ae568b79022f8795a2cb2774347f7d42ace45afaa49b4fca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCORE_TIMER_ROOT</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af9f6770261d8ef1992858d1b8855c04fab233ff2814503126bef0965ea89deb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1efd9db3ecca8ae23d694291ba993106</anchor>
      <arglist>(std::ostream &amp;out, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3383052738deed23d69df207b9bac405</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalPrint</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a86c1ef02f3d81c1cd20680df51012e2e</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>MDArray</type>
      <name>evalVec3</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af31224a5aac5f1c1c6cc8fa131955622</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalVec3Print</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad37d95e9dc731da5fed2e42afc33f2ce</anchor>
      <arglist>(double x, double y, double z, double t, Function &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af113a45586b6c1ae850d4754cb1cea02</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 3 &gt;::AABoundingBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3100e4f418fe0bfb87c072ea827adc64</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 3 &gt;::BoundingPoint &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad116ee49e4acfa77875679818c64c9cc</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 2 &gt;::AABoundingBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a057085e910f3beb064d5a0b54c108a32</anchor>
      <arglist>(std::ostream &amp;out, const BuildBoundingBoxes&lt; 2 &gt;::BoundingPoint &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aec005c03c92406d9132b3043c24a6f01</anchor>
      <arglist>(std::ostream &amp;out, const Dimensions &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a10e5163c971daf4d612f32989494a0c9</anchor>
      <arglist>(std::ostream &amp;out, GenericFunction &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator-</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af21a2bb85521571c89626abc799fd7d8</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator+</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a90d00e10616872957c45bd49abd180c1</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator/</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac2c457787a8ac66f4efe0223d806a702</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator*</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af2cdfb033760fc8596a6d919ff1e69ed</anchor>
      <arglist>(StringFunction &amp;lhs, StringFunction &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>StringFunction</type>
      <name>operator-</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>abe6899f2071ca2d20848af4b1896d88a</anchor>
      <arglist>(StringFunction &amp;lhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a2737e30b9f07283a43707b6cee2b2b51</anchor>
      <arglist>(Elements_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aba216965ea571416f720cdfd7263d2b7</anchor>
      <arglist>(Cub_Points_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aca747617fcf5d199c046794d7d14ddd6</anchor>
      <arglist>(NodesPerElem_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>abd91f223b8d0301a795ebf63390421eb</anchor>
      <arglist>(Spatial_Dim_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7e457f060c40beaa50ccc8b6a1b5c933</anchor>
      <arglist>(DOFs_Tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IM_SHARDS_ARRAY_DIM_TAG_DECLARATION</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3d71af4f4fc066b5a8364f72c8537232</anchor>
      <arglist>(BasisFields_Tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tni</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>af64389b055afba1869ad7e27b4893660</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ac92363145b9cf9844ea29f02d15186a1</anchor>
      <arglist>(std::ostream &amp;os, const shards::Array&lt; double, NaturalOrder &gt; &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>square</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab2907abcfe1cb0c46433f6cf793c780e</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae89123732d9f53ab1c28907a341e690a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a23b815371f2d7b879a3d59d7497af795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>pout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a3b72442dd30fe702d9101de070e85c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>tout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae517eaa627bad6ac28f75816f905482a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dwout</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ab4c7b21d00e7e3e277eac53652aa0786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Writer &amp;</type>
      <name>dw</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a728c97c5fc99fd3746847bf1b0b8b16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::TimerSet &amp;</type>
      <name>timerSet</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aefd1840135202d9abc4dcba28aff36ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Timer &amp;</type>
      <name>timer</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5dd35939622ab9ffdd76227d3fef128f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>my_report_handler</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a59f59f612ce30cf2747cd07f9080cfa3</anchor>
      <arglist>(const char *message, int type)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ae77d3d217fce49fb25d660d7497d213a</anchor>
      <arglist>(std::ostream &amp;out, const stk::mesh::Entity &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a80e80edc7680b2c54bb8b73dc78a84bd</anchor>
      <arglist>(std::ostream &amp;os, const shards::Array&lt; double, shards::NaturalOrder &gt; &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a148c909fe16f28fd4d57ecd5a760ff89</anchor>
      <arglist>(std::ostream &amp;out, const std::set&lt; T, L, A &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5ac955fb85f96bb38d51a21b53d922f0</anchor>
      <arglist>(std::ostream &amp;out, const std::vector&lt; T, L &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>aec5821e3b372308dbc506945f670ab5e</anchor>
      <arglist>(std::ostream &amp;out, std::map&lt; Key, Val, Comp, Alloc &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a1af6af4c0e0c94c9ab87f3a8f1137a53</anchor>
      <arglist>(std::ostream &amp;os, const std::vector&lt; Scalar &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::TimerSet &amp;</type>
      <name>encoreTimerSet</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a4ee0924048a4d025df81d3dbeb5bcd61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::diag::Timer &amp;</type>
      <name>encoreTimer</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a74c6fe98c8039e84aa4798e21de82328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LapTimeType</type>
      <name>getLapTime</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7334d3294caecbaa1400b72144a0aac1</anchor>
      <arglist>(stk::diag::Timer &amp;lap_timer)</arglist>
    </member>
    <member kind="function">
      <type>LapCountType</type>
      <name>getAccumulatedLap</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a0519fb45c7cbd3cf486e32b0ab43a3e0</anchor>
      <arglist>(stk::diag::Timer &amp;timer, bool option=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a5d4f7c8be10302f7bfbb6cb88c6792f3</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>ad5fd6d08ef0583c1c33a1dd2b1593a4a</anchor>
      <arglist>(unsigned v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespacestk_1_1encore.html</anchorfile>
      <anchor>a7758cd21ad80c02e41c14b075a309d84</anchor>
      <arglist>(double v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::MyEdge</name>
    <filename>classstk_1_1encore_1_1MyEdge.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MyEdge</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>a0319ca19f5890e22b45519831d84f5e4</anchor>
      <arglist>(IdType i0, IdType i1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>a17df0213d4681d993329ca665735ac01</anchor>
      <arglist>(const MyEdge &amp;e) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>ac6eb1eda75f7d489e20e63e0b7a42266</anchor>
      <arglist>(const MyEdge &amp;e) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>a8832a7029cce34fa8f042e2c99846a1a</anchor>
      <arglist>(const MyEdge &amp;e) const </arglist>
    </member>
    <member kind="function">
      <type>IdType</type>
      <name>getId0</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>a32851c8a94702a0e6acae3244c4ba23a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IdType</type>
      <name>getId1</name>
      <anchorfile>classstk_1_1encore_1_1MyEdge.html</anchorfile>
      <anchor>ae072c11383878eafaf010e1ef1b253c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::EncoreMesh</name>
    <filename>classstk_1_1encore_1_1EncoreMesh.html</filename>
    <class kind="struct">stk::encore::EncoreMesh::FieldCreateOrder</class>
    <class kind="class">stk::encore::EncoreMesh::GMeshSpec</class>
    <member kind="typedef">
      <type>Intrepid::Basis&lt; double, MDArray &gt;</type>
      <name>BasisType</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a9195309d3eadfa8609d0d3f586125e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::RCP&lt; BasisType &gt;</type>
      <name>BasisTypeRCP</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a6052205164baf8bcc28d41c4a6dbedd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned, BasisTypeRCP &gt;</type>
      <name>BasisTableMap</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a24c58b9311cca487f093e72911c11d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; EncoreMesh::FieldCreateOrder &gt;</type>
      <name>FieldCreateOrderVec</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a5edc1923b400a8c2ff566cef813d18e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EncoreMesh</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a552567b6193282d7ac2c79cf7ea42e28</anchor>
      <arglist>(stk::ParallelMachine comm=MPI_COMM_WORLD)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openReadOnly</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a82b5d1cb91901377f2dae59adaa495ca</anchor>
      <arglist>(const std::string &amp;in_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a23cf1f062345c3f7c1795e80210aaaab</anchor>
      <arglist>(const std::string &amp;in_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newMeshReadOnly</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a1456800bf2ef873723d8cb546a8b6cd0</anchor>
      <arglist>(const GMeshSpec gmesh_spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newMesh</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a979f621ee931eef9d4c79f473ba10a27</anchor>
      <arglist>(const GMeshSpec gmesh_spec)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::FieldBase *</type>
      <name>addField</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a88ee98e62d23e12efdb5d1121a087bc7</anchor>
      <arglist>(const std::string &amp;name, const unsigned entity_rank, int vectorDimension=0, const std::string part_name=&quot;universal_part&quot;)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::FieldBase *</type>
      <name>getField</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a57c99ada0ea1b79259a33f6b76577fd8</anchor>
      <arglist>(const std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a78bfe11b97de013b4db47562bdaf6b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reopen</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a56f58d68042908e0c8fb028fa0a12e5c</anchor>
      <arglist>(const std::string temp_file_name=&quot;encore_tmp.e&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveAs</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a79f754b7616d62be9ff321b053f78886</anchor>
      <arglist>(const std::string &amp;out_filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a989ea44136bf17bafbc955cd3a6e48d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printInfo</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a41f33930f029e4834d55998c3c1882b2</anchor>
      <arglist>(std::string header=&quot;&quot;, int print_level=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printFields</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a8e9737a53e7f3763e92812ad9786ba92</anchor>
      <arglist>(std::string header=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSpatialDim</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>aeee220f47bf15d95f28ad18da12eb9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EncoreMesh</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a61410c4e4904fe9609255be6e88e2a11</anchor>
      <arglist>(stk::mesh::MetaData *metaData, stk::mesh::BulkData *bulkData, bool isCommitted=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EncoreMesh</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>aa742fc13cc422954231ad97263ba006b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>adeea6fdcca49ebc63701da9dd223ad08</anchor>
      <arglist>(stk::ParallelMachine comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a4f824ecdbc5d8eb0b40c60ab3f35a812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a71d1a1c041d1c92c1d9b2696f8e50308</anchor>
      <arglist>(const std::string &amp;file=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getRank</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a43bcbe246d2641e1224de9ff9e0e828d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getParallelSize</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>afd7cd18ea7ae7cac4fc09268ffc834d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGhostElement</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>acbd57707c99cfe3ebabf7d439749bc55</anchor>
      <arglist>(const stk::mesh::Entity &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Entity &amp;</type>
      <name>createOrGetNode</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a9de6dd5f7593385712dd5240208f0560</anchor>
      <arglist>(stk::mesh::EntityId nid, double *x=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createEntities</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a79d1d47a1eb9956bd76afbb227c85634</anchor>
      <arglist>(stk::mesh::EntityRank entityRank, int count, std::vector&lt; stk::mesh::Entity * &gt; &amp;requested_entities)</arglist>
    </member>
    <member kind="function">
      <type>const mesh::Part *</type>
      <name>getPart</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a837a186159622cff320b2086055b9849</anchor>
      <arglist>(const std::string &amp;part_name)</arglist>
    </member>
    <member kind="function">
      <type>mesh::Part *</type>
      <name>getNonConstPart</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a1f432d79b623b136d7b97ce0acf2af74</anchor>
      <arglist>(const std::string &amp;part_name)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>node_field_data</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a50b31b2de3ce66a7c2b7465f72026585</anchor>
      <arglist>(stk::mesh::FieldBase *field, const mesh::EntityId node_id)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::BulkData *</type>
      <name>getBulkData</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a22b72186b089d0efa13da40f5158821d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::MetaData *</type>
      <name>getMetaData</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>af6cf5e594e42ade3863014e92abb4930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nodalOpLoop</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a3905377487707211a59ce76bc4b274fb</anchor>
      <arglist>(GenericFunction &amp;nodalOp, stk::mesh::FieldBase *field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementOpLoop</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>ae65792aafb97abaf6f8d789415bdac18</anchor>
      <arglist>(ElementOp &amp;elementOp, stk::mesh::FieldBase *field=0, stk::mesh::Part *part=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bucketOpLoop</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>aa87f08bc5d881375d67684bbf2c0dd83</anchor>
      <arglist>(BucketOp &amp;bucketOp, stk::mesh::FieldBase *field=0, stk::mesh::Part *part=0)</arglist>
    </member>
    <member kind="function">
      <type>VectorFieldType &amp;</type>
      <name>getCoordinatesField</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a17a8980758ef9e2295511fec4c14f33e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillCellNodes</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a8c814acc95ff09926639a0c508b12ae3</anchor>
      <arglist>(const mesh::Bucket &amp;bucket, FieldBase *field, ArrayType &amp;cellNodes, unsigned dataStrideArg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>field_data</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a3374fc970248c6b2c8e35b48ece82d1c</anchor>
      <arglist>(const stk::mesh::FieldBase *field, const stk::mesh::Bucket &amp;bucket, unsigned *stride=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>field_data</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a99dac2b395fc334996a1fd32c5326597</anchor>
      <arglist>(const stk::mesh::FieldBase *field, const mesh::Entity &amp;node, unsigned *stride=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BasisTypeRCP</type>
      <name>getBasis</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a8c0429ef53b32950db7d6dc8fc62a79d</anchor>
      <arglist>(shards::CellTopology &amp;topo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setupBasisTable</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>abfcb4909b6bfcd9b268469dbf50661c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>size1</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a5c1f3cc3ed2b86afae83db02b2aa1892</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>size1</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>adb1f4a5796633fa8b641cb59e68cf73d</anchor>
      <arglist>(const stk::mesh::Entity &amp;element)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillCellNodes</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a8b957ea8e513a9ce175ae770a1ff3320</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket, FieldBase *field, ArrayType &amp;cellNodes, unsigned dataStride=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillCellNodes</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a25c8f404f53361834b273ba0b28ca961</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, FieldBase *field, ArrayType &amp;cellNodes, unsigned dataStride=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findMinMaxEdgeLength</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a8f8f806e17415d6b5cb8f99775fa833d</anchor>
      <arglist>(const mesh::Bucket &amp;bucket, stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt; &amp;coord_field, FieldContainer&lt; double &gt; &amp;elem_min_edge_length, FieldContainer&lt; double &gt; &amp;elem_max_edge_length)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_dontCheckState</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>aee118553cc56b959eaad76478d0fd7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::string</type>
      <name>s_omit_part</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh.html</anchorfile>
      <anchor>a99642c4bcbb50e6f09eb3857ce42792d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::EncoreMesh::FieldCreateOrder</name>
    <filename>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldCreateOrder</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>af6687c6a95ab322cbd4e68751160a341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldCreateOrder</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>a05ca1c10290a248d4ee17ec89178b706</anchor>
      <arglist>(const std::string name, const unsigned entity_rank, const std::vector&lt; int &gt; dimensions, const mesh::Part *part)</arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>m_name</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>a2e8c894658647ed90ab726cfedf68e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned</type>
      <name>m_entity_rank</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>a655d98c5d826a3b47e02726ba4ffd9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::vector&lt; int &gt;</type>
      <name>m_dimensions</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>a9a95fef0d9fe7bd3c63b51181239de9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const mesh::Part *</type>
      <name>m_part</name>
      <anchorfile>structstk_1_1encore_1_1EncoreMesh_1_1FieldCreateOrder.html</anchorfile>
      <anchor>af09fd1ace620c47c766e2248010c8da4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::EncoreMesh::GMeshSpec</name>
    <filename>classstk_1_1encore_1_1EncoreMesh_1_1GMeshSpec.html</filename>
    <base>stk::encore::Name</base>
    <member kind="function">
      <type></type>
      <name>GMeshSpec</name>
      <anchorfile>classstk_1_1encore_1_1EncoreMesh_1_1GMeshSpec.html</anchorfile>
      <anchor>afc2ba515e8be554777fff356d8aa0bff</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ExceptionWatch</name>
    <filename>classstk_1_1encore_1_1ExceptionWatch.html</filename>
    <member kind="function">
      <type></type>
      <name>ExceptionWatch</name>
      <anchorfile>classstk_1_1encore_1_1ExceptionWatch.html</anchorfile>
      <anchor>a1d00ed301a519aadbceb6b3d1331fcfb</anchor>
      <arglist>(int line, char const *pfname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExceptionWatch</name>
      <anchorfile>classstk_1_1encore_1_1ExceptionWatch.html</anchorfile>
      <anchor>ad330975422e59e5aab195d20dfb9a281</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::BucketOp</name>
    <filename>classstk_1_1encore_1_1BucketOp.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1BucketOp.html</anchorfile>
      <anchor>a22eea455899b358d4dc4eafd14c892b6</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BucketOp</name>
      <anchorfile>classstk_1_1encore_1_1BucketOp.html</anchorfile>
      <anchor>a956294b77310ba47286db7403e21c9b0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::CompositeFunction</name>
    <filename>classstk_1_1encore_1_1CompositeFunction.html</filename>
    <base>stk::encore::Function</base>
    <member kind="function">
      <type></type>
      <name>CompositeFunction</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>a73b84ed7a1a43d7c7d1f0b2d83a7b367</anchor>
      <arglist>(const char *name, Function &amp;func_1, Function &amp;func_2, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), unsigned integration_order=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>a79e22f3d38547f6e6fdce12c3018fa88</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>a8db15e06cd10a2d5bc97ccd458f60b41</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>af92ac53f8786fbbd84ba57c69538b7ac</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Function &amp;</type>
      <name>m_func1</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>a267cc37f577db3a65682d1d421c015d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Function &amp;</type>
      <name>m_func2</name>
      <anchorfile>classstk_1_1encore_1_1CompositeFunction.html</anchorfile>
      <anchor>a75036af6d3a964d57c95afb39aaf2431</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ConstantFunction</name>
    <filename>classstk_1_1encore_1_1ConstantFunction.html</filename>
    <base>stk::encore::Function</base>
    <base>HasValue&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>ConstantFunction</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunction.html</anchorfile>
      <anchor>a92dfdc88442a4fe6856718fe51844f69</anchor>
      <arglist>(double value, const char *name, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), unsigned integration_order=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunction.html</anchorfile>
      <anchor>a2c5fdf5081b919d6a1640528c034a856</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>getValue</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunction.html</anchorfile>
      <anchor>a03b62818c87af1e2fded5cc9aff0d177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunction.html</anchorfile>
      <anchor>acf6968e7053336febdc8d582b104741b</anchor>
      <arglist>(double &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ConstantFunctionVec</name>
    <filename>classstk_1_1encore_1_1ConstantFunctionVec.html</filename>
    <base>stk::encore::Function</base>
    <base>HasValue&lt; std::vector&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>ConstantFunctionVec</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunctionVec.html</anchorfile>
      <anchor>abcd8be1dd7cb1afb5ed444a886e84454</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;value, const char *name, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), unsigned integration_order=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunctionVec.html</anchorfile>
      <anchor>a4303c32a6650b0abb0319dc002fa2829</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt; &amp;</type>
      <name>getValue</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunctionVec.html</anchorfile>
      <anchor>a55353be00e8a1e20cb65a3fa0796ed84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classstk_1_1encore_1_1ConstantFunctionVec.html</anchorfile>
      <anchor>abe274a19f29ac08d5a7327955474be3e</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ElementOp</name>
    <filename>classstk_1_1encore_1_1ElementOp.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1ElementOp.html</anchorfile>
      <anchor>aba56433500adf38eb6ae027e8a3ba6cf</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1ElementOp.html</anchorfile>
      <anchor>a1aaa52d54a0d68419168b7180dc8a4e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fini_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1ElementOp.html</anchorfile>
      <anchor>af959bee2e8a44380007ede078e9f2a60</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ElementOp</name>
      <anchorfile>classstk_1_1encore_1_1ElementOp.html</anchorfile>
      <anchor>a8d55596f725b3ae033f70c57beee1302</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::FieldFunction</name>
    <filename>classstk_1_1encore_1_1FieldFunction.html</filename>
    <base>stk::encore::Function</base>
    <member kind="enumeration">
      <name>SearchType</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ae47679a14eb236255b68ebc544dae2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIMPLE_SEARCH</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ae47679a14eb236255b68ebc544dae2e5a3f1845a8c74d1ec722715c32ef5c2832</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STK_SEARCH</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ae47679a14eb236255b68ebc544dae2e5abb2d462253d6e01ce9b31f09309e0da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldFunction</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a6feb306e2cd1b3b2944f4f53839404b6</anchor>
      <arglist>(const char *name, mesh::FieldBase *field, EncoreMesh &amp;mesh, int domain_dimension=3, int codomain_dimension=1, SearchType searchType=SIMPLE_SEARCH, unsigned integration_order=0)</arglist>
    </member>
    <member kind="function">
      <type>mesh::FieldBase *</type>
      <name>getField</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a8efd06578faca9f2bb22fb3cbb687a3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolateFrom</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>af3b5cbff66d38a6b1bee1e21ffcb6a76</anchor>
      <arglist>(Function &amp;function)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldFunction</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a475b250458d2002e34fcaea562a1fa72</anchor>
      <arglist>(const char *name, mesh::FieldBase *field, mesh::BulkData *bulk, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), SearchType searchType=SIMPLE_SEARCH, unsigned integration_order=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldFunction</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a5d35495118dd57899ffc6e3d0ba3d18d</anchor>
      <arglist>(const char *name, mesh::FieldBase *field, EncoreMesh &amp;eMesh, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), SearchType searchType=SIMPLE_SEARCH, unsigned integration_order=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FieldFunction</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ad69d766e882ce2d9e15d17e6c1b567a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>aa55580ac8458823a6db44e7bbf34889a</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>localEvaluation</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ac6b531263c55051d3e8e316de1670ee2</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a8e1873d9d02813ca505f920699c0f1dd</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ab19b200aeef180f09e1cff732a01cf14</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>helper</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>aa4fd64d56251754dffa737e8d0dfd095</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;output_field_values, const BucketOrEntity &amp;bucket_or_element, const MDArray &amp;parametric_coordinates, double time_value_optional)</arglist>
    </member>
    <member kind="function">
      <type>mesh::BulkData *</type>
      <name>getBulkData</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>a8e8435f2fe9ca18c702be64d18d003b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFoundOnLocalOwnedPart</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>aebc5807e15f20640f23c2a9bd285fb60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>m_parallelEval</name>
      <anchorfile>classstk_1_1encore_1_1FieldFunction.html</anchorfile>
      <anchor>ac507ac4eca2972989462a84ec563d102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Function</name>
    <filename>classstk_1_1encore_1_1Function.html</filename>
    <base>stk::encore::GenericFunction</base>
    <member kind="typedef">
      <type>std::map&lt; std::string, Function * &gt;</type>
      <name>NameToFunctionMap</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a67bf05489039e2af3fc0a90e7b1779a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Function</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a0157eb457473caccdb27ccc9e867c90d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Function</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>ab1a6663a2b70c0453a9645d02d7873fa</anchor>
      <arglist>(const char *name, Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions(), unsigned integration_order=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a0a1a9ee13a5b81a347e376ce1fa22067</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a2c55f7ac1932dd6c236085bf645e9c3c</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a7a4267f242b5d7610b763c758c4f0f8d</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>af4d6ddca0f17c79169c260cbf4cafdfb</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Function &gt;</type>
      <name>derivative</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a088f8df86e235ba44a780acc6d42e079</anchor>
      <arglist>(MDArrayString &amp;deriv_spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>derivativeAtPoint</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>ab07dd2e75daa41630990e68758f17408</anchor>
      <arglist>(MDArrayString &amp;deriv_spec, MDArray &amp;domain, MDArray &amp;codomain, double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>Function *</type>
      <name>addAlias</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>af93dfaebe6898f27c08ef12df3b79ba7</anchor>
      <arglist>(const char *alias)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a1cedcc8664808e916b986dd3f547bb11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntegrationOrder</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a5258a3569e918ce5475593489864ccb0</anchor>
      <arglist>(unsigned iord)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getIntegrationOrder</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>ae3851d4c1a6555609b018ea606c63193</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDomainDimensions</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>ae13d15c0dbb848c4e5dd868c0563d6a2</anchor>
      <arglist>(const Dimensions dims)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCodomainDimensions</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a3c2f400eeecbeaab10ab2a4f71f7aec8</anchor>
      <arglist>(const Dimensions dims)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setIntegrationOrderDefault</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a3cc81b6822624650285dacfea5dfc4d3</anchor>
      <arglist>(unsigned integration_order)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSpatialDimDefault</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a0f72fd065a4e0f8e1208e6c3147eff4a</anchor>
      <arglist>(unsigned spatialDim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCodomainDimDefault</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a598452d490ca04d723a3ad531de1166e</anchor>
      <arglist>(unsigned codomainDim)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Function &amp;</type>
      <name>Identity</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a47f2b9d612b12a36d9a7a8f9d2c9602a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>argsAreValid</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a6a9e9165bba61bc6ee5b3afa522aab1d</anchor>
      <arglist>(const MDArray &amp;in, const MDArray &amp;out)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>last_dimension</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a620958d7611f124fff07a1e74f704d3a</anchor>
      <arglist>(MDArray &amp;arr)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static NameToFunctionMap &amp;</type>
      <name>getNameToFunctionMap</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>aae9412518656069fe27456f9140ef795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a38bc23b75ed34b92960dc70b38edb58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned</type>
      <name>m_integration_order</name>
      <anchorfile>classstk_1_1encore_1_1Function.html</anchorfile>
      <anchor>a5457da92ef6a660a3a101e59fde1220a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::FunctionOperator</name>
    <filename>classstk_1_1encore_1_1FunctionOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>FunctionOperator</name>
      <anchorfile>classstk_1_1encore_1_1FunctionOperator.html</anchorfile>
      <anchor>ac1f9c9db9aa2da5b5f15c69b97828d3d</anchor>
      <arglist>(mesh::BulkData &amp;bulkData, mesh::Part *part=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FunctionOperator</name>
      <anchorfile>classstk_1_1encore_1_1FunctionOperator.html</anchorfile>
      <anchor>a0fb3d33f381096bab977f247cbb7cd1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1FunctionOperator.html</anchorfile>
      <anchor>affce3df5ba97f851505ed13ce8ff2b36</anchor>
      <arglist>(Function &amp;integrand, Function &amp;result)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mesh::BulkData &amp;</type>
      <name>m_bulkData</name>
      <anchorfile>classstk_1_1encore_1_1FunctionOperator.html</anchorfile>
      <anchor>a3be85758924336aecac133b726c805a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mesh::Part *</type>
      <name>m_part</name>
      <anchorfile>classstk_1_1encore_1_1FunctionOperator.html</anchorfile>
      <anchor>a671364db1ae7357032db9813471bd106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::BuildBoundingBoxes</name>
    <filename>classstk_1_1encore_1_1BuildBoundingBoxes.html</filename>
    <templarg>SpatialDim</templarg>
    <base>stk::encore::ElementOp</base>
    <member kind="typedef">
      <type>stk::search::ident::IdentProc&lt; uint64_t, unsigned &gt;</type>
      <name>IdentProc</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>ac5af12ceb7dd716da5d860799499e938</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::search::box::PointBoundingBox&lt; IdentProc, double, SpatialDim &gt;</type>
      <name>BoundingPoint</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a932f8c5df45d1f15eb3e53be8ef94199</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::search::box::AxisAlignedBoundingBox&lt; IdentProc, double, SpatialDim &gt;</type>
      <name>AABoundingBox</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>af6ae94b8b93d20ee5dada7350f9005db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BuildBoundingBoxes</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a5937f8b82364700fa3335bebd02aec5e</anchor>
      <arglist>(std::vector&lt; AABoundingBox &gt; &amp;boxes, VectorFieldType *coords_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a8baf75b78722e405894b47b1fbe3b957</anchor>
      <arglist>(std::vector&lt; AABoundingBox &gt; &amp;boxes, VectorFieldType *coords_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a0afb59b208decb5e06a2a82230b1e820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fini_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>acd77275a30366ab3b3996ad7616107f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>adac1d1c7cc3c691f2ed43bf8ecea610f</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function">
      <type>AABoundingBox</type>
      <name>getBoundingBox</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>adadd42d4f3e2aac0b961ae965cb3cf12</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AABoundingBox &gt; &amp;</type>
      <name>m_boxes</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a73db276bf70416cf1efba9072d683d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorFieldType *</type>
      <name>m_coords_field</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>a1b7943fc3b398fd27711944ca0fe9600</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_notInitialized</name>
      <anchorfile>classstk_1_1encore_1_1BuildBoundingBoxes.html</anchorfile>
      <anchor>abac23ae11edd9a4311bcc005f028b829</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ComputeBases</name>
    <filename>classstk_1_1encore_1_1ComputeBases.html</filename>
    <member kind="function">
      <type></type>
      <name>ComputeBases</name>
      <anchorfile>classstk_1_1encore_1_1ComputeBases.html</anchorfile>
      <anchor>a0eac4913b078b8358ca251aaa078aacb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBases</name>
      <anchorfile>classstk_1_1encore_1_1ComputeBases.html</anchorfile>
      <anchor>a7dbb783cd95da4676fef66ecb19bbac2</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coordinates, MDArray &amp;transformed_basis_values, int which_cell=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBases</name>
      <anchorfile>classstk_1_1encore_1_1ComputeBases.html</anchorfile>
      <anchor>a41697076aba8c47f9c57c5e4f3206b91</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coordinates, MDArray &amp;transformed_basis_values)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ComputeFieldValues</name>
    <filename>classstk_1_1encore_1_1ComputeFieldValues.html</filename>
    <member kind="function">
      <type>void</type>
      <name>getFieldValues</name>
      <anchorfile>classstk_1_1encore_1_1ComputeFieldValues.html</anchorfile>
      <anchor>a0532556f64e2a252da4b7bd20969c0de</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, MDArray &amp;transformed_basis_values, FieldBase *field, MDArray &amp;output_field_values)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Dimensions</name>
    <filename>classstk_1_1encore_1_1Dimensions.html</filename>
    <base>std::vector</base>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>base_type</name>
      <anchorfile>classstk_1_1encore_1_1Dimensions.html</anchorfile>
      <anchor>ab64379a381b09fa1bd089e6db4c58c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimensions</name>
      <anchorfile>classstk_1_1encore_1_1Dimensions.html</anchorfile>
      <anchor>abcc0eed8ff41a8b0ece1594959609d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimensions</name>
      <anchorfile>classstk_1_1encore_1_1Dimensions.html</anchorfile>
      <anchor>a03e228890da6933f87e13c28455d3946</anchor>
      <arglist>(int i0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimensions</name>
      <anchorfile>classstk_1_1encore_1_1Dimensions.html</anchorfile>
      <anchor>ac1091c618fccc299f76e0be9590b7007</anchor>
      <arglist>(int i0, int i1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimensions</name>
      <anchorfile>classstk_1_1encore_1_1Dimensions.html</anchorfile>
      <anchor>af2fe85d86eed6838ad9a96765d10a833</anchor>
      <arglist>(int i0, int i1, int i2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::FunctionWithIntrepidRequest</name>
    <filename>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</filename>
    <base>stk::encore::Function</base>
    <member kind="typedef">
      <type>FieldBase *</type>
      <name>FieldType</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>ab6cf813782a3bd2b6fba2399742ff74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDArray *</type>
      <name>ContainerType</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a4472255bf6ae5f3ae75a56a4737b5789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; FieldType, ContainerType &gt;</type>
      <name>Request</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a842761ef3005d5d211c3b642628f6c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Request::iterator</type>
      <name>RequestIterator</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a1a6d89eef96244590e8604629ab2143e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Function *</type>
      <name>getFunction</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a63e407deeac14e77c7f335c6d087a9dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionWithIntrepidRequest</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>af00816dd096cca54cb243628d510db5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionWithIntrepidRequest</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a4c99c9c644dfa7a8ae465a01e23d1f96</anchor>
      <arglist>(Function *func, Request values=Request(), Request gradient=Request(), Request higherDerivs=Request())</arglist>
    </member>
    <member kind="variable">
      <type>Request</type>
      <name>m_order_values</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a4471068a0e6ae3861c814211219a21d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Request</type>
      <name>m_order_gradient</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a906e8a0c48ca5904be74a1af7ab830f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Request</type>
      <name>m_order_higherDerivs</name>
      <anchorfile>classstk_1_1encore_1_1FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a4397c809f8a4ba897f1ea41283ff0106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ExampleFunctionWithIntrepidRequest</name>
    <filename>classstk_1_1encore_1_1ExampleFunctionWithIntrepidRequest.html</filename>
    <base>stk::encore::FunctionWithIntrepidRequest</base>
    <member kind="function">
      <type></type>
      <name>ExampleFunctionWithIntrepidRequest</name>
      <anchorfile>classstk_1_1encore_1_1ExampleFunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a1fbd51d40bfc4b0b7a398c4998677a1a</anchor>
      <arglist>(BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1ExampleFunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a8a670f16934230bee7e253b1b30322e6</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;output_integrand_values, double time_value_optional=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Example2FunctionWithIntrepidRequest</name>
    <filename>classstk_1_1encore_1_1Example2FunctionWithIntrepidRequest.html</filename>
    <base>stk::encore::FunctionWithIntrepidRequest</base>
    <member kind="function">
      <type></type>
      <name>Example2FunctionWithIntrepidRequest</name>
      <anchorfile>classstk_1_1encore_1_1Example2FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>a8040cdc84fad5d72396101ca1657dc04</anchor>
      <arglist>(BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1Example2FunctionWithIntrepidRequest.html</anchorfile>
      <anchor>aa47358d7ffb713992aec1746b6047a2f</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;output_integrand_values, double time_value_optional=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::l2NormOpScalar</name>
    <filename>classstk_1_1encore_1_1l2NormOpScalar.html</filename>
    <base>stk::encore::FunctionWithIntrepidRequest</base>
    <member kind="function">
      <type></type>
      <name>l2NormOpScalar</name>
      <anchorfile>classstk_1_1encore_1_1l2NormOpScalar.html</anchorfile>
      <anchor>af1a32f6c492e777d09c644c90a22b680</anchor>
      <arglist>(FieldBase *field)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1l2NormOpScalar.html</anchorfile>
      <anchor>a7ff97cb6b3053fff89f5d76d10aa4d0c</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;output_integrand_values, double time_value_optional=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::l2NormOpScalarFunction</name>
    <filename>classstk_1_1encore_1_1l2NormOpScalarFunction.html</filename>
    <base>stk::encore::FunctionWithIntrepidRequest</base>
    <member kind="function">
      <type></type>
      <name>l2NormOpScalarFunction</name>
      <anchorfile>classstk_1_1encore_1_1l2NormOpScalarFunction.html</anchorfile>
      <anchor>a9345d8398908b8687e02d3d2aaba4dcf</anchor>
      <arglist>(Function &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1l2NormOpScalarFunction.html</anchorfile>
      <anchor>aa78ead2a84cc934b1169aaac7701a53a</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;output_integrand_values, double time_value_optional=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::GenericFunction</name>
    <filename>classstk_1_1encore_1_1GenericFunction.html</filename>
    <member kind="function">
      <type></type>
      <name>GenericFunction</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>adaff1c318db916b093d0a42076022ace</anchor>
      <arglist>(Dimensions domain_dimensions=Dimensions(), Dimensions codomain_dimensions=Dimensions())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericFunction</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>ad6fee7b1b3c4a39563b6264af317e195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a37c17d00991819167b27fbcdecb07549</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, double time=0.0)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpatialOperator</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a38a7c706918becdd272335863cb8d450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsSpatialOperator</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a14a07959cb207fa55a43a9f36655a6e6</anchor>
      <arglist>(bool so)</arglist>
    </member>
    <member kind="function">
      <type>Dimensions</type>
      <name>getDomainDimensions</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>ae052cdab269fa1b57fd1e9003cc3894a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Dimensions</type>
      <name>getCodomainDimensions</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a0e406db170de150befdbd5077d29cb74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MDArray</type>
      <name>getNewDomain</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a78ec62ce86efc0fb221dff7f94cf3647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MDArray</type>
      <name>getNewCodomain</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>aa7c406c2ffede4dcaaee35719a27ec77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MDArray</type>
      <name>getNewCodomain</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>addb27e0508bb1f81500e6ea54f56dde7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MDArray</type>
      <name>getNewMDArray</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>aa9c348ab41d0a38c18c889e28e47d69a</anchor>
      <arglist>(const Dimensions dims)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Dimensions</type>
      <name>m_domain_dimensions</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a9b3fb3cb1a4dc496b3bb921331d1fd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Dimensions</type>
      <name>m_codomain_dimensions</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>a70f8c16693ef41256050527d28a89e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_spatialOperator</name>
      <anchorfile>classstk_1_1encore_1_1GenericFunction.html</anchorfile>
      <anchor>acdb7daf4c67a1244fdd70c7ad1863cb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::HasValue</name>
    <filename>classstk_1_1encore_1_1HasValue.html</filename>
    <templarg>ValueType</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual ValueType &amp;</type>
      <name>getValue</name>
      <anchorfile>classstk_1_1encore_1_1HasValue.html</anchorfile>
      <anchor>a5c33675652a8364321f4d0d9e9f761c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValue</name>
      <anchorfile>classstk_1_1encore_1_1HasValue.html</anchorfile>
      <anchor>a8afb041b82acd1b33725103574d90acc</anchor>
      <arglist>(ValueType &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HasValue</name>
      <anchorfile>classstk_1_1encore_1_1HasValue.html</anchorfile>
      <anchor>a66cdaaa21cba101506ba8441981235b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::HasConstValue</name>
    <filename>classstk_1_1encore_1_1HasConstValue.html</filename>
    <templarg>ValueType</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual ValueType &amp;</type>
      <name>getValue</name>
      <anchorfile>classstk_1_1encore_1_1HasConstValue.html</anchorfile>
      <anchor>abeeac4a434a670ea16ba6c660e37d8ef</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HasConstValue</name>
      <anchorfile>classstk_1_1encore_1_1HasConstValue.html</anchorfile>
      <anchor>a11b73b45efdca759113ffb46d23de1f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntegratedOp</name>
    <filename>classstk_1_1encore_1_1IntegratedOp.html</filename>
    <base>stk::encore::ElementOp</base>
    <base>stk::encore::BucketOp</base>
    <base>HasConstValue&lt; std::vector&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>IntegratedOp</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>ada436c96a149ec987b0235de193b6e7a</anchor>
      <arglist>(Function &amp;integrand, TurboOption turboOpt=TURBO_NONE, FieldBase *field=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>a06bb391e9d57b5adfb1de79c80bc2e2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt; &amp;</type>
      <name>getValue</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>a3ba3056607e5f4af6e22b15a399ac770</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getElementCount</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>a6d42eb68d7bda6b97c84cbb40d621e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>aa5a45e8bb74e6b84901b583d3e36eb5c</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>a87f9e007b0ccafbb02814579ece8380c</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>ad774d7ab1e2185ba8d6433438dae209e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fini_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1IntegratedOp.html</anchorfile>
      <anchor>a229398d173c77c2053d934b8f793f024</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IsInElement</name>
    <filename>classstk_1_1encore_1_1IsInElement.html</filename>
    <base>stk::encore::ElementOp</base>
    <member kind="function">
      <type></type>
      <name>IsInElement</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>ad9d76109bb8b1d75f61ecfd8a72a5567</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;found_parametric_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>aa84d58542df4ce39508d0194267bd9ed</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>ab49be96bf619fc5f80e2b5358df0dc82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fini_elementOp</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>a791667a07a6d4c97426a00c172b2e46f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_found_it</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>a3fd8974b561b00bc6402595c0b35a3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MDArray &amp;</type>
      <name>m_input_phy_points</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>aeaf1e35141c68ef8283e782321155e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MDArray &amp;</type>
      <name>m_found_parametric_coordinates</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>ac5f7f84d0b9275f7189091de58661851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const stk::mesh::Entity *</type>
      <name>m_foundElement</name>
      <anchorfile>classstk_1_1encore_1_1IsInElement.html</anchorfile>
      <anchor>af375ef0d0d9cc32ed81ddea6bbc5c03d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Searcher</name>
    <filename>classstk_1_1encore_1_1Searcher.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const stk::mesh::Entity *</type>
      <name>findElement</name>
      <anchorfile>classstk_1_1encore_1_1Searcher.html</anchorfile>
      <anchor>a0dd36dad897eb2993ffb2f5084395cf9</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;found_parametric_coordinates, unsigned &amp;found_it, const mesh::Entity *hint_element)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupSearch</name>
      <anchorfile>classstk_1_1encore_1_1Searcher.html</anchorfile>
      <anchor>af8569ee6166f83e7c28b28f32caf7c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tearDownSearch</name>
      <anchorfile>classstk_1_1encore_1_1Searcher.html</anchorfile>
      <anchor>a318aea6c48d362f0123dcff5fb672000</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Searcher</name>
      <anchorfile>classstk_1_1encore_1_1Searcher.html</anchorfile>
      <anchor>aa01f0e816d29c489522fff83d741c570</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::SimpleSearcher</name>
    <filename>classstk_1_1encore_1_1SimpleSearcher.html</filename>
    <base>stk::encore::Searcher</base>
    <member kind="function">
      <type></type>
      <name>SimpleSearcher</name>
      <anchorfile>classstk_1_1encore_1_1SimpleSearcher.html</anchorfile>
      <anchor>aca266d4979bf4de9b7163545a3d03812</anchor>
      <arglist>(FieldFunction *ff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleSearcher</name>
      <anchorfile>classstk_1_1encore_1_1SimpleSearcher.html</anchorfile>
      <anchor>adc9c34531295be0e329c95ee447fb71f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const stk::mesh::Entity *</type>
      <name>findElement</name>
      <anchorfile>classstk_1_1encore_1_1SimpleSearcher.html</anchorfile>
      <anchor>a13a305d9df36870b14999626ead94008</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;found_parametric_coordinates, unsigned &amp;found_it, const mesh::Entity *hint_element)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::STKSearcher</name>
    <filename>classstk_1_1encore_1_1STKSearcher.html</filename>
    <templarg>SpatialDim</templarg>
    <base>stk::encore::Searcher</base>
    <member kind="function">
      <type></type>
      <name>STKSearcher</name>
      <anchorfile>classstk_1_1encore_1_1STKSearcher.html</anchorfile>
      <anchor>af0aa0fb4f2fae6dc17a6e72a037a4200</anchor>
      <arglist>(FieldFunction *ff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~STKSearcher</name>
      <anchorfile>classstk_1_1encore_1_1STKSearcher.html</anchorfile>
      <anchor>ae8d8e0f2e165eeca255d8f3cf4f42759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSearch</name>
      <anchorfile>classstk_1_1encore_1_1STKSearcher.html</anchorfile>
      <anchor>a86b04aca3decc689aa1ef3cce239e181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tearDownSearch</name>
      <anchorfile>classstk_1_1encore_1_1STKSearcher.html</anchorfile>
      <anchor>aaace6c960df9920ddcc655c0e4d276c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const stk::mesh::Entity *</type>
      <name>findElement</name>
      <anchorfile>classstk_1_1encore_1_1STKSearcher.html</anchorfile>
      <anchor>ac64878b3a33804573b7c7e9b887e6d94</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;found_parametric_coordinates, unsigned &amp;found_it, const mesh::Entity *hint_element)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::MDArrayString</name>
    <filename>classstk_1_1encore_1_1MDArrayString.html</filename>
    <member kind="function">
      <type></type>
      <name>MDArrayString</name>
      <anchorfile>classstk_1_1encore_1_1MDArrayString.html</anchorfile>
      <anchor>a57764cf51d3e0f62bbe6c14e1ca145a5</anchor>
      <arglist>(int dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MDArrayString</name>
      <anchorfile>classstk_1_1encore_1_1MDArrayString.html</anchorfile>
      <anchor>a9150d258b3d7910b4ea051310a45d67e</anchor>
      <arglist>(int dim0, int dim1)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1MDArrayString.html</anchorfile>
      <anchor>a3f973b2e232376c256bf4446a92d5872</anchor>
      <arglist>(int i1)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1MDArrayString.html</anchorfile>
      <anchor>a4e461ebbbd094e27d8ac743d90d9b874</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classstk_1_1encore_1_1MDArrayString.html</anchorfile>
      <anchor>a99b3d1caff7797378e4b16d82ae880f6</anchor>
      <arglist>(int i1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::MultipleFieldFunction</name>
    <filename>classstk_1_1encore_1_1MultipleFieldFunction.html</filename>
    <base>stk::encore::FieldFunction</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::PartOp</name>
    <filename>classstk_1_1encore_1_1PartOp.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1PartOp.html</anchorfile>
      <anchor>a455172c1ccb22fc0983c7ab5ddbf05b5</anchor>
      <arglist>(const stk::mesh::Part &amp;part, mesh::Selector &amp;select_owned, stk::mesh::FieldBase *field, const mesh::BulkData &amp;bulkData)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::StringFunction</name>
    <filename>classstk_1_1encore_1_1StringFunction.html</filename>
    <base>stk::encore::Function</base>
    <base>stk::expreval::VariableMap::Resolver</base>
    <member kind="function">
      <type></type>
      <name>StringFunction</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>af542b6b02eb2cfd7efb38b8730f71879</anchor>
      <arglist>(const char *function_string, Name name=Name(&quot;noname&quot;), int domain_dimension=3, int codomain_dimension=1, unsigned integration_order=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFunctionString</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a1776ff1edce96daeadc68b34178f812c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGradientStrings</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a633253e52a9920332a382f5e721c537f</anchor>
      <arglist>(std::string gstring[3], int len)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Function &gt;</type>
      <name>derivative</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a74a29f0db2d87f56e9ae03081c5432b6</anchor>
      <arglist>(MDArrayString &amp;deriv_spec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringFunction</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a875a1eb0dae03bffbf2c63a4e9cd4047</anchor>
      <arglist>(const char *function_string, Name name, Dimensions domain_dimensions, Dimensions codomain_dimensions, unsigned integration_order=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringFunction</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>ace979290abec8983b5964e62783257d5</anchor>
      <arglist>(const StringFunction &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resolve</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>aec23eac0d697f75c228dd1e669e9f664</anchor>
      <arglist>(stk::expreval::VariableMap::iterator &amp;var_it)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Function &gt;</type>
      <name>derivative_test</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a8257cb73997d3fb4c3101c587a06fb64</anchor>
      <arglist>(MDArrayString &amp;deriv_spec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Function &gt;</type>
      <name>derivative_test_fd</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>aa7f2bbaca263122c321785b9b2ea8c56</anchor>
      <arglist>(MDArrayString &amp;deriv_spec, double eps=1.e-6)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>ac5e5916a0ce010b366f261d642419c97</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>ad0791b761ae969c333f599dec412d4f5</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1StringFunction.html</anchorfile>
      <anchor>a313719b38907c49fa8eabde6ce091d35</anchor>
      <arglist>(MDArray &amp;in, MDArray &amp;out, const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefiner</name>
    <filename>classstk_1_1encore_1_1UniformRefiner.html</filename>
    <member kind="function">
      <type></type>
      <name>UniformRefiner</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a9eaaeef8c2896494d72f357103d86a4e</anchor>
      <arglist>(EncoreMesh &amp;eMesh, UniformRefinerPatternBase &amp;bp, FieldBase *proc_rank_field=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniformRefiner</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>aff62a7ede83a00fd7363f8ceb64de6fd</anchor>
      <arglist>(EncoreMesh &amp;eMesh, std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, FieldBase *proc_rank_field=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a898b5ad97f4c9a39f864584aa0b96aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRemoveOldElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a9808e3bf7d58375214b2605fccdd00f5</anchor>
      <arglist>(bool do_remove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRemoveOldElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a6ab8a2d6f94550ed22ac406de4922d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreSideSets</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a611254bfab5be8c023fce68ce73a14ab</anchor>
      <arglist>(bool ignore_sidesets)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIgnoreSideSets</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>adb8eace42004c328dd16c6ea23488c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BlockNamesType</type>
      <name>getBlockNames</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>abbdacb90381c1c1e84c27a456d11d0e3</anchor>
      <arglist>(std::string &amp;block_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned</type>
      <name>doForAllElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a79cc80013f300b1fa56f39b8d8442cff</anchor>
      <arglist>(EntityRank rank, NodeRegistry::ElementFunctionPrototype function, vector&lt; set&lt; EntityId &gt; &gt; &amp;elementColors, vector&lt; EntityRank &gt; &amp;needed_entity_ranks, bool only_count=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connectLocal</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a23f06a9a37402e41f099532307567738</anchor>
      <arglist>(unsigned irank, vector&lt; set&lt; EntityId &gt; &gt; &amp;elementColors, vector&lt; EntityRank &gt; &amp;needed_entity_ranks, vector&lt; Entity * &gt; &amp;new_elements_pool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createNewNeededNodes</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a14967fd67332d408113715937f26925a</anchor>
      <arglist>(const Entity &amp;element, vector&lt; EntityRank &gt; &amp;needed_entity_ranks, vector&lt; vector&lt; EntityId &gt; &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeOldElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a9bdaf80513c05e92d634a0c47fa2e40b</anchor>
      <arglist>(EntityRank rank)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addOldElementsToPart</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a104ea1e422fe94e1b212c6ebcc6e053b</anchor>
      <arglist>(EntityRank rank)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>renameNewParts</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>ab7200003df79aea997559c2ad1732026</anchor>
      <arglist>(EntityRank rank)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fixSurfaceAndEdgeSetNames</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a619bfd2b192dd896bd6e3c7376c927bb</anchor>
      <arglist>(EntityRank rank)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fixElementSides</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>ac6ed08328520a0f809ec931e4cfd04f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fixElementSides</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>aa3b853223889a9d3c8b9e4551fefcf89</anchor>
      <arglist>(EntityRank side_rank)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElementSideDB</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefiner.html</anchorfile>
      <anchor>a0ee4217ccb2992a9e4f0c5a262f6813f</anchor>
      <arglist>(SubDimCellToDataMap &amp;cell_2_data_map)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::SierraPort</name>
    <filename>structstk_1_1encore_1_1SierraPort.html</filename>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPatternBase</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPatternBase.html</filename>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPatternBase</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>ad1f0e1c6cfdbfe6af1b2a31d4aa912f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniformRefinerPatternBase</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a38ea38459f02e88424711cd662ca7cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>adeefe18bbdf7d1e3a75b609e7d07d740</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a76845e0514fd180ba83aa9397cbe45c4</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>aa3e8262a90293751ba634d99f3064603</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>aaa4c4781ae478214ae0fed4f8a21c3f8</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a86d98bdd69c7452b4d023cb7dc675c1b</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringStringMap</type>
      <name>fixSurfaceAndEdgeSetNamesMap</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a8e32e9dba2dba34c97bc760ecdc151f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFromTopoPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>acc1fab20012f28060bce025643c8e07d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getToTopoPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>af3c8122ddb448444cf331a9a29cac1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mesh::PartVector &amp;</type>
      <name>getToParts</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>ae0b1563ac01bb0cf722e5ba5cc64d127</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mesh::PartVector &amp;</type>
      <name>getFromParts</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a8ff28bcce23a2e26609519197f462c5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getAppendConvertString</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a06d7aa021a1a395e4938fa98c112a938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getAppendOriginalString</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>af8f98880cbf1ff19941baaeddd6a75a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getOldElementsPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>ad2bc98f60f27ac56f694f5e01ce8bea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>midPoint</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>ac447d4cf2930e6888d3a30e3b983855e</anchor>
      <arglist>(const double *p1, const double *p2, int spatialDim, double *x)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>getCentroid</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a1dd092312ccb96c55a26ef05c4de86fb</anchor>
      <arglist>(double *pts[], int len, int spatialDim, double *x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_fromTopoPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a69e1575440d9bf0d657301e9b4f326fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_toTopoPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>ac26976216b816b5f5798e6f4b9b3ea9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mesh::PartVector</type>
      <name>m_fromParts</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a5ef3fee6b111b52849a374f587e5abf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mesh::PartVector</type>
      <name>m_toParts</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>af86b0fc50bf7746b9b4ffb976c16a0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>m_appendConvertString</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a045031696ed07629c624c465a72d40c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>m_appendOriginalString</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a1bdec247d3d07410b651db8af8fc6f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>m_oldElementsPartName</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a75560db193a07ebfe552714c98d7516c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntityRank</type>
      <name>m_primaryEntityRank</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPatternBase.html</anchorfile>
      <anchor>a746acf827f1e176832ec8b17542e523a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::URP1</name>
    <filename>classstk_1_1encore_1_1URP1.html</filename>
    <templarg>FTopo</templarg>
    <templarg>TTopo</templarg>
    <member kind="typedef">
      <type>FTopo</type>
      <name>FromTopology</name>
      <anchorfile>classstk_1_1encore_1_1URP1.html</anchorfile>
      <anchor>a09714d7ca4194cee447d803c4139b28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TTopo</type>
      <name>ToTopology</name>
      <anchorfile>classstk_1_1encore_1_1URP1.html</anchorfile>
      <anchor>adfb14a5af408ed1bfa6dbc1e1d163b90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::URP</name>
    <filename>classstk_1_1encore_1_1URP.html</filename>
    <templarg>FromTopology</templarg>
    <templarg>ToTopology</templarg>
    <base>stk::encore::UniformRefinerPatternBase</base>
    <base>URP1&lt; FromTopology, ToTopology &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~URP</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a58ac1b22eb853492f68d1d77bef38776</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNeededParts</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>ac90012b47f8cf1324eeb2d8608fcefac</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names_ranks, bool sameTopology=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>change_entity_parts</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a75b488dfacce2a2a0ca8221117fd7593</anchor>
      <arglist>(EncoreMesh &amp;eMesh, Entity &amp;old_owning_elem, Entity &amp;newElement)</arglist>
    </member>
    <member kind="enumvalue">
      <name>NumNewElements_Enrich</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a1de77df17e00379e13b96699c61701f6a942319d1f802623f48f743b09a20e4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ToTopology</type>
      <name>TTopo</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>ab1890da876dd35bc341b82e605a337ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>URP</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a57b5c71b0ff4d2557d86b5bbf4265df2</anchor>
      <arglist>(EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>genericEnrich_createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a1be9a487d164eb8fd24331fb8354bcd6</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EncoreMesh &amp;</type>
      <name>m_eMesh</name>
      <anchorfile>classstk_1_1encore_1_1URP.html</anchorfile>
      <anchor>a2e70430302ee0254458e54a0ce84b220</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern.html</filename>
    <templarg>FromTopology</templarg>
    <templarg>ToTopology</templarg>
    <templarg>NumToCreate</templarg>
    <templarg>OptionalTag</templarg>
    <base>stk::encore::URP</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</filename>
    <base>URP&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 20 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>ae6ceb6078f6dc0073be836007cd247f2</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>a29ce04a38f3e530fcf99008002b9ba3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>a17bb0213f51cbebea02491890248a70e</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>ab478b8980e7ebb65c934d806d9ce9ac1</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>af17fe64d14fb2ce8a871c8e14f082da7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hd7bce2dfc2f29e7478091b5d6cc7a28b.html</anchorfile>
      <anchor>a55388f21bc4b5461579cd8ddc0ea88bf</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</filename>
    <base>URP&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 27 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>aff47a7e1d8267d81d510e03233ad0657</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>ac1b2e49e162733928c2830ea3612b602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>a1ca7e5403a44877366d67451260d7b98</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>ab6e692e3daaca37ba3a13cc476b16818</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>a508a24861150fa868a650f86650c6f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1H371737b5eee56cd4c5f6619e376cd26e.html</anchorfile>
      <anchor>a0c495cef6d42a42d77902149b9978310</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt;, 8, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</filename>
    <base>URP&lt; shards::Hexahedron&lt; 8 &gt;, shards::Hexahedron&lt; 8 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>a3ff190fb3331d0d77aec832c4bc8930c</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>a2553bdd94945a39d32afaed2866653d9</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>ae47b1deb147c106caddb7a8dcbd14f62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>a74ff8e74e86241f0a8d327723863716b</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>a6bf67a6da09436c24c34241e08843e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1Hc7dd2078b0f346c8400903f37ce45a5e.html</anchorfile>
      <anchor>a81553df7133846cffb20fe3a2e5c038f</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt;, 24 &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</filename>
    <base>URP&lt; shards::Hexahedron&lt; 8 &gt;, shards::Tetrahedron&lt; 4 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>a470c24dc89bb44469c69a6e8bfe24edf</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>af7cdadfd2e9753e29900330cb02b1b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>a8bb9a4f9a9a4073e12755d098a49cdbe</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>ad19f193aa39c8cebe8253d4c9af9374a</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>a5ae0fd024da587dc3d80aceb133d5b3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Hexahedron_3_018_01_4_00_01shards_1_1T5bd857517f1a65f6b8e496ab87acadbe.html</anchorfile>
      <anchor>a32465d21f5076beaa02df60b5e202a48</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt;, 2, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</filename>
    <base>URP&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 2 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</anchorfile>
      <anchor>a0780065b83acd3d659b91168a8292c4c</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</anchorfile>
      <anchor>a2afa2cf44ce355b81a77de6206f41620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</anchorfile>
      <anchor>ae6acde847b9d4288929c643850c0dc35</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</anchorfile>
      <anchor>aae3543e30b8a43dc8013ec078e73882f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_e2837d42998ab76d6d7e6cbdd98e48db.html</anchorfile>
      <anchor>a979df52b6c55028159e3baee4ba1428f</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 3 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</filename>
    <base>URP&lt; shards::Line&lt; 2 &gt;, shards::Line&lt; 3 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>a5a9ddb14a14842560d78cdc11531d877</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>ab16bcdd372c091dbcaf4c0f570ecf2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>a92ee8ec66bf8e6bdcf839e5343794745</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>a8261710d3e310c36baa424f6335ee320</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>a43311acb12ba2184e5c0e27f4f100ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Line_3_012_01_4_00_01shards_1_1Line_3_f7f590d9b666aaef79935596f1954a8d.html</anchorfile>
      <anchor>a26814f2a8a916631f6d820c9825b1720</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4 &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</anchorfile>
      <anchor>aa33a72f2aeb7cfd33bc176ec5c8ac3df</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</anchorfile>
      <anchor>a61c4b2ca2d958a2ac29576a04e949f68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</anchorfile>
      <anchor>af7d08fb1dc1b9c09da3746759aaada92</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</anchorfile>
      <anchor>a7c0021cce47c9ad7048539ca01b1e0a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1e514815c2672c9ce00fd9d62e35d1c10.html</anchorfile>
      <anchor>ad10572c471b8b24cc5dd099218486607</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt;, 4, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 4 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>a98c3a740b59237a51be8a79b41dc5124</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>a2376f940d13281c395a4ff89c2fa1353</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>a89f7427a8eef0f941dc33c1a6b7401bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>a6c8f4b34892f826e2764bb2d6dd7f396</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>aa65ee00d90c75480a1926b7d7964e915</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c9a5039f131ef84d14fdfadce7b9686d.html</anchorfile>
      <anchor>ac049654d58e2acbc55785c426ada2e99</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 8 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>ac18b70e716402759e4917bf10a3872fe</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>ab89fe374ea2eed52f05565a085a3b3ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>afe763248caa52e02c99b67e876f45849</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>a01c61b9c23e83f9f343709f699a38523</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>abdea77122253db38d62f5dbbe3238df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_14312a3ea52ae197bf9aed3b201b8ee69.html</anchorfile>
      <anchor>a634f5742464c341b8d1d109501fae713</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Quadrilateral&lt; 9 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>acd7571ee9f12384f087de807bbc34a87</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>af1daef6ad19057c12ec406a44607d5e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>a5761d967bd9c03a46b6d78543e7d9608</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>a5c8d597ad5ff83ca7c9dc18df650d63d</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>add87416e76ad6d40becb7ab5ccec9462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_181ee81616b34f1d31952daad7386c402.html</anchorfile>
      <anchor>a35050bd9a9916f4d40391211f7d137bf</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::Specialization</name>
    <filename>structstk_1_1encore_1_1Specialization.html</filename>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 4, Specialization &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>a5fbde4ea6b0b84c3882a2db17685006d</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>ab432906221062892b8a1c1ce0f733a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>ab5dae299c9d0bbd7e6046cad38513e17</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>a7c198cd54ef616bee31ea2148c21d80d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringStringMap</type>
      <name>fixSurfaceAndEdgeSetNamesMap</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>a3d3c1ee1f214cd6d8aac510cc44e76aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1f98ff5d68414e9da576c4b391e2040a4.html</anchorfile>
      <anchor>adac3dcbd6700ca8260a38bbc3c4b3ad3</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt;, 6 &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</filename>
    <base>URP&lt; shards::Quadrilateral&lt; 4 &gt;, shards::Triangle&lt; 3 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</anchorfile>
      <anchor>a8db0e60560dafe9fabca106e94ca2220</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</anchorfile>
      <anchor>ad594c8220e69a4dcc5f9b35b12550c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</anchorfile>
      <anchor>a04f187de8945269f6d9b558dbc45a71d</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</anchorfile>
      <anchor>a08f9c9f5db3e2bde874658a09ce9fed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Quadrilateral_3_014_01_4_00_01shards_1c6002aad544f5613616d1c41ba8cc6fc.html</anchorfile>
      <anchor>a30501d353e81ffe0d394e994646dc348</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</filename>
    <base>URP&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 10 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>a02327f772f4b914246aea610471f9e41</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>abfb497e04f24586be416e7b9f42299b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>af3db635b8a236612ea2ddcfeba41c54c</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>afe43a4b6a6f1e799c55f594989f79867</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>accbca4f53e0d7ea7895d487c4cb60d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1dd9e8aeaa3e6e23f797a95f3438d85c9.html</anchorfile>
      <anchor>a3ec528e86a56de9cedd7a7a842be72d5</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt;, 8, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</filename>
    <base>URP&lt; shards::Tetrahedron&lt; 4 &gt;, shards::Tetrahedron&lt; 4 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>a8319379cf63653bb20a2c4b214de1e8e</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>a2f9bea62bc61dc81f33c2a7d3ffdd7f0</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>ab4313a3d9d678c8a6bf91197cb1200fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>a96f24a8b111606908f7319db73876e2e</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>a26c0d6105864ff0b6484e73e921fd117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Tetrahedron_3_014_01_4_00_01shards_1_1c35adbbd91dbc29d2a13581d6a0827a0.html</anchorfile>
      <anchor>ab363c9dc7086981d19ecc3c8d24ad72c</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt;, 4, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</filename>
    <base>URP&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 3 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>abb85865adbb708c76efd247136996afd</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>aea71678fb37b44734f823fedb073e35e</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>a8822e14804739f74233dc62a6e68e2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>aa94d36d48634472b67556bb99da5ae7c</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>a969322721a6011044d6a89f6dbb54583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri581fa1b7c37eb74395f7deccb2a54d93.html</anchorfile>
      <anchor>a61737404020e0fc01cf4606036f15ce1</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::UniformRefinerPattern&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt;, 1, SierraPort &gt;</name>
    <filename>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</filename>
    <base>URP&lt; shards::Triangle&lt; 3 &gt;, shards::Triangle&lt; 6 &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>UniformRefinerPattern</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>a7846f531a9a60e764fd3c53f5573a35f</anchor>
      <arglist>(EncoreMesh &amp;eMesh, BlockNamesType block_names=BlockNamesType())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doBreak</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>ab1dfc9e9280e70e5988435e7ef38f7e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubPatterns</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>a5d15cd3a8188656299886cc1fa6ff613</anchor>
      <arglist>(std::vector&lt; UniformRefinerPatternBase * &gt; &amp;bp, EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNeededEntities</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>aeb1ff9cc4dbe8ad30ee1b350a5fcd74e</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; &amp;needed_entities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned</type>
      <name>getNumNewElemPerElem</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>acf549ec5de3b297e30eff3a1a193aa31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewElements</name>
      <anchorfile>classstk_1_1encore_1_1UniformRefinerPattern_3_01shards_1_1Triangle_3_013_01_4_00_01shards_1_1Tri9516347f3e9e24d1d5e393a7583ef2c3.html</anchorfile>
      <anchor>a48b2eff08bd94743931ce32f437696f0</anchor>
      <arglist>(EncoreMesh &amp;eMesh, NodeRegistry &amp;nodeRegistry, Entity &amp;element, vector&lt; vector&lt; EntityId &gt; &gt; new_sub_entity_nodes, vector&lt; Entity * &gt;::iterator &amp;element_pool, FieldBase *proc_rank_field=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Colorer</name>
    <filename>classstk_1_1encore_1_1Colorer.html</filename>
    <member kind="function">
      <type></type>
      <name>Colorer</name>
      <anchorfile>classstk_1_1encore_1_1Colorer.html</anchorfile>
      <anchor>ac3618d47a599abadd6da1a0333a460bc</anchor>
      <arglist>(std::vector&lt; EntityRank &gt; ranks=std::vector&lt; EntityRank &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color</name>
      <anchorfile>classstk_1_1encore_1_1Colorer.html</anchorfile>
      <anchor>afcff12fae0f4b7863239f6d81803a00d</anchor>
      <arglist>(EncoreMesh &amp;eMesh, FieldBase *element_color_field=0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::set&lt; EntityId &gt; &gt; &amp;</type>
      <name>getElementColors</name>
      <anchorfile>classstk_1_1encore_1_1Colorer.html</anchorfile>
      <anchor>a5aa096aebddf117df34b1ce5bece3898</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::NodeRegistry</name>
    <filename>classstk_1_1encore_1_1NodeRegistry.html</filename>
    <member kind="typedef">
      <type>bool(NodeRegistry::*</type>
      <name>ElementFunctionPrototype</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>aa27fbaa6468699e508541364d5af45fe</anchor>
      <arglist>)(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeRegistry</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>ae98a62580a30e4a2d2bd969637efca1b</anchor>
      <arglist>(EncoreMesh &amp;eMesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a3bc0cd62a26fa823961a39a8318181ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRegistration</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a1e63c048766559845392d833190952ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endRegistration</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>ab7623d621ffae22ecf90eeaad1bf9ac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginLocalMeshMods</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a356add3adea67e37e675302b3abd1d82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endLocalMeshMods</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a653d601f86833f75d1269f76725250c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginCheckForRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a9a0317ac9df7b2dac7166f170c757af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endCheckForRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a960ded533df9600aaae35b88fdf2586e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginGetFromRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a872361d210706d6ff8497cf3f3f884d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endGetFromRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a2dad51cdcc89f8301074241eacf1e6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerNeedNewNode</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a8637c1411dd6a422f43f942ef4e914d9</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkForRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a7aa62922018cc7bbfcdebcf448241822</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFromRemote</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a92469eed13f834e428831e19a82c5619</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>EntityId</type>
      <name>getNewNode</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>aec06e007acdd9f1c91928ad44de96d51</anchor>
      <arglist>(const Entity &amp;element, EntityRank &amp;needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCentroid</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a099b484573f6469be9289a2fa8df0498</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCentroid</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>acfc8d537d14062c4d55ed2ed787d5c8f</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd, FieldBase *field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolateFields</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a061257b7ee9bf6e2df79d90186b7ffc6</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToExistingParts</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a570f55554f4264583243b0699a36a79b</anchor>
      <arglist>(const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>SubDimCellData &amp;</type>
      <name>getNewNodeAndOwningElement</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a3d93efc22a0277ed0484b0a3c27ac310</anchor>
      <arglist>(SubDimCell_EntityId &amp;subDimEntity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doForAllSubEntities</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a896e814c6b3b00eb5d1944f87437ba56</anchor>
      <arglist>(ElementFunctionPrototype function, const Entity &amp;element, vector&lt; EntityRank &gt; &amp;needed_entity_ranks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubDimEntity</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>afa36cde475c69e4c452afb6766090ea8</anchor>
      <arglist>(SubDimCell_EntityId &amp;subDimEntity, const Entity &amp;element, EntityRank needed_entity_rank, unsigned iSubDimOrd)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>total_size</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>ad7546ebfe87047319392f26de395c129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>local_size</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a414fd8c46d9dfdeb583a2aa7a20452d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParallelRun</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a7329cdee469863d34d226d7072a85b44</anchor>
      <arglist>(unsigned size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDB</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>aa3c0001420c5827332d5de3364ef54da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allocateBuffers</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a94f546b6be1f6419f99b23eda78a63ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>communicate</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>af72052a0bdd9d49d72aa17fb4a47065e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>ac7823865e2d18db5ccc582df402552bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewNodesInParallel</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>a8eee05276bc924466b01f674625a724b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNodeAndConnect</name>
      <anchorfile>classstk_1_1encore_1_1NodeRegistry.html</anchorfile>
      <anchor>afef6c893f85dbed962e93d326c2e7647</anchor>
      <arglist>(CommDataType &amp;buffer_entry, unsigned from_proc, vector&lt; EntityProc &gt; &amp;nodes_to_ghost)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::SubDimCell</name>
    <filename>classstk_1_1encore_1_1SubDimCell.html</filename>
    <templarg></templarg>
    <base>std::set</base>
    <member kind="typedef">
      <type>std::set&lt; Ids &gt;</type>
      <name>SetIds</name>
      <anchorfile>classstk_1_1encore_1_1SubDimCell.html</anchorfile>
      <anchor>a31edb919f3a54ddea9f17c2656ded254</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubDimCell</name>
      <anchorfile>classstk_1_1encore_1_1SubDimCell.html</anchorfile>
      <anchor>af179ec4fae26ecffecc55c6a940f53eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubDimCell</name>
      <anchorfile>classstk_1_1encore_1_1SubDimCell.html</anchorfile>
      <anchor>a43b84fbbdec00aee3190787ef53b81e2</anchor>
      <arglist>(unsigned num_ids, Ids *ids)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Name</name>
    <filename>classstk_1_1encore_1_1Name.html</filename>
    <member kind="function">
      <type></type>
      <name>Name</name>
      <anchorfile>classstk_1_1encore_1_1Name.html</anchorfile>
      <anchor>aaacfb81d293428c1f4fa19da077c83cb</anchor>
      <arglist>(const std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classstk_1_1encore_1_1Name.html</anchorfile>
      <anchor>a145a1bccfaa13e50346baa902de9b7f9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager</name>
    <filename>classstk_1_1encore_1_1IntrepidManager.html</filename>
    <class kind="class">stk::encore::IntrepidManager::Bases</class>
    <class kind="class">stk::encore::IntrepidManager::CellWorkSet</class>
    <class kind="class">stk::encore::IntrepidManager::CubaturePoints</class>
    <class kind="class">stk::encore::IntrepidManager::CubatureWeights</class>
    <class kind="class">stk::encore::IntrepidManager::FieldValues</class>
    <class kind="class">stk::encore::IntrepidManager::Integral</class>
    <class kind="class">stk::encore::IntrepidManager::IntegralDOF</class>
    <class kind="class">stk::encore::IntrepidManager::IntegrandValues</class>
    <class kind="class">stk::encore::IntrepidManager::IntegrandValuesDOF</class>
    <class kind="class">stk::encore::IntrepidManager::Jacobian</class>
    <class kind="class">stk::encore::IntrepidManager::JacobianDet</class>
    <class kind="class">stk::encore::IntrepidManager::JacobianInverse</class>
    <class kind="class">stk::encore::IntrepidManager::PhysicalCoords</class>
    <class kind="class">stk::encore::IntrepidManager::temp</class>
    <class kind="class">stk::encore::IntrepidManager::WeightedMeasure</class>
    <member kind="typedef">
      <type>IntrepidManager</type>
      <name>IM</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>ab570cb3f36385593788dd0cf3d1246a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrepidManager</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a4862fbadf61563ff7601b8ebb6626485</anchor>
      <arglist>(Elements_Tag el, Cub_Points_Tag ct, NodesPerElem_Tag nc, Spatial_Dim_Tag st, DOFs_Tag dt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrepidManager</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a2810c45fca67021296d2c608701a4ea6</anchor>
      <arglist>(Elements_Tag el, CellTopology &amp;cellTopo, unsigned cubDegree=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupCubature</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>abaf7163fecb248b6fbe0e22c22a9301d</anchor>
      <arglist>(CellTopology &amp;cellTopo, unsigned cubDegree=2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>isInElement</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a209c7e501c48ad680662e45b9e59c562</anchor>
      <arglist>(MDArray &amp;input_phy_points, MDArray &amp;found_parametric_coordinates, unsigned &amp;found_it, const mesh::Entity &amp;element, const mesh::BulkData &amp;bulkData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>more_template_instantiations</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>afcc187bf21fa35bc6a97619512a9e8e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Elements_Tag</type>
      <name>m_Elements_Tag</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>ac646291b72c31c6cc17fb23406498efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cub_Points_Tag</type>
      <name>m_Cub_Points_Tag</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a4379c9537b1393f785deed6fad7fde26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodesPerElem_Tag</type>
      <name>m_NodesPerElem_Tag</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a9bb6f18e8d753fe5833244a87b517416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Spatial_Dim_Tag</type>
      <name>m_Spatial_Dim_Tag</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a9a2b4ab575ddd9f29a814bdf3afcdb98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DOFs_Tag</type>
      <name>m_DOFs_Tag</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a036e047158945475be65cdf513b21623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CellTopology *</type>
      <name>m_topo</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>afd6e541dbca99bcf5c1ae760630facab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; Cubature&lt; double, CubaturePoints, CubatureWeights &gt; &gt;</type>
      <name>m_cub</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager.html</anchorfile>
      <anchor>a2d05524bb17600f2393b71f72dc2666d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::Bases</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</filename>
    <base>MDArray</base>
    <member kind="typedef">
      <type>MDArray</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</anchorfile>
      <anchor>a722a8de70aadc3bc425e228a60a6a075</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bases</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</anchorfile>
      <anchor>adcb296e0ca1438b6756716d0a0f36328</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Bases</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</anchorfile>
      <anchor>a9217a843d3c1a143c27a07108c97d078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</anchorfile>
      <anchor>ad867fe886638db5aead7f3959f7ddca8</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Bases.html</anchorfile>
      <anchor>a4d07432ffa760ee6bae53e096de02bd1</anchor>
      <arglist>(const stk::mesh::Bucket &amp;bucket, const MDArray &amp;parametric_coordinates)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::CellWorkSet</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1CellWorkSet.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, NodesPerElem_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CellWorkSet.html</anchorfile>
      <anchor>ab0c358579a079a0c4ccb96871217ea1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellWorkSet</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CellWorkSet.html</anchorfile>
      <anchor>a2e61e37cefb15b84e806c0d00c92b690</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::CubaturePoints</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Cub_Points_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a5ce54342febf46f1f828f99a9954c30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Array&lt; double, NaturalOrder, Cub_Points_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseBaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a2007f838514c5531297a94b303199cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubaturePoints</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>af4ce9858712a73b373e321c7c40f8bc4</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTo</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a0f01c76aedb8296bb11ddbba9eadcdce</anchor>
      <arglist>(MDArray &amp;mda)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a29c33bf251ac9dfdd2344c8712f6b175</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a65180620b0ff09d37fbe3c5ce70d352c</anchor>
      <arglist>(int i1, int i2) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>a451d7117b1a88c656a22874cc1f1198f</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>ab651e705d1f7a09627c83b5159bbe8d9</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubaturePoints.html</anchorfile>
      <anchor>acc3f5d60aa83e1766892fd1ef05bd14a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::CubatureWeights</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Cub_Points_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>a86ef9ce3daa37915117ba5d487e660b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubatureWeights</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>abdb2f31f078d8a5336c4530a8b051c33</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>ad7661bea0cb9c51ea9b04bf7007ae900</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>a1c09cb53a01a3183e71785a4f073c2b6</anchor>
      <arglist>(int i1, int i2) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>ae382e9c404bceebf0f643b5b4f27834b</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>a9508b53c0a8868d23a281241579665f2</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>abb6ed5d0cb5d0e1c7f4c79c347169497</anchor>
      <arglist>(int i1, int i2, int i3, int i4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>aac6ed7d06a572192c70564fcc220e68a</anchor>
      <arglist>(int i1, int i2, int i3, int i4) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1CubatureWeights.html</anchorfile>
      <anchor>ad049e1c5ab0d4d13b143b8544997d486</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::FieldValues</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1FieldValues.html</filename>
    <base>MDArray</base>
    <member kind="typedef">
      <type>MDArray</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1FieldValues.html</anchorfile>
      <anchor>a5ae1751d5de43a6e7d9aac73f04f428c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldValues</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1FieldValues.html</anchorfile>
      <anchor>aac5b9ccc133271a708da1252a97d29a3</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1FieldValues.html</anchorfile>
      <anchor>a8acea55e54f7daf27fa87408e5d536c1</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, MDArray &amp;transformed_basis_values, FieldBase *field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1FieldValues.html</anchorfile>
      <anchor>af43c52bfe4ccd4453b5543c7017adda5</anchor>
      <arglist>(const stk::mesh::Entity &amp;element, MDArray &amp;transformed_basis_values, FieldBase *field, MDArray &amp;output_field_values)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::Integral</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>a899858189bc259c0eac1579b20a9eb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integral</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>a2391554cec09879b0044f09190872d50</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>a4ba8e08772c5e83804a403f9135c096e</anchor>
      <arglist>(IntegrandValues &amp;iv, WeightedMeasure &amp;wXdOmega, int comp_type)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>a21c38781110577c17e0bf38d576f84b3</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>ab180cc3a6207fe6bd48f0f490fa8352d</anchor>
      <arglist>(int i1, int i2) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>abe95f45a6a9526dcc3a64ca51396b6a0</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>aa288321c55d9ceca0e294d55a30e27e5</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>aa430998c08cd972e5561d786160239ed</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>ab57f6fd7ba134569ee68ca369ed7ee02</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Integral.html</anchorfile>
      <anchor>a39cdc6e1d07acffd6445275f5ee8560a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::IntegralDOF</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, DOFs_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a18d32b79970c843a527e4d5d169417b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegralDOF</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a58c1d8052ad04f4db4ff975edfb52c2f</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>aee04c0fedbc008cd894329d2fbe23d40</anchor>
      <arglist>(IntegrandValuesDOF &amp;iv, WeightedMeasure &amp;wXdOmega, int comp_type)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a63827617ce71ad4fb9a20e36ff706ae5</anchor>
      <arglist>(int i1)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>adb70d6929214b12f0bf91bdc8bc8a943</anchor>
      <arglist>(int i1) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a134d20ddc89116f086c2e1ae861c5355</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a4ad08386b8ab20d1b39c3bc4f5ccf889</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>ac7e03b17eb891c09071c03051d963a33</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>a94ce21e95ad323009b3deb7c97454a1d</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegralDOF.html</anchorfile>
      <anchor>ad09c7ac0dffcd4a1610afce5cadb41d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::IntegrandValues</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a419690f13ba5fa658f71a986c4f82459</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegrandValues</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a9c66fb1eb6abc7bc529bed18c08d3e4b</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>aad2b2a8d9802f4e30c32bbcda0dccd29</anchor>
      <arglist>(MDArray &amp;mda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a46ce4b68d794f26352859bcb005b05cf</anchor>
      <arglist>(IntrepidManager &amp;im, MDArray &amp;mda, int iDof)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a082f82dfc74fe4e4f44c2e9fad243c73</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>ac7fe0dfbcf28d97a50fde003364bf776</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>ae07f23a79253ae95c44631952f588fca</anchor>
      <arglist>(int i1, int i2, int i3, int i4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a13ed52b862345c8d80ed9a01dbba7fc8</anchor>
      <arglist>(int i1, int i2, int i3, int i4) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a65a504e7f1524e06c4c78f1617083a1e</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>aff27c9c0b1b7e132b94d073cbbed77bc</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValues.html</anchorfile>
      <anchor>a6664ef9e8f0302b1199c39218ac26e55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::IntegrandValuesDOF</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag, DOFs_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a976fc07b7ca98c66115fe69c61f78a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegrandValuesDOF</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a7cf073229a91311e5a4e3a566456f5f1</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a4bd57fc4ae651f1a0793293f57421216</anchor>
      <arglist>(MDArray &amp;mda)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a379c9ae72bef3cb47d94357ac533daf2</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a006a0224b1b9280b17e0f5c07d395d9b</anchor>
      <arglist>(int i1, int i2) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a3c92156bdc59a73cad0f8583cecf4fcf</anchor>
      <arglist>(int i1, int i2, int i3, int i4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>aacafc51c895e7996ef211d23db434451</anchor>
      <arglist>(int i1, int i2, int i3, int i4) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>acc1f703e3989082a3c4881bab4c87f3b</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>af35d77e230b5cfdfb092f33066b586af</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1IntegrandValuesDOF.html</anchorfile>
      <anchor>a05e65ab97a8143342804cc607df483cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::Jacobian</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag, Spatial_Dim_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>acba69d72060333ecc0f239c71ee9a05b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Jacobian</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>ad951df3e71f4ef0350ba1df9c47f1b8c</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>a3a22bd6a5944ae51ca12c353d64f3cf8</anchor>
      <arglist>(CubaturePoints &amp;xi, CellWorkSet &amp;c, CellTopology &amp;topo)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>a073b14e68aa205c6e480985df009ae7a</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>a5811a384af5590bb96088db20b228ddb</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1Jacobian.html</anchorfile>
      <anchor>aa689da6578afa3f05bccba319b63a791</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::JacobianDet</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>a65c7e8f785aea767f8c290d170f570e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JacobianDet</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>aa878251e17ae3f4a20f86d0137e091b2</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>a6ce533ea01f36ed9f966abee1fad5bb8</anchor>
      <arglist>(Jacobian &amp;jac)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>a8f128894e5551969fb4933db6366fe96</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>a18badb2118a19e0950e297d7ba043194</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianDet.html</anchorfile>
      <anchor>a7d6142ead924f3adf8bfd9b2da4646e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::JacobianInverse</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1JacobianInverse.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag, Spatial_Dim_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianInverse.html</anchorfile>
      <anchor>a1e43a5ecb85160d9521a48ea8b076bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JacobianInverse</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianInverse.html</anchorfile>
      <anchor>ab7d4ba7fb910717e24754ebc1f041b3a</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1JacobianInverse.html</anchorfile>
      <anchor>a494b57e0f8d749f003bd3836534d434c</anchor>
      <arglist>(Jacobian &amp;jac)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::PhysicalCoords</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>ac7d51c90627647d6dd60f39b9d1bd61b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Array&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag, Spatial_Dim_Tag &gt;</type>
      <name>BaseBaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>ab6a2974ada0d122c66038b71f2c86d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicalCoords</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>aa61eab3cb4f172d3c789a08aef4d2c55</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>af299146b19920cd9c6dfc36544368b6a</anchor>
      <arglist>(CellWorkSet &amp;c, CubaturePoints &amp;xi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTo</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>a6ff73ec3c43f431269997209ff16719c</anchor>
      <arglist>(MDArray &amp;mda)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>acd7f4ee44b4acd6ec93a36cb25a42818</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>a0aa6b3c82a494de16ec59a797be5b692</anchor>
      <arglist>(int i1, int i2) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>a9578752c6018fb922836f4156c517c40</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>a72f56e7913267a424a6c6ff1120f0cdd</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1PhysicalCoords.html</anchorfile>
      <anchor>a458faca284363c7a205b1fbf94a66c7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::temp</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</filename>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>a2e22cfdbe54d3abb1f4089c2ba9f817f</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>a8b72d3c03e14f86f9d8b30d388dbd0b7</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>a9521d017dfb824308a0b74748e16be28</anchor>
      <arglist>(int i1, int i2, int i3, int i4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>a1d10f41fe6f1286834f21a4f667a1c44</anchor>
      <arglist>(int i1, int i2, int i3, int i4) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>ae8cb4a1626c48c85af6bb3a60cc6ceed</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1temp.html</anchorfile>
      <anchor>ad48dfba11305200a9d58bc105e93dd06</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::IntrepidManager::WeightedMeasure</name>
    <filename>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</filename>
    <base>ArrayVector</base>
    <member kind="typedef">
      <type>ArrayVector&lt; double, NaturalOrder, Elements_Tag, Cub_Points_Tag &gt;</type>
      <name>BaseType</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>afc5d5615f4916aefda8ee3340d07dbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeightedMeasure</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a2f7240e0015eb5e446b0c7d6d8143c08</anchor>
      <arglist>(IM &amp;im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a752d9098e5f0ed074226cc4fd336d3ee</anchor>
      <arglist>(CubatureWeights &amp;w, JacobianDet &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a46d3a9068e2ac9748f7a381f57be45c2</anchor>
      <arglist>(int i1, int i2, int i3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a2d011d364b412dba93cbe2c18d3e7fac</anchor>
      <arglist>(int i1, int i2, int i3) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a5f0a37d392e3877357d772f5252233ab</anchor>
      <arglist>(int i1, int i2, int i3, int i4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a5f74320ea6488bff0ae39e6bd359e8b3</anchor>
      <arglist>(int i1, int i2, int i3, int i4) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a2ea614f2cdaafb8a7c35a3a7e6b5adc3</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>a967d76b8be21d86d23d4cb742afc52ac</anchor>
      <arglist>(int i1, int i2, int i3, int i4, int i5) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_dummy</name>
      <anchorfile>classstk_1_1encore_1_1IntrepidManager_1_1WeightedMeasure.html</anchorfile>
      <anchor>ac14df491f54a60feccc12902e4bf9f15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::HasFinalOp</name>
    <filename>classstk_1_1encore_1_1HasFinalOp.html</filename>
    <templarg>ValueType</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalOp</name>
      <anchorfile>classstk_1_1encore_1_1HasFinalOp.html</anchorfile>
      <anchor>a08c13fa63c47419d9069aa75b4b7535b</anchor>
      <arglist>(const ValueType &amp;vin, ValueType &amp;vout)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::LN_NormOp</name>
    <filename>classstk_1_1encore_1_1LN__NormOp.html</filename>
    <templarg>Power</templarg>
    <base>stk::encore::Function</base>
    <base>HasFinalOp&lt; std::vector&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>LN_NormOp</name>
      <anchorfile>classstk_1_1encore_1_1LN__NormOp.html</anchorfile>
      <anchor>a7d2f024e54bfbb639ee9b72ed9e43ec5</anchor>
      <arglist>(Function &amp;integrand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1LN__NormOp.html</anchorfile>
      <anchor>af37e5d6beaee39ffcedebbce8322b46c</anchor>
      <arglist>(MDArray &amp;integrand_values, MDArray &amp;output_values, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1LN__NormOp.html</anchorfile>
      <anchor>a301c9a8930ce7a3852e60e6e7a9ac4bd</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, const stk::mesh::Entity &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1LN__NormOp.html</anchorfile>
      <anchor>a256cdcb0d4215d5756e8911b1dbb9651</anchor>
      <arglist>(MDArray &amp;domain, MDArray &amp;codomain, const stk::mesh::Bucket &amp;element, const MDArray &amp;parametric_coords, double time_value_optional=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalOp</name>
      <anchorfile>classstk_1_1encore_1_1LN__NormOp.html</anchorfile>
      <anchor>a00ebceb0012f138a3f153fd7db8212b3</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;vin, std::vector&lt; double &gt; &amp;vout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Norm</name>
    <filename>classstk_1_1encore_1_1Norm.html</filename>
    <templarg>Power</templarg>
    <base>stk::encore::FunctionOperator</base>
    <member kind="function">
      <type></type>
      <name>Norm</name>
      <anchorfile>classstk_1_1encore_1_1Norm.html</anchorfile>
      <anchor>a6635b09e8258147fb50f31d4a2e83224</anchor>
      <arglist>(mesh::BulkData &amp;bulkData, mesh::Part *part=0, TurboOption turboOpt=TURBO_NONE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1Norm.html</anchorfile>
      <anchor>acd196dd6f0b019aaa71c3b84a9fa752e</anchor>
      <arglist>(Function &amp;integrand, Function &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::RunEnvironment</name>
    <filename>structstk_1_1encore_1_1RunEnvironment.html</filename>
    <member kind="function">
      <type></type>
      <name>RunEnvironment</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>ac5979cd2ec2ced5cf181bad649193829</anchor>
      <arglist>(int *argc, char ***argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RunEnvironment</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>ad907b51e62ddd5445134721f7e275c77</anchor>
      <arglist>(int *argc, char ***argv, stk::ParallelMachine comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>a0c5c2a3b0de68e486a5a67e0cdd51c6b</anchor>
      <arglist>(int *argc, char ***argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RunEnvironment</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>af6e307c269617c07fa6435cd0a6a742e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printHelp</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>a578bd0282a6f81b82e76a0e9eb201d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const stk::ParallelMachine</type>
      <name>m_comm</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>a3ab82c4941332c7689dc4fd96821ebf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>m_workingDirectory</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>a4d99f6b5a8c067e398be554c2c12086b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_need_to_finalize</name>
      <anchorfile>structstk_1_1encore_1_1RunEnvironment.html</anchorfile>
      <anchor>a96a84d3caeb3aafb6329aab1ff182e73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::GeometryVerifier</name>
    <filename>classstk_1_1encore_1_1GeometryVerifier.html</filename>
    <member kind="function">
      <type></type>
      <name>GeometryVerifier</name>
      <anchorfile>classstk_1_1encore_1_1GeometryVerifier.html</anchorfile>
      <anchor>a8fba69b05f55d5d23d23038aea485402</anchor>
      <arglist>(bool dump=false, double badJac=1.e-10)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGeometryBad</name>
      <anchorfile>classstk_1_1encore_1_1GeometryVerifier.html</anchorfile>
      <anchor>aedc3373e2dc66bf7651f671b094536d6</anchor>
      <arglist>(stk::mesh::BulkData &amp;bulk, bool printTable=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::TopologyVerifier</name>
    <filename>classstk_1_1encore_1_1TopologyVerifier.html</filename>
    <member kind="function">
      <type></type>
      <name>TopologyVerifier</name>
      <anchorfile>classstk_1_1encore_1_1TopologyVerifier.html</anchorfile>
      <anchor>a891a17afe8d064f5786c8a57cd756a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTopologyBad</name>
      <anchorfile>classstk_1_1encore_1_1TopologyVerifier.html</anchorfile>
      <anchor>afb8ea68d6fec23c2a4eca47916d25228</anchor>
      <arglist>(mesh::Entity &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTopologyBad</name>
      <anchorfile>classstk_1_1encore_1_1TopologyVerifier.html</anchorfile>
      <anchor>a912c35f3d9aea34d18d16ee29f236e1a</anchor>
      <arglist>(mesh::BulkData &amp;mesh_bulk_data)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::lstr</name>
    <filename>structstk_1_1encore_1_1lstr.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structstk_1_1encore_1_1lstr.html</anchorfile>
      <anchor>a9fb591a956bb9d5a746b60764e259690</anchor>
      <arglist>(const char *a, const char *b) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::ShardsInterfaceTable</name>
    <filename>classstk_1_1encore_1_1ShardsInterfaceTable.html</filename>
    <member kind="function">
      <type>int</type>
      <name>lookupShardsId</name>
      <anchorfile>classstk_1_1encore_1_1ShardsInterfaceTable.html</anchorfile>
      <anchor>a2dc095f3c24cdd2d58de05de2c2df64e</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ShardsInterfaceTable</type>
      <name>s_singleton</name>
      <anchorfile>classstk_1_1encore_1_1ShardsInterfaceTable.html</anchorfile>
      <anchor>adaaa39bbccca8feae86f7f4ab4a1f607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static elemInfoType *</type>
      <name>s_elemInfo</name>
      <anchorfile>classstk_1_1encore_1_1ShardsInterfaceTable.html</anchorfile>
      <anchor>a1e6851cadf346d7db160839faa5b4776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Util</name>
    <filename>classstk_1_1encore_1_1Util.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pause</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a9ecbb856da0e39cabd0d03af624558bd</anchor>
      <arglist>(bool doPause=true, const char *msg=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDoPause</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a5caef8accd16a7ff8e6049eacc68a064</anchor>
      <arglist>(bool enableOrDisablePause)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFlag</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>ad874da614ddeade974c6cda71a8e4354</anchor>
      <arglist>(int which_flag, bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getFlag</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a92a10023c6e5bff4e207c454cc0bf18d</anchor>
      <arglist>(int which_flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRank</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>ac3edb253c7777aa028252951ca6256c0</anchor>
      <arglist>(int rank)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getRank</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>ac4ddce6ceb5b6df3f5e6ad803f0dd1ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>debug_stop</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a42c1124087ca51bb6b99f52e65b23372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>replace</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a7bc656272b82ce613c18b4e1c4e193d9</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;find_what, const std::string &amp;replace_with)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a6c0055b56ea154b060e55a917c7dc8d0</anchor>
      <arglist>(std::string str, std::string separators, bool remove_spaces=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>join</name>
      <anchorfile>classstk_1_1encore_1_1Util.html</anchorfile>
      <anchor>a7c32a2717436f5d8192db059698d62e1</anchor>
      <arglist>(std::vector&lt; std::string &gt; tokens, std::string separator, bool add_spaces=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::GenericVectorOfObjectPointers</name>
    <filename>classstk_1_1encore_1_1GenericVectorOfObjectPointers.html</filename>
    <templarg></templarg>
    <base>std::vector</base>
    <member kind="function">
      <type></type>
      <name>GenericVectorOfObjectPointers</name>
      <anchorfile>classstk_1_1encore_1_1GenericVectorOfObjectPointers.html</anchorfile>
      <anchor>af37f5a85d9bde798caf79c5e72e88c86</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericVectorOfObjectPointers</name>
      <anchorfile>classstk_1_1encore_1_1GenericVectorOfObjectPointers.html</anchorfile>
      <anchor>a4a60c9db0456383286b2e9488efb1c47</anchor>
      <arglist>(VecType *vt1=0, VecType *vt2=0, VecType *vt3=0, VecType *vt4=0, VecType *vt5=0, VecType *vt6=0, VecType *vt7=0, VecType *vt8=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Verifier</name>
    <filename>classstk_1_1encore_1_1Verifier.html</filename>
    <member kind="function">
      <type></type>
      <name>Verifier</name>
      <anchorfile>classstk_1_1encore_1_1Verifier.html</anchorfile>
      <anchor>a8069f7fac366f3f04e2aeae75266d02f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verify</name>
      <anchorfile>classstk_1_1encore_1_1Verifier.html</anchorfile>
      <anchor>ac044f29b4d5b8c108c93899b230e4c77</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::MeshVerifier</name>
    <filename>classstk_1_1encore_1_1MeshVerifier.html</filename>
    <base>stk::encore::Verifier</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::CodeVerifier</name>
    <filename>classstk_1_1encore_1_1CodeVerifier.html</filename>
    <base>stk::encore::Verifier</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::MeshGeometryVerifier</name>
    <filename>classstk_1_1encore_1_1MeshGeometryVerifier.html</filename>
    <base>stk::encore::MeshVerifier</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::MeshTopologyVerifier</name>
    <filename>classstk_1_1encore_1_1MeshTopologyVerifier.html</filename>
    <base>stk::encore::MeshVerifier</base>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::Elem</name>
    <filename>namespacestk_1_1encore_1_1Elem.html</filename>
    <namespace>stk::encore::Elem::StdMeshObjTopologies</namespace>
    <class kind="class">stk::encore::Elem::MeshObjTopology</class>
    <class kind="class">stk::encore::Elem::RefinementKey</class>
    <class kind="class">stk::encore::Elem::RefinementTopology</class>
    <class kind="class">stk::encore::Elem::MeshObjRefinementTopology</class>
    <member kind="typedef">
      <type>shards::CellTopology</type>
      <name>CellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ab5c9a058c04bb3d5cd3e0f166e707402</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TopologyId</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a3f2dd4455b965feb34ee39d4eac37655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE_0</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747af05654694913dd3a1132ca2017db4aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a6651cc6336eb7273cf651371d0fff33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a0b17bc83f80f458fa28f662a9cf73676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a60fb96009ee448077d972dccc00f8702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a42a04cd8324940acde3a506806dcfa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_TRI_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2be9fd02fbd16e572d90279e8daa2572</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a1f15a237aeef81cd456a119794fa69a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a0b4459f109a6b514a66658f39648f0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a9f2a8ec256228c7d710fae9e64dc34a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_QUAD_9</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a25368b37047057e91c6c0ec29758184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTICLE_1</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a365e695aadf9bb94dbccca875ab9dddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROD_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aea6cc045ee7e44eb57781d9b0e6705f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROD_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a59c7cb2a686086e046563e11ae6bd328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_LINE_2</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a289f740976e39f12ba7e6d747393f437</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_LINE_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adbbf75e1fdc4b2697780929d4ced9ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_TRI_3</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a80b535a5f11739edfeed02ef4ba5ad83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_TRI_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a84b61749fa22f57f73954de1875e821a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747afa1d5d1298ca901cd5bda67a8d856b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_9</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adcb3307a15424bcc891e575682cfdd22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ac7edb0c8435d08b29e4569aa218e68f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_20</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a84842184330a5dc5647098448e80ef88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_HEX_27</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2b85dd58af4f4d8017c4b1f90ebc3d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_4</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ad124d0f23ef80a9987ad61ecae4c1ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a360cdeb7cf4f68f1de5e40f8440ac38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_TET_10</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a701838d9d8ebb4ab728082071f4531d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2e31d89f3b89fb7aa967a8df2f3d2419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_15</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a1bba65338ab36eaf46b08e1a9ca362aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747adde1d1a186cdb9535efc1e98d8662653</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_13</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aabccd0f146139b91405edc91d82e25fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHELL_QUAD_8</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a2c3d4c5129bc39240909b08b0aedb59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_WEDGE_18</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a30c2dd87cb199e6543a461c155b5dcee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLID_PYRAMID_14</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747a98a1d7fe827bcaba77dcb7847e4a73b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_PENT_5</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747aec0d80207611b14d235292fa3d514c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_HEX_6</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae2e748e56d9826d9b4e64f4b512a9747ac0deed0285d35e52e326d7e2d00f5ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a81dfe05c2880c03e405746b3aec558d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TopologyId</type>
      <name>getCellTopologyId</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a096fc7fdee00255e6de6bc4cd9ed0ec0</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getBasicCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a0cf15e938c9f7b28268601451330867a</anchor>
      <arglist>(TopologyId id)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>getBasicCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a2163460ba4173963b59d79337d188db8</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>nodeCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a927811aef229d0d881f23f38a2c64db1</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>edgeCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a7636f1b1c1d56375ae8f3eac8e56f73b</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>faceCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ae9cf8e129f70af3c8c47915bf864cb0a</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>sideCellTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ac3e3fe6e85cefebcb57c5ffcfa216322</anchor>
      <arglist>(const CellTopology &amp;cell_topology, UInt ordinal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ab7a4b627fc18c0ba585dc61cf0625972</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned spatial_dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolidElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a297bda140f400fbae10165f8d186055b</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned spatial_dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShellElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a145ace072614f70d78cda45ed0144f54</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRodElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>af8fddd9fd0e404a36143f31e18c0048f</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParticleElement</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ad0b01fa8a956cb14da2fbee28ce4cdcf</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getEdgeNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a060f2b30c61bd76c04831f6968baffda</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned edge, unsigned node_of_edge)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaceNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>acb28b106b2a9a3303bcce6a7ad2f39e2</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face, unsigned node_of_face)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSideNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ad2e20b88d57ae85f7ec341457dc22727</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned side, unsigned node_of_side)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaceEdge</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a987279586d5944942cf3a096038b574c</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face, unsigned edge_of_face)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfEdge</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>abfbb351d66874e8b2a6fde22bfeb9131</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned edge)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfFace</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>ac2d371ddc93840296005aa4eed95a342</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned face)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned *</type>
      <name>getNodesOfSide</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a2a03cdcc2bd19a541d05094ea9c8c049</anchor>
      <arglist>(const CellTopology &amp;cell_topology, unsigned side)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCellTopologySubsetOf</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>adfedce86224d8cb0c0ea5e94fc401141</anchor>
      <arglist>(const CellTopology &amp;cell_topology, const CellTopology &amp;richer)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getParametricDimension</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a42dcb4f761fd2912f024f54b22c1fc42</anchor>
      <arglist>(const CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findReversePermutation</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a0feeadb0edc5d45714366a15356d06df</anchor>
      <arglist>(const CellTopologyData &amp;top, int permutation_ord)</arglist>
    </member>
    <member kind="function">
      <type>const RefinementTopology *</type>
      <name>getRefinementTopology</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a12544e19222e7e1b9bd94efba3051b7f</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementEdgeNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a446d86f0a1de5ef12d8b223eb6edc9b4</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt edge)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementFaceNode</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>add71eb91e9320e0fb890bd0d599de134</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt face)</arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>getRefinementEdgePermutation</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem.html</anchorfile>
      <anchor>a863cf9b3b7dd45697d5a49c5c904f6d4</anchor>
      <arglist>(const Elem::CellTopology &amp;cell_topology, UInt permutation_ordinal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::MeshObjTopology</name>
    <filename>classstk_1_1encore_1_1Elem_1_1MeshObjTopology.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshObjTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjTopology.html</anchorfile>
      <anchor>a88d586ede67897db8403bd1397f8284f</anchor>
      <arglist>(const CellTopologyData *cell_topology_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MeshObjTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjTopology.html</anchorfile>
      <anchor>a7e753675fd7beca4689fe9d3a0034a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Elem::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjTopology.html</anchorfile>
      <anchor>ae735d3359337c188fb040e32012a5f81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Elem::CellTopology</type>
      <name>m_cellTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjTopology.html</anchorfile>
      <anchor>a7071afdd8e5759c63ac899c289e9c9dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::RefinementKey</name>
    <filename>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</filename>
    <member kind="function">
      <type></type>
      <name>RefinementKey</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>ac279076b4298b5052daf7d2aab9c2a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefinementKey</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>ad97238eb05a7d5be046ee4729fbd2547</anchor>
      <arglist>(UInt valueArg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RefinementKey</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>a96fe4f2310eef3c1b787f102aad90627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UInt</type>
      <name>value</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>a64631a9458b2bbf1a25aac0d76b96f44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign_value</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>a4fb99433170cd250d32793115b572c1b</anchor>
      <arglist>(UInt valueArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign_value</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>af100d2015b732730ccd91a5b1415f124</anchor>
      <arglist>(std::vector&lt; UInt &gt; &amp;edge_order)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UInt &gt;</type>
      <name>ordered_cut_edges</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>a7bf9c5a1d1872e4f7d4220c90f6f6611</anchor>
      <arglist>(UInt numEdges) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>full_refinement</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementKey.html</anchorfile>
      <anchor>a508335981bbae3ad2cc8b43b1329bcbc</anchor>
      <arglist>(UInt numEdges)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::RefinementTopology</name>
    <filename>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</filename>
    <member kind="function">
      <type></type>
      <name>RefinementTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a163802b958db3a44b673146fa8d41e71</anchor>
      <arglist>(MeshObjTopology *mesh_obj_topology, UInt num_child, const MeshObjTopology *const *child_topology, UInt num_child_nodes, const UInt *const *child_nodes, const UInt num_edges, const UInt *const *edge_node, const UInt num_faces, const UInt *const *face_node, UInt num_orientations, const UInt *const *perm_node, const UInt *const *perm_edge, bool homogeneous_child)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefinementTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a402be87deba6ecd76386512698cdf7b5</anchor>
      <arglist>(const CellTopology &amp;mesh_obj_topology, UInt num_child, const MeshObjTopology *const *child_topology, UInt num_child_nodes, const UInt *const *child_nodes, const UInt num_edges, const UInt *const *edge_node, const UInt num_faces, const UInt *const *face_node, UInt num_orientations, const UInt *const *perm_node, const UInt *const *perm_edge, bool homogeneous_child)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RefinementTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a41dbc87428a4087a2fc0e45e4cf207c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UInt</type>
      <name>num_child</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>aa6fbb59fd84562ca2d9dbd2808ec0268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>homogeneous_child</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a79d38aaf897f28f73b24185d850c6375</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CellTopology *</type>
      <name>child_cell_topology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a0524c4fa2cde42f919e3cfd94d91b211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>child_cell_topology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>aaa811db0b92eba1223eabccc87333c29</anchor>
      <arglist>(UInt ordinal) const </arglist>
    </member>
    <member kind="function">
      <type>UInt</type>
      <name>num_child_nodes</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a8c6f679e500f055da57ae3d692d17748</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *const *</type>
      <name>child_nodes</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>aaeab4727e408ea41d48be668387d3ac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>child_node</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a8aefd741ecf75177c172f656a99e98a4</anchor>
      <arglist>(UInt child) const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>edge_node</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>aea5ad0ab80d299678a88db025f478044</anchor>
      <arglist>(UInt edge) const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>face_node</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a054f8e17897ee92ee6af49461bbba120</anchor>
      <arglist>(UInt face) const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>node_permutation</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a50fb05ae510956d3182a1d5e625f6ff7</anchor>
      <arglist>(UInt orientation) const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>edge_permutation</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a839a5bb1a1a62eb4259f7a825d6906c1</anchor>
      <arglist>(UInt orientation) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_refinement_topology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>ac8d126fde2980f65e6b9e44cb5fa8a46</anchor>
      <arglist>(RefinementKey &amp;object_key, MeshObjRefinementTopology &amp;refTop) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refine_rivara_tri</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a9054c624580202b4ac3d843ab4afecb1</anchor>
      <arglist>(RefinementKey &amp;, MeshObjRefinementTopology &amp;refTop) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refine_rivara_tet</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a68c0de7b48bcc5fa12ed82375bdab2e8</anchor>
      <arglist>(RefinementKey &amp;, MeshObjRefinementTopology &amp;refTop) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; UInt, UInt &gt;</type>
      <name>child_face</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>a6deb1844e40e6fbaf6ea4655cf2be7e7</anchor>
      <arglist>(const UInt face_ordinal, const UInt face_child_ordinal) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; UInt, UInt &gt;</type>
      <name>child_edge</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1RefinementTopology.html</anchorfile>
      <anchor>ac3be38740473f4291aa7064b23067919</anchor>
      <arglist>(const UInt edge_ordinal, const UInt edge_child_ordinal) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::MeshObjRefinementTopology</name>
    <filename>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshObjRefinementTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>aec99bc67d35d90e83f3f0ecea46f808c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MeshObjRefinementTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a9ffee47bf46815a97c8866f91d1a2cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UInt</type>
      <name>num_child</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a49d4ec88a260a56326ede56ef6f110bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UInt</type>
      <name>num_child_nodes</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a9001ad8a7cc5504526e088ce2ad570c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CellTopology</type>
      <name>child_cell_topology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a8e2765f1b6719f1ea0de8b6644f15ac4</anchor>
      <arglist>(UInt child) const </arglist>
    </member>
    <member kind="function">
      <type>const UInt *</type>
      <name>child_node</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>aff7cbb4894525642c39f08a5239634c6</anchor>
      <arglist>(UInt child) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>homogeneous_refinement</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a651b6430954fc3065b16aadba4b5393e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>full_refinement</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>ad8dd9a617e7eaa99512abee025c72e46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; UInt, UInt &gt;</type>
      <name>child_face</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>afb36b86ccbc912e82386326f05e444d8</anchor>
      <arglist>(const UInt face_ordinal, const UInt face_child_ordinal, const Elem::CellTopology &amp;objTop, const RefinementKey &amp;objDesiredKey) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; UInt, UInt &gt;</type>
      <name>child_edge</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a1e72b7d647be7d021338ba83a9c74c12</anchor>
      <arglist>(const UInt edge_ordinal, const UInt edge_child_ordinal, const Elem::CellTopology &amp;objTop) const </arglist>
    </member>
    <member kind="variable">
      <type>UInt</type>
      <name>m_numChild</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>abbe15e1c35cadc828cb6dec7d8208f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UInt</type>
      <name>m_numChildNodes</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a60c2bc43c5829dd23fb6c3d277d482ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CellTopology *</type>
      <name>m_childCellTopology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>ab2cf9f1e037a6117083fac4d9d1dbb72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UInt **</type>
      <name>m_childNode</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a8050fb819169d6942e83653562b6ae68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_homogeneous</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>aa390cd1f710cd17fb0e764df4e95b890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_fullRefinement</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1MeshObjRefinementTopology.html</anchorfile>
      <anchor>a74b67e27cfb068a9f1c446534c8053a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::Elem::StdMeshObjTopologies</name>
    <filename>namespacestk_1_1encore_1_1Elem_1_1StdMeshObjTopologies.html</filename>
    <class kind="struct">stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtraEntry</class>
    <class kind="class">stk::encore::Elem::StdMeshObjTopologies::RefTopoX1</class>
    <class kind="class">stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtra</class>
    <member kind="typedef">
      <type>RefinementTopologyExtraEntry</type>
      <name>RefTopoX</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem_1_1StdMeshObjTopologies.html</anchorfile>
      <anchor>a61fe963d41865d5755c098df5a8d1b36</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bootstrap</name>
      <anchorfile>namespacestk_1_1encore_1_1Elem_1_1StdMeshObjTopologies.html</anchorfile>
      <anchor>aa9a95cdc95118514e4673038c4fb0621</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtraEntry</name>
    <filename>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</filename>
    <member kind="variable">
      <type>unsigned</type>
      <name>ordinal_of_node</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>a08b677c646d68ee49f8e66e5eed6a8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>rank_of_subcell</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>abee92b1a8866ec4187526079f0576aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>ordinal_of_subcell</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>a5510b26591574a12ab797917907b3b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>ordinal_of_node_on_subcell</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>a843f38812d9bf1764db5337124ced217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>num_nodes_on_subcell</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>ad3b2002daab7d4e19c793a987e3ff38b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>parametric_coordinates</name>
      <anchorfile>structstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtraEntry.html</anchorfile>
      <anchor>ac933030a738c52a86d0dbbb239bb52a4</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::StdMeshObjTopologies::RefTopoX1</name>
    <filename>classstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefTopoX1.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>RefinementTopologyExtraEntry</type>
      <name>RefTopoX2</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefTopoX1.html</anchorfile>
      <anchor>ad85d6ab810ff1a022c68f044168115c3</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::Elem::StdMeshObjTopologies::RefinementTopologyExtra</name>
    <filename>classstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtra.html</filename>
    <templarg>Topo</templarg>
    <member kind="variable" static="yes">
      <type>static RefTopoX</type>
      <name>refinement_topology</name>
      <anchorfile>classstk_1_1encore_1_1Elem_1_1StdMeshObjTopologies_1_1RefinementTopologyExtra.html</anchorfile>
      <anchor>a8cb430536f74dc37980c81ce6a5f8dfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::interface_table</name>
    <filename>namespacestk_1_1encore_1_1interface__table.html</filename>
    <class kind="struct">stk::encore::interface_table::elemInfoType</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>stk_set_cell_topology_fptr</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>a84a879391fa63ecdb71531e71b0ba946</anchor>
      <arglist>)(stk::mesh::Part &amp;)</arglist>
    </member>
    <member kind="enumeration">
      <name>ElemTypes</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Node</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae299e11305f5f654147f0c04271bee9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Particle</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae0c5a82d7dc6d9a6a2f882d928113ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Line_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a50645fd38f36d99d6f5a4eb1b5f444be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellLine_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a41f52c5f0def1c0243a37cd102adb981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellLine_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a06246479549dffd5d95260f0a63a286e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Beam_2</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aed690d26d1d139d6e731fd596cfa2a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Beam_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a11efc0d2f4c6c97fd64f10150627ee99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Triangle_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae1e7ebf50c6415fed21dfa20ca97d8d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Triangle_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a216d501a42139f6b45ecde9afaf32f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellTriangle_3</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881adb576f75fc5eccb1a70ef387533689c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellTriangle_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a9a2811f447d62ac4ec307e5180273eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ae0c88e0c75751c2fe38b57a207204943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a78bedd0f14bb76252d0f98c525b2a727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Quadrilateral_9</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aa460f55a345e535658c543e8c00ae67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a71cce8cb39957b31cf3525d079179f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a4209ab813fb6ea14420525bf068b9991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_ShellQuadrilateral_9</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a0354a8a201edab5d972d51bcb8271ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pentagon_5</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a64ae01956423b1057a3943712acf2fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexagon_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a6e6fcdcc4ecdd2f247e653f846e5f5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Tetrahedron_4</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881ada5afde665e1d20ba561ea5e3a852148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Tetrahedron_10</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aa02b3f2d2b05b6ab824291e1ae46000a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_5</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a7b52026e909070a26a5e8ff2ed36c382</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_13</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a79f9f496c9b71dee4028b3d18f7f336e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Pyramid_14</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a7d920c93089f39b9ff64bc95eafa7e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_6</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a3e76581f6677f08b4173a23ed6f17e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_15</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881aefd61f23c99ae2e65bece8b0097f92bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Wedge_18</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a46926ff33f9eb01a9f9e5f17db821ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_8</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a8606c09d95fb8f6ae87c7ce3c28534eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_20</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a88ddb143323004d8e481f71e5e987a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shards_Hexahedron_27</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a855cd90964b8fa4f76353ffffca17197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ELEM_TYPES</name>
      <anchorfile>namespacestk_1_1encore_1_1interface__table.html</anchorfile>
      <anchor>aa7b7826c38b185706be72d0b5840f881a8f1406680ba8251a6be86371e214be40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stk::encore::interface_table::elemInfoType</name>
    <filename>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</filename>
    <member kind="variable">
      <type>ElemTypes</type>
      <name>elemEnumType</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>a8122fe9fb335c57c1feb072140afcd3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CellTopologyData *</type>
      <name>cellTopoData</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>aafb8f581f65e417a6e1de3f1648e21e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>a4f883fba9ea478162300400ea97d3476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>vertex_count</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>aa5280b249d12d3703707d405b7b856e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>node_count</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>aa7293d84972eb0272070d099aeb64c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sweptElemType</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>ac70956987f9e993a88a4b9e801f73a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk_set_cell_topology_fptr</type>
      <name>setCellTopoFptr</name>
      <anchorfile>structstk_1_1encore_1_1interface__table_1_1elemInfoType.html</anchorfile>
      <anchor>abd72ed83cda30a38f38b0e76fcd56ca6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::io_util</name>
    <filename>namespacestk_1_1encore_1_1io__util.html</filename>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodeblocks_meta</name>
      <anchorfile>namespacestk_1_1encore_1_1io__util.html</anchorfile>
      <anchor>aa71828a2be25a08a26f508f85ff71d77</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta, int &amp;spatial_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gaa7577a053f5665c7475941ae3c8f4176</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gae14054bc090314029a28bbd89373d337</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga0f537326216a705795528e00a73e638f</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_meta</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga4d20ab136871d5d7e9c1ec797eddbe1a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::MetaData &amp;meta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodeblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga652d7b74de1b3a64571453f9aa3d7b73</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_elementblocks_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga011b943e4e92f9f10d554671dd46d536</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_nodesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga222c9f76d830b85321fc97caf519ce87</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_facesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga2d39815dfc6f38e2da28de7c9940f465</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_edgesets_bulk</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga24144c1ff3bcf528e5180b235f6c6c14</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_read_input_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>gafee9db305f97a5198a35a2d6968bd17e</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_output_request</name>
      <anchorfile>group__stk__io__module.html</anchorfile>
      <anchor>ga27708937428399675529d263e15ea53a</anchor>
      <arglist>(Ioss::Region &amp;region, stk::mesh::BulkData &amp;bulk, int step)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::unit_tests</name>
    <filename>namespacestk_1_1encore_1_1unit__tests.html</filename>
    <class kind="class">stk::encore::unit_tests::QuadFixture</class>
    <member kind="typedef">
      <type>RunEnvironment</type>
      <name>Fixture</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a5943e238502960906b004392920bf9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_NORM</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea6e7d89ca42d17993473acd638a1ec6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_GEOMETRY_VERIFIER</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea7b97dac287ec19f48550a053a3305b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_MESH_COLORER</name>
      <anchorfile>namespacestk_1_1encore_1_1unit__tests.html</anchorfile>
      <anchor>a3df8cc028ec3ec2adf98f0cba761a60ea28873fec2c2f89ce6f818970decc7a04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::unit_tests::QuadFixture</name>
    <filename>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>NodesPerElem</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a839b62916a74f628b611a80b51415b5da3672057c783f4c24bb6c6e5a49155198</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Topology</type>
      <name>QuadOrTriTopo</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a8d7ce68df0e10e4eed8f93e4c4804f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Field&lt; Scalar, Cartesian &gt;</type>
      <name>CoordFieldType</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>ae2e639e90aa27c851f33511c35896aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Field&lt; Scalar *, ElementNode &gt;</type>
      <name>CoordGatherFieldType</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a916bdf0640d5b4beee111926da97a319</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QuadFixture</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a082ad35c406b5f468cfc2d5c755d53ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuadFixture</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a1f6d8e6ae1ea4376f13493b480f78de4</anchor>
      <arglist>(stk::ParallelMachine pm, unsigned nx, unsigned ny, bool generate_sidesets_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate_mesh</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a0293dc4fb3df75e65c0adbf76f6d3141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate_mesh</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a473fef34fba7d298dbb1a210116d6483</anchor>
      <arglist>(std::vector&lt; EntityId &gt; &amp;element_ids_on_this_processor)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>node_id</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>acde7555448c00e6678488ce891acf7f0</anchor>
      <arglist>(unsigned ix, unsigned iy) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>elem_id</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a42f7163f2946353b3a19f92226d1564a</anchor>
      <arglist>(unsigned ix, unsigned iy) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Entity *</type>
      <name>node</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a8a607c80fe04ef8eb01dbb224a83be65</anchor>
      <arglist>(unsigned ix, unsigned iy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>node_ix_iy</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a38fea6ef40338a81967fd85503f813e1</anchor>
      <arglist>(EntityId entity_id, unsigned &amp;ix, unsigned &amp;iy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elem_ix_iy</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>aca039b2c3b2e10c0a3da55d49d7fdb90</anchor>
      <arglist>(EntityId entity_id, unsigned &amp;ix, unsigned &amp;iy) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Entity *</type>
      <name>elem</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a33382ee17cfe377fb719568ecfb416a0</anchor>
      <arglist>(unsigned ix, unsigned iy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate_sides_meta</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>ab5e7ce995e4fe2756edf7e7d10ce8851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate_sides_bulk</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a9dacf234b73970d765ce682d4b1c79d1</anchor>
      <arglist>(std::vector&lt; EntityId &gt; &amp;element_ids_on_this_processor)</arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::MetaData</type>
      <name>meta_data</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>af2a1d92d68412053c09474c8b6662421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::BulkData</type>
      <name>bulk_data</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a8a073995ac8660218fe669db244d14b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>quad_part</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>aef7d2fded1b2b900f721a8d115d9b9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordFieldType &amp;</type>
      <name>coord_field</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a51d23c39c0301b413c3676d524b56c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordGatherFieldType &amp;</type>
      <name>coord_gather_field</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a90d5f9beed864d2fb80dbafbfc04986b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned</type>
      <name>NX</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a43b2501dbf15ddca9470886c5f65e1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned</type>
      <name>NY</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a4a8810effbf08c467a0f52957bb3edcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part *</type>
      <name>side_parts</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>a3ad93585b866595d575357559a4627b2</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_sidesets</name>
      <anchorfile>classstk_1_1encore_1_1unit__tests_1_1QuadFixture.html</anchorfile>
      <anchor>af213c0be8cbcb2114297efc5c1d6ded7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::encore::utils</name>
    <filename>namespacestk_1_1encore_1_1utils.html</filename>
    <class kind="class">stk::encore::utils::Function</class>
    <class kind="class">stk::encore::utils::FunctionWithGrad</class>
    <class kind="class">stk::encore::utils::CompositeFunction</class>
    <class kind="class">stk::encore::utils::XForm</class>
    <class kind="class">stk::encore::utils::XFormDir</class>
    <class kind="class">stk::encore::utils::TensorProductMesh</class>
    <class kind="class">stk::encore::utils::XFormPath</class>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a5a82a25cbf3f40d9c9314d4b3444ec6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a51454f67c1bbb91e27d7e0244275b6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double *, stk::mesh::ElementNode &gt;</type>
      <name>ElementNodePointerFieldType</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>ad6149ddcdc75dbd0ced9ad47b42af1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>array&lt; 3, double &gt;</type>
      <name>Coord</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a52e2cfabc2ba7bfd84f3f7e80ac56bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Function&lt; Coord, Coord &gt;</type>
      <name>VectorFieldFunction</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>ac58a68d092e20e98bab3a48702645a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Coord &gt;</type>
      <name>VectorOfCoord</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a1658179617178d0808ac3913cfccf400</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; unsigned &gt;</type>
      <name>VectorOfInt</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a6ed1cc920301fe6648c903812cfa4214</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>namespacestk_1_1encore_1_1utils.html</anchorfile>
      <anchor>a5aa524bdb870d41b2822cbc81dd12cfa</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;dst, const std::vector&lt; T &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::Function</name>
    <filename>classstk_1_1encore_1_1utils_1_1Function.html</filename>
    <templarg>domain</templarg>
    <templarg>codomain</templarg>
    <member kind="function">
      <type></type>
      <name>Function</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>a90a20d9bd82acfd4e01a6c71ea7e470d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual codomain</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>ab68d6962b0548fb59dfc1822fde1079c</anchor>
      <arglist>(const domain &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>a54a802d2dd23f974fe472f3c2d442974</anchor>
      <arglist>(const domain &amp;x, codomain &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector&lt; codomain &gt;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>a97664ab6a80e9fcbdbdf8e309fbbcac3</anchor>
      <arglist>(const vector&lt; domain &gt; &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>a17047e772504cb93c582f4cc4d662fdc</anchor>
      <arglist>(const vector&lt; domain &gt; &amp;x, vector&lt; codomain &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>Function&lt; domain, codomain &gt;</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1Function.html</anchorfile>
      <anchor>abe41d43d89686aa5032a5666d46860e2</anchor>
      <arglist>(const Function&lt; domain, codomain_f_and_domain_g &gt; &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::FunctionWithGrad</name>
    <filename>classstk_1_1encore_1_1utils_1_1FunctionWithGrad.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>stk::encore::utils::Function</base>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::CompositeFunction</name>
    <filename>classstk_1_1encore_1_1utils_1_1CompositeFunction.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Function&lt; domain_f, codomain_g &gt;</base>
    <member kind="function">
      <type></type>
      <name>CompositeFunction</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1CompositeFunction.html</anchorfile>
      <anchor>ac4a4691b3a4c0fefa3af6e0fe7267a2b</anchor>
      <arglist>(Function&lt; codomain_f_and_domain_g, codomain_g &gt; &amp;g, Function&lt; domain_f, codomain_f_and_domain_g &gt; &amp;f, codomain_f_and_domain_g &amp;tmp_fv=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual codomain_g</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1CompositeFunction.html</anchorfile>
      <anchor>a76e8e54bf61fff4f8127e0c50f50d645</anchor>
      <arglist>(domain_f &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1CompositeFunction.html</anchorfile>
      <anchor>a3bd794d0a97920a4b385ca037a04d58c</anchor>
      <arglist>(domain_f &amp;x, codomain_g &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::XForm</name>
    <filename>classstk_1_1encore_1_1utils_1_1XForm.html</filename>
    <base>stk::encore::utils::Function</base>
    <member kind="function">
      <type></type>
      <name>XForm</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XForm.html</anchorfile>
      <anchor>acf2cd5e2eb474285a53cd33557dccc40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Coord</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XForm.html</anchorfile>
      <anchor>ac7adacc5ae46d27f1c897d45d6007fbf</anchor>
      <arglist>(const Coord &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XForm.html</anchorfile>
      <anchor>a5f01b241aeda01fd6cc5a9d9ba9f6998</anchor>
      <arglist>(const Coord &amp;x, Coord &amp;y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::XFormDir</name>
    <filename>classstk_1_1encore_1_1utils_1_1XFormDir.html</filename>
    <base>stk::encore::utils::XForm</base>
    <member kind="function">
      <type></type>
      <name>XFormDir</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormDir.html</anchorfile>
      <anchor>a2ee719ca1469ce5369b5f86dff7d6241</anchor>
      <arglist>(Coord dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Coord</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormDir.html</anchorfile>
      <anchor>ae6410548640b32195621b8f18d60823e</anchor>
      <arglist>(const Coord &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormDir.html</anchorfile>
      <anchor>accf21531e8b77b26a988a3e974839362</anchor>
      <arglist>(const Coord &amp;x, Coord &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::TensorProductMesh</name>
    <filename>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</filename>
    <member kind="function">
      <type></type>
      <name>TensorProductMesh</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a9b0c80276a8d581319a81e75b6bdd80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFromBasicMesh</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a4dfbe6adeb1206e9cc5d42620cccf7c7</anchor>
      <arglist>(TensorProductMesh &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::BulkData *</type>
      <name>getBulkData</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a3ce36d674a4b5668b2d7c2188f395796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initNodes</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a53d635052c6e136fa2bfafd9549ef584</anchor>
      <arglist>(double coords[][3], unsigned numNodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initNodes</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a2416c6c0d98e56732f54a17c14f18b76</anchor>
      <arglist>(Coord coords[], unsigned numNodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initElems</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ad5d6ed9bf13fddbed9f6057a8034d19b</anchor>
      <arglist>(unsigned elemType, unsigned indices[], unsigned numElem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a5070c91432198e8ea21dd1dc80e3c93c</anchor>
      <arglist>(unsigned elemType, unsigned sweptElemType, std::vector&lt; XForm * &gt; xforms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a7086ea3e6b3e68adf56b0a7e3b21223b</anchor>
      <arglist>(VectorOfInt elemTypes, VectorOfInt sweptElemTypes, std::vector&lt; XForm * &gt; xforms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a03d2425ba0dd9fdd9292b7c0dae62c58</anchor>
      <arglist>(std::vector&lt; XForm * &gt; xforms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a61ceb558b503ae2f9b53e7ab80bd4e1c</anchor>
      <arglist>(const double path[][3], unsigned npts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ad41375a1a5ff0a061eda1ee2cc10ecd0</anchor>
      <arglist>(const VectorOfCoord &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a139134440b05e01e299cfd826c59aa8a</anchor>
      <arglist>(const VectorOfCoord &amp;path, const VectorOfCoord &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a95918e57e36cd8ed14a44b0f00c21106</anchor>
      <arglist>(XForm &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squareMesh</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>af174bd5e630b206921d9dd26c86e4267</anchor>
      <arglist>(unsigned nx, unsigned ny, double xlength, double ylength, double xorigin=0.0, double yorigin=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubeMesh</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a7e111b58ea7a29623c8d3c873266dd25</anchor>
      <arglist>(unsigned nx, unsigned ny, unsigned nz, double xlength, double ylength, double zlength, double xorigin=0.0, double yorigin=0.0, double zorigin=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ac334e773f3bd8da402832fab43005503</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a2b4e2e7ea96c0bb76bf3526e2a87a418</anchor>
      <arglist>(const char *str, const int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakElement</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>aa68a9fe6d74a0d02d28290eae99e4db0</anchor>
      <arglist>(unsigned elemIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakAllElements</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a13a0afe824b3af9b48fe42ef33fbd445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dumpSTK</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ac3c653d24215060b455eb69bf1f057a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a0c19e3dfdbfe06a0aeb4f73075984940</anchor>
      <arglist>(bool onOff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ad58adda91c3222a15169f7a6e9252ddd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stkMeshCreate</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a2bd83d510728592379c2412f296f2464</anchor>
      <arglist>(stk::ParallelMachine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stkMeshCreate_UseCase_3</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a3310c66716fa0278f38b6a21b631a57f</anchor>
      <arglist>(stk::ParallelMachine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSTKMesh</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a3ba24e743c25cd2b4e033c89a1da7260</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_deleteAfterSweep</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a8fba50f2371b53e67dc5267f6ece2ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_deleteAfterBreak</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ac4c42f53701610824d4e8c86e2e2f980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorOfCoord</type>
      <name>m_node_coords</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>a3341940d99057e93f1e2630d048871ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorOfInt</type>
      <name>m_elems</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1TensorProductMesh.html</anchorfile>
      <anchor>ab6b9a4531a77e182b5be444e2230c5e5</anchor>
      <arglist>[NUM_ELEM_TYPES]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::encore::utils::XFormPath</name>
    <filename>classstk_1_1encore_1_1utils_1_1XFormPath.html</filename>
    <base>stk::encore::utils::XForm</base>
    <member kind="function">
      <type></type>
      <name>XFormPath</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormPath.html</anchorfile>
      <anchor>aecdea8952476c8b8519695dbb956ea56</anchor>
      <arglist>(const Coord &amp;from, const Coord &amp;from_dir, const Coord &amp;to, const Coord &amp;to_dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Coord</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormPath.html</anchorfile>
      <anchor>aeb8496e33853cf171ea7247e28dce3f8</anchor>
      <arglist>(const Coord &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classstk_1_1encore_1_1utils_1_1XFormPath.html</anchorfile>
      <anchor>a10666462a4d93a16d9c06a7053703c22</anchor>
      <arglist>(const Coord &amp;x, Coord &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::mesh</name>
    <filename>namespacestk_1_1mesh.html</filename>
    <namespace>stk::mesh::use_cases</namespace>
  </compound>
  <compound kind="namespace">
    <name>stk::mesh::use_cases</name>
    <filename>namespacestk_1_1mesh_1_1use__cases.html</filename>
    <class kind="class">stk::mesh::use_cases::UseCase_3_Mesh</class>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>a728db7769b52367878e4fad10d616633</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double &gt;</type>
      <name>ScalarFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>ad9c434645be7f52ceb2641ed22c0b112</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double *, stk::mesh::ElementNode &gt;</type>
      <name>ElementNodePointerFieldType</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>ad118e1a32ea4d059a3aa1fddeeb16ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyMesh</name>
      <anchorfile>namespacestk_1_1mesh_1_1use__cases.html</anchorfile>
      <anchor>a1a7bafbf013ef68958d657c1fe119b75</anchor>
      <arglist>(const UseCase_3_Mesh &amp;mesh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stk::mesh::use_cases::UseCase_3_Mesh</name>
    <filename>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</filename>
    <member kind="function">
      <type></type>
      <name>~UseCase_3_Mesh</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>ae298b813b355e262be8383a8006c6fb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UseCase_3_Mesh</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>abbfe22126615a237630dc3e4bc07e50a</anchor>
      <arglist>(stk::ParallelMachine comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populate</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>ac99da95a6987ccd0d9e4a5793e6898af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::MetaData</type>
      <name>m_metaData</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a714531f19bd726c4201836c7a6105483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::BulkData</type>
      <name>m_bulkData</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a6a519a9a79bdd1e4889bdc9d1e5e9a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_hex</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a47bb1c43f460e684880d191d574ba1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_wedge</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>af2b85ebe2761130ae4a58b241b3c3a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_tet</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a6c5a5f695f756ed01d29fdc6bcaaa37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_pyramid</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a44c89dda4b5d91b26eff9fc88f4a52e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_quad_shell</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a51fe6680ddeca6bd79e7b91eefb484bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stk::mesh::Part &amp;</type>
      <name>m_block_tri_shell</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a974c87c8c51f83f0a4fb61eb53140da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorFieldType &amp;</type>
      <name>m_coordinates_field</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>ab4a854a88056bcabfc074172ed77e236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorFieldType &amp;</type>
      <name>m_centroid_field</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a798dcebf34ee2aa5b87f5ef3a390124d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarFieldType &amp;</type>
      <name>m_temperature_field</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>aeaa54c3bd6fd9049356b4bdec3e68bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarFieldType &amp;</type>
      <name>m_volume_field</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>a9fec7d1aec1086b81ff46a9b0fe31101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ElementNodePointerFieldType &amp;</type>
      <name>m_element_node_coordinates_field</name>
      <anchorfile>classstk_1_1mesh_1_1use__cases_1_1UseCase__3__Mesh.html</anchorfile>
      <anchor>aee62b2e2f9084fc0fbaf48bbf1d268ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stk::utils</name>
    <filename>namespacestk_1_1utils.html</filename>
    <class kind="class">stk::utils::TensorProductMesh</class>
  </compound>
  <compound kind="class">
    <name>stk::utils::TensorProductMesh</name>
    <filename>classstk_1_1utils_1_1TensorProductMesh.html</filename>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/function/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/</path>
    <filename>dir_a556ab8f933e7af5f4db8d9d44ecc109.html</filename>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</dir>
    <file>BucketOp.hpp</file>
    <file>CompositeFunction.hpp</file>
    <file>ConstantFunction.hpp</file>
    <file>ElementOp.hpp</file>
    <file>FieldFunction.hpp</file>
    <file>Function.hpp</file>
    <file>FunctionOperator.hpp</file>
    <file>MDArray.hpp</file>
    <file>MultipleFieldFunction.hpp</file>
    <file>PartOp.hpp</file>
    <file>StringFunction.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/function/internal/</path>
    <filename>dir_9567eb7040bfd545e17f0f14787e917f.html</filename>
    <file>BuildBoundingBoxes.hpp</file>
    <file>ComputeBases.hpp</file>
    <file>ComputeFieldValues.hpp</file>
    <file>Dimensions.hpp</file>
    <file>FunctionWithIntrepidRequest.hpp</file>
    <file>GenericFunction.hpp</file>
    <file>HasValue.hpp</file>
    <file>IntegratedOp.hpp</file>
    <file>IsInElement.hpp</file>
    <file>Searcher.hpp</file>
    <file>SimpleSearcher.hpp</file>
    <file>STKSearcher.hpp</file>
    <file>STKSearcherDef.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/verifier/mesh/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/verifier/mesh/</path>
    <filename>dir_b27fabf67d95f5c30c464a583cd861e7.html</filename>
    <file>SEncr_Verifier.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/mesh/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/</path>
    <filename>dir_3c7d54db8daa4bde6b8f9f77b859bd6a.html</filename>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</dir>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</dir>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/mod/</path>
    <filename>dir_4d0e040a0abeb85621cbb5362aa357e3.html</filename>
    <file>UniformRefiner.hpp</file>
    <file>UniformRefinerPattern.hpp</file>
    <file>UniformRefinerPattern_Hex8_Hex20_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Hex8_Hex27_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Hex8_Hex8_8_sierra.hpp</file>
    <file>UniformRefinerPattern_Hex8_Tet4_24.hpp</file>
    <file>UniformRefinerPattern_Line2_Line2_2_sierra.hpp</file>
    <file>UniformRefinerPattern_Line2_Line3_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Quad4_Quad4_4.hpp</file>
    <file>UniformRefinerPattern_Quad4_Quad4_4_sierra.hpp</file>
    <file>UniformRefinerPattern_Quad4_Quad8_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Quad4_Quad9_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Quad4_Tri3_4.hpp</file>
    <file>UniformRefinerPattern_Quad4_Tri3_6.hpp</file>
    <file>UniformRefinerPattern_Tet4_Tet10_1_sierra.hpp</file>
    <file>UniformRefinerPattern_Tet4_Tet4_8_sierra.hpp</file>
    <file>UniformRefinerPattern_Tri3_Tri3_4_sierra.hpp</file>
    <file>UniformRefinerPattern_Tri3_Tri6_1_sierra.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/norm/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/norm/</path>
    <filename>dir_3395e3ade35f2f7190f74ddd681042f9.html</filename>
    <file>IntrepidManager.hpp</file>
    <file>Norm.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</path>
    <filename>dir_30624ad84bcbb6648322a517c2f34eb2.html</filename>
    <file>CellTopology.hpp</file>
    <file>MeshObjTopology.hpp</file>
    <file>RefinementKey.hpp</file>
    <file>RefinementTopology.hpp</file>
    <file>StdMeshObjTopologies.hpp</file>
    <file>stk_encore_code_types.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/</path>
    <filename>dir_0173654092dbc9a8b705a155cad1a2a4.html</filename>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/function/</dir>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/mesh/</dir>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/norm/</dir>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/verifier/</dir>
    <file>Edge.hpp</file>
    <file>Encore.hpp</file>
    <file>EncoreMesh.hpp</file>
    <file>EncoreMeshReadWrite.hpp</file>
    <file>ExceptionWatch.hpp</file>
    <file>Name.hpp</file>
    <file>ParallelUtil.hpp</file>
    <file>ParallelUtilDef.hpp</file>
    <file>RunEnvironment.hpp</file>
    <file>SEncr_GeometryVerifier.hpp</file>
    <file>SEncr_TopologyVerifier.hpp</file>
    <file>ShardsInterfaceTable.hpp</file>
    <file>stk_mesh.hpp</file>
    <file>Util.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/unit_tests/</name>
    <path>/scratch/srkenno/code/stk_encore/unit_tests/</path>
    <filename>dir_47686cbcfc4693fc26fc16dc4870ec5d.html</filename>
    <file>array.hpp</file>
    <file>Documentation.hpp</file>
    <file>example.hpp</file>
    <file>function.hpp</file>
    <file>pyencore.h</file>
    <file>SEunit_Fixture.hpp</file>
    <file>SEunit_QuadFixture.hpp</file>
    <file>stk_utest_macros.hpp</file>
    <file>TensorProductMesh.hpp</file>
    <file>UseCase_3.hpp</file>
    <file>XFormPath.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/</path>
    <filename>dir_f1bf95c23ca6d79886d931018b718e28.html</filename>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/mesh/util/sierra_element/</dir>
    <file>Colorer.hpp</file>
    <file>NodeRegistry.hpp</file>
    <file>SubDimCell.hpp</file>
  </compound>
  <compound kind="dir">
    <name>/scratch/srkenno/code/stk_encore/stk_encore/verifier/</name>
    <path>/scratch/srkenno/code/stk_encore/stk_encore/verifier/</path>
    <filename>dir_c2411b6e503c40371685c11b7fe3125b.html</filename>
    <dir>/scratch/srkenno/code/stk_encore/stk_encore/verifier/mesh/</dir>
  </compound>
</tagfile>
