# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#@HEADER
# ************************************************************************
# 
#            NOX: An Object-Oriented Nonlinear Solver Package
#                 Copyright (2002) Sandia Corporation
# 
#            LOCA: Library of Continuation Algorithms Package
#                 Copyright (2005) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# 
# Questions? Contact Roger Pawlowski (rppawlo@sandia.gov) or 
# Eric Phipps (etphipp@sandia.gov), Sandia National Laboratories.
# ************************************************************************
#@HEADER

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@BUILD_LOCA_EPETRA_TESTS_TRUE@noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = test/epetra/LOCA_Brusselator_xyzt
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/ac_cxx_invalid_template_qualifier.m4 \
	$(top_srcdir)/config/ac_cxx_namespaces.m4 \
	$(top_srcdir)/config/ac_cxx_stl_map_key_const.m4 \
	$(top_srcdir)/config/acx_dggev.m4 \
	$(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_nox_interface.m4 \
	$(top_srcdir)/config/tac_arg_finite_number_check.m4 \
	$(top_srcdir)/config/tac_arg_trilinos_header_check.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libs.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/config/tac_blas.m4 \
	$(top_srcdir)/config/tac_lapack.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/NOX_Config.h
CONFIG_CLEAN_FILES =
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@am__EXEEXT_1 =  \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_ifpack$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_global$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_sequential$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_sequential_IPS$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_sequential_OPS$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_parallel$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_blockdiagonal$(EXEEXT) \
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@	brussXYZT_bdsdt$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_brussXYZT_bdsdt_OBJECTS = Basis.$(OBJEXT) Brusselator.$(OBJEXT) \
	Problem_Interface.$(OBJEXT) brussXYZT_bdsdt.$(OBJEXT)
brussXYZT_bdsdt_OBJECTS = $(am_brussXYZT_bdsdt_OBJECTS)
am__DEPENDENCIES_1 =
@USING_GNUMAKE_TRUE@am__DEPENDENCIES_2 = $(shell $(am__DEPENDENCIES_1) \
@USING_GNUMAKE_TRUE@	$(top_srcdir)/config/strip_dup_libs.pl \
@USING_GNUMAKE_TRUE@	$(LOCA_EPETRA_TEST_LIBS))
am_brussXYZT_blockdiagonal_OBJECTS = Basis.$(OBJEXT) \
	Brusselator.$(OBJEXT) Problem_Interface.$(OBJEXT) \
	brussXYZT_blockdiagonal.$(OBJEXT)
brussXYZT_blockdiagonal_OBJECTS =  \
	$(am_brussXYZT_blockdiagonal_OBJECTS)
am_brussXYZT_global_OBJECTS = Basis.$(OBJEXT) Brusselator.$(OBJEXT) \
	Problem_Interface.$(OBJEXT) brussXYZT_global.$(OBJEXT)
brussXYZT_global_OBJECTS = $(am_brussXYZT_global_OBJECTS)
am_brussXYZT_ifpack_OBJECTS = Basis.$(OBJEXT) Brusselator.$(OBJEXT) \
	Problem_Interface.$(OBJEXT) brussXYZT_ifpack.$(OBJEXT)
brussXYZT_ifpack_OBJECTS = $(am_brussXYZT_ifpack_OBJECTS)
am_brussXYZT_parallel_OBJECTS = Basis.$(OBJEXT) Brusselator.$(OBJEXT) \
	Problem_Interface.$(OBJEXT) brussXYZT_parallel.$(OBJEXT)
brussXYZT_parallel_OBJECTS = $(am_brussXYZT_parallel_OBJECTS)
am_brussXYZT_sequential_OBJECTS = Basis.$(OBJEXT) \
	Brusselator.$(OBJEXT) Problem_Interface.$(OBJEXT) \
	brussXYZT_sequential.$(OBJEXT)
brussXYZT_sequential_OBJECTS = $(am_brussXYZT_sequential_OBJECTS)
am_brussXYZT_sequential_IPS_OBJECTS = Basis.$(OBJEXT) \
	Brusselator.$(OBJEXT) Problem_Interface.$(OBJEXT) \
	brussXYZT_sequential_IPS.$(OBJEXT)
brussXYZT_sequential_IPS_OBJECTS =  \
	$(am_brussXYZT_sequential_IPS_OBJECTS)
am_brussXYZT_sequential_OPS_OBJECTS = Basis.$(OBJEXT) \
	Brusselator.$(OBJEXT) Problem_Interface.$(OBJEXT) \
	brussXYZT_sequential_OPS.$(OBJEXT)
brussXYZT_sequential_OPS_OBJECTS =  \
	$(am_brussXYZT_sequential_OPS_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(brussXYZT_bdsdt_SOURCES) \
	$(brussXYZT_blockdiagonal_SOURCES) $(brussXYZT_global_SOURCES) \
	$(brussXYZT_ifpack_SOURCES) $(brussXYZT_parallel_SOURCES) \
	$(brussXYZT_sequential_SOURCES) \
	$(brussXYZT_sequential_IPS_SOURCES) \
	$(brussXYZT_sequential_OPS_SOURCES)
DIST_SOURCES = $(brussXYZT_bdsdt_SOURCES) \
	$(brussXYZT_blockdiagonal_SOURCES) $(brussXYZT_global_SOURCES) \
	$(brussXYZT_ifpack_SOURCES) $(brussXYZT_parallel_SOURCES) \
	$(brussXYZT_sequential_SOURCES) \
	$(brussXYZT_sequential_IPS_SOURCES) \
	$(brussXYZT_sequential_OPS_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADDON_belos_EXAMPLES = @ADDON_belos_EXAMPLES@
ADDON_belos_TESTS = @ADDON_belos_TESTS@
ADDON_epetra_EXAMPLES = @ADDON_epetra_EXAMPLES@
ADDON_epetra_TESTS = @ADDON_epetra_TESTS@
ADDON_lapack_EXAMPLES = @ADDON_lapack_EXAMPLES@
ADDON_lapack_TESTS = @ADDON_lapack_TESTS@
ADDON_loca_epetra_EXAMPLES = @ADDON_loca_epetra_EXAMPLES@
ADDON_loca_epetra_TESTS = @ADDON_loca_epetra_TESTS@
ADDON_loca_lapack_EXAMPLES = @ADDON_loca_lapack_EXAMPLES@
ADDON_loca_lapack_TESTS = @ADDON_loca_lapack_TESTS@
ADDON_loca_petsc_TESTS = @ADDON_loca_petsc_TESTS@
ADDON_loca_thyra_TESTS = @ADDON_loca_thyra_TESTS@
ADDON_petsc_EXAMPLES = @ADDON_petsc_EXAMPLES@
ADDON_petsc_TESTS = @ADDON_petsc_TESTS@
ADDON_thyra_TESTS = @ADDON_thyra_TESTS@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXREPOS = @CXXREPOS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = .exe
F77 = @F77@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GREP = @GREP@
HAVE_DOXYGEN_DOT = @HAVE_DOXYGEN_DOT@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MF_INCDIR = @MF_INCDIR@
MF_LIBDIR = @MF_LIBDIR@
MF_LIBS = @MF_LIBS@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_LIBS = @MPI_LIBS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
PETSC_CXXFLAGS = @PETSC_CXXFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WITH_PRERELEASE_SUBST = @WITH_PRERELEASE_SUBST@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@USING_GNUMAKE_FALSE@TEST_LIBS = $(LOCA_EPETRA_TEST_LIBS)
@USING_GNUMAKE_TRUE@TEST_LIBS = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_libs.pl $(LOCA_EPETRA_TEST_LIBS))
@USING_GNUMAKE_FALSE@TEST_INCLUDES = $(LOCA_EPETRA_TEST_INCLUDES)
@USING_GNUMAKE_TRUE@TEST_INCLUDES = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_incl_paths.pl $(LOCA_EPETRA_TEST_INCLUDES))
AM_CPPFLAGS = $(TEST_INCLUDES)
@BUILD_NOX_EPETRAEXT_SUPPORT_FALSE@BRUSSXYZT = 

# The XYZT tests require epetraext
@BUILD_NOX_EPETRAEXT_SUPPORT_TRUE@BRUSSXYZT = brussXYZT_ifpack brussXYZT_global brussXYZT_sequential brussXYZT_sequential_IPS brussXYZT_sequential_OPS brussXYZT_parallel brussXYZT_blockdiagonal brussXYZT_bdsdt # brussXYZT_parareal
brussXYZT_ifpack_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_ifpack.C

brussXYZT_ifpack_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_ifpack_LDADD = $(TEST_LIBS)
brussXYZT_global_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_global.C

brussXYZT_global_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_global_LDADD = $(TEST_LIBS)
brussXYZT_sequential_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_sequential.C

brussXYZT_sequential_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_sequential_LDADD = $(TEST_LIBS)
brussXYZT_sequential_IPS_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_sequential_IPS.C

brussXYZT_sequential_IPS_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_sequential_IPS_LDADD = $(TEST_LIBS)
brussXYZT_sequential_OPS_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_sequential_OPS.C

brussXYZT_sequential_OPS_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_sequential_OPS_LDADD = $(TEST_LIBS)
brussXYZT_parallel_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_parallel.C

brussXYZT_parallel_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_parallel_LDADD = $(TEST_LIBS)

# Currently breaks mpirun
#brussXYZT_parareal_SOURCES = \
#	$(srcdir)/Basis.C $(srcdir)/Basis.H \
#	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
#	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
#	$(srcdir)/brussXYZT_parareal.C
#
#brussXYZT_parareal_DEPENDENCIES = $(top_builddir)/src/libnox.a \
#        $(top_builddir)/src-epetra/libnoxepetra.a \
#        $(top_builddir)/src-loca/src/libloca.a \
#        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a
#
#brussXYZT_parareal_LDADD = $(TEST_LIBS)
brussXYZT_blockdiagonal_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_blockdiagonal.C

brussXYZT_blockdiagonal_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_blockdiagonal_LDADD = $(TEST_LIBS)
brussXYZT_bdsdt_SOURCES = \
	$(srcdir)/Basis.C $(srcdir)/Basis.H \
	$(srcdir)/Brusselator.C $(srcdir)/Brusselator.H \
	$(srcdir)/Problem_Interface.C $(srcdir)/Problem_Interface.H \
	$(srcdir)/brussXYZT_bdsdt.C

brussXYZT_bdsdt_DEPENDENCIES = $(top_builddir)/src/libnox.a \
        $(top_builddir)/src-epetra/libnoxepetra.a \
        $(top_builddir)/src-loca/src/libloca.a \
        $(top_builddir)/src-loca/src-epetra/liblocaepetra.a

brussXYZT_bdsdt_LDADD = $(TEST_LIBS)

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 

# ------------------------------------------------------------------------
# Files to be deleted by 'make clean'
# ------------------------------------------------------------------------
MOSTLYCLEANFILES = $(CXXREPOS)
all: all-am

.SUFFIXES:
.SUFFIXES: .C .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  test/epetra/LOCA_Brusselator_xyzt/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/epetra/LOCA_Brusselator_xyzt/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
brussXYZT_bdsdt$(EXEEXT): $(brussXYZT_bdsdt_OBJECTS) $(brussXYZT_bdsdt_DEPENDENCIES) 
	@rm -f brussXYZT_bdsdt$(EXEEXT)
	$(CXXLINK) $(brussXYZT_bdsdt_OBJECTS) $(brussXYZT_bdsdt_LDADD) $(LIBS)
brussXYZT_blockdiagonal$(EXEEXT): $(brussXYZT_blockdiagonal_OBJECTS) $(brussXYZT_blockdiagonal_DEPENDENCIES) 
	@rm -f brussXYZT_blockdiagonal$(EXEEXT)
	$(CXXLINK) $(brussXYZT_blockdiagonal_OBJECTS) $(brussXYZT_blockdiagonal_LDADD) $(LIBS)
brussXYZT_global$(EXEEXT): $(brussXYZT_global_OBJECTS) $(brussXYZT_global_DEPENDENCIES) 
	@rm -f brussXYZT_global$(EXEEXT)
	$(CXXLINK) $(brussXYZT_global_OBJECTS) $(brussXYZT_global_LDADD) $(LIBS)
brussXYZT_ifpack$(EXEEXT): $(brussXYZT_ifpack_OBJECTS) $(brussXYZT_ifpack_DEPENDENCIES) 
	@rm -f brussXYZT_ifpack$(EXEEXT)
	$(CXXLINK) $(brussXYZT_ifpack_OBJECTS) $(brussXYZT_ifpack_LDADD) $(LIBS)
brussXYZT_parallel$(EXEEXT): $(brussXYZT_parallel_OBJECTS) $(brussXYZT_parallel_DEPENDENCIES) 
	@rm -f brussXYZT_parallel$(EXEEXT)
	$(CXXLINK) $(brussXYZT_parallel_OBJECTS) $(brussXYZT_parallel_LDADD) $(LIBS)
brussXYZT_sequential$(EXEEXT): $(brussXYZT_sequential_OBJECTS) $(brussXYZT_sequential_DEPENDENCIES) 
	@rm -f brussXYZT_sequential$(EXEEXT)
	$(CXXLINK) $(brussXYZT_sequential_OBJECTS) $(brussXYZT_sequential_LDADD) $(LIBS)
brussXYZT_sequential_IPS$(EXEEXT): $(brussXYZT_sequential_IPS_OBJECTS) $(brussXYZT_sequential_IPS_DEPENDENCIES) 
	@rm -f brussXYZT_sequential_IPS$(EXEEXT)
	$(CXXLINK) $(brussXYZT_sequential_IPS_OBJECTS) $(brussXYZT_sequential_IPS_LDADD) $(LIBS)
brussXYZT_sequential_OPS$(EXEEXT): $(brussXYZT_sequential_OPS_OBJECTS) $(brussXYZT_sequential_OPS_DEPENDENCIES) 
	@rm -f brussXYZT_sequential_OPS$(EXEEXT)
	$(CXXLINK) $(brussXYZT_sequential_OPS_OBJECTS) $(brussXYZT_sequential_OPS_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Basis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Brusselator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Problem_Interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_bdsdt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_blockdiagonal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_ifpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_sequential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_sequential_IPS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brussXYZT_sequential_OPS.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Basis.o: $(srcdir)/Basis.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Basis.o -MD -MP -MF $(DEPDIR)/Basis.Tpo -c -o Basis.o `test -f '$(srcdir)/Basis.C' || echo '$(srcdir)/'`$(srcdir)/Basis.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Basis.Tpo $(DEPDIR)/Basis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Basis.C' object='Basis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Basis.o `test -f '$(srcdir)/Basis.C' || echo '$(srcdir)/'`$(srcdir)/Basis.C

Basis.obj: $(srcdir)/Basis.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Basis.obj -MD -MP -MF $(DEPDIR)/Basis.Tpo -c -o Basis.obj `if test -f '$(srcdir)/Basis.C'; then $(CYGPATH_W) '$(srcdir)/Basis.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Basis.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Basis.Tpo $(DEPDIR)/Basis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Basis.C' object='Basis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Basis.obj `if test -f '$(srcdir)/Basis.C'; then $(CYGPATH_W) '$(srcdir)/Basis.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Basis.C'; fi`

Brusselator.o: $(srcdir)/Brusselator.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Brusselator.o -MD -MP -MF $(DEPDIR)/Brusselator.Tpo -c -o Brusselator.o `test -f '$(srcdir)/Brusselator.C' || echo '$(srcdir)/'`$(srcdir)/Brusselator.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Brusselator.Tpo $(DEPDIR)/Brusselator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Brusselator.C' object='Brusselator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Brusselator.o `test -f '$(srcdir)/Brusselator.C' || echo '$(srcdir)/'`$(srcdir)/Brusselator.C

Brusselator.obj: $(srcdir)/Brusselator.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Brusselator.obj -MD -MP -MF $(DEPDIR)/Brusselator.Tpo -c -o Brusselator.obj `if test -f '$(srcdir)/Brusselator.C'; then $(CYGPATH_W) '$(srcdir)/Brusselator.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Brusselator.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Brusselator.Tpo $(DEPDIR)/Brusselator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Brusselator.C' object='Brusselator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Brusselator.obj `if test -f '$(srcdir)/Brusselator.C'; then $(CYGPATH_W) '$(srcdir)/Brusselator.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Brusselator.C'; fi`

Problem_Interface.o: $(srcdir)/Problem_Interface.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Problem_Interface.o -MD -MP -MF $(DEPDIR)/Problem_Interface.Tpo -c -o Problem_Interface.o `test -f '$(srcdir)/Problem_Interface.C' || echo '$(srcdir)/'`$(srcdir)/Problem_Interface.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Problem_Interface.Tpo $(DEPDIR)/Problem_Interface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Problem_Interface.C' object='Problem_Interface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Problem_Interface.o `test -f '$(srcdir)/Problem_Interface.C' || echo '$(srcdir)/'`$(srcdir)/Problem_Interface.C

Problem_Interface.obj: $(srcdir)/Problem_Interface.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Problem_Interface.obj -MD -MP -MF $(DEPDIR)/Problem_Interface.Tpo -c -o Problem_Interface.obj `if test -f '$(srcdir)/Problem_Interface.C'; then $(CYGPATH_W) '$(srcdir)/Problem_Interface.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Problem_Interface.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Problem_Interface.Tpo $(DEPDIR)/Problem_Interface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Problem_Interface.C' object='Problem_Interface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Problem_Interface.obj `if test -f '$(srcdir)/Problem_Interface.C'; then $(CYGPATH_W) '$(srcdir)/Problem_Interface.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Problem_Interface.C'; fi`

brussXYZT_bdsdt.o: $(srcdir)/brussXYZT_bdsdt.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_bdsdt.o -MD -MP -MF $(DEPDIR)/brussXYZT_bdsdt.Tpo -c -o brussXYZT_bdsdt.o `test -f '$(srcdir)/brussXYZT_bdsdt.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_bdsdt.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_bdsdt.Tpo $(DEPDIR)/brussXYZT_bdsdt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_bdsdt.C' object='brussXYZT_bdsdt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_bdsdt.o `test -f '$(srcdir)/brussXYZT_bdsdt.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_bdsdt.C

brussXYZT_bdsdt.obj: $(srcdir)/brussXYZT_bdsdt.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_bdsdt.obj -MD -MP -MF $(DEPDIR)/brussXYZT_bdsdt.Tpo -c -o brussXYZT_bdsdt.obj `if test -f '$(srcdir)/brussXYZT_bdsdt.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_bdsdt.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_bdsdt.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_bdsdt.Tpo $(DEPDIR)/brussXYZT_bdsdt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_bdsdt.C' object='brussXYZT_bdsdt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_bdsdt.obj `if test -f '$(srcdir)/brussXYZT_bdsdt.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_bdsdt.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_bdsdt.C'; fi`

brussXYZT_blockdiagonal.o: $(srcdir)/brussXYZT_blockdiagonal.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_blockdiagonal.o -MD -MP -MF $(DEPDIR)/brussXYZT_blockdiagonal.Tpo -c -o brussXYZT_blockdiagonal.o `test -f '$(srcdir)/brussXYZT_blockdiagonal.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_blockdiagonal.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_blockdiagonal.Tpo $(DEPDIR)/brussXYZT_blockdiagonal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_blockdiagonal.C' object='brussXYZT_blockdiagonal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_blockdiagonal.o `test -f '$(srcdir)/brussXYZT_blockdiagonal.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_blockdiagonal.C

brussXYZT_blockdiagonal.obj: $(srcdir)/brussXYZT_blockdiagonal.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_blockdiagonal.obj -MD -MP -MF $(DEPDIR)/brussXYZT_blockdiagonal.Tpo -c -o brussXYZT_blockdiagonal.obj `if test -f '$(srcdir)/brussXYZT_blockdiagonal.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_blockdiagonal.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_blockdiagonal.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_blockdiagonal.Tpo $(DEPDIR)/brussXYZT_blockdiagonal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_blockdiagonal.C' object='brussXYZT_blockdiagonal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_blockdiagonal.obj `if test -f '$(srcdir)/brussXYZT_blockdiagonal.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_blockdiagonal.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_blockdiagonal.C'; fi`

brussXYZT_global.o: $(srcdir)/brussXYZT_global.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_global.o -MD -MP -MF $(DEPDIR)/brussXYZT_global.Tpo -c -o brussXYZT_global.o `test -f '$(srcdir)/brussXYZT_global.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_global.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_global.Tpo $(DEPDIR)/brussXYZT_global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_global.C' object='brussXYZT_global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_global.o `test -f '$(srcdir)/brussXYZT_global.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_global.C

brussXYZT_global.obj: $(srcdir)/brussXYZT_global.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_global.obj -MD -MP -MF $(DEPDIR)/brussXYZT_global.Tpo -c -o brussXYZT_global.obj `if test -f '$(srcdir)/brussXYZT_global.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_global.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_global.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_global.Tpo $(DEPDIR)/brussXYZT_global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_global.C' object='brussXYZT_global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_global.obj `if test -f '$(srcdir)/brussXYZT_global.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_global.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_global.C'; fi`

brussXYZT_ifpack.o: $(srcdir)/brussXYZT_ifpack.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_ifpack.o -MD -MP -MF $(DEPDIR)/brussXYZT_ifpack.Tpo -c -o brussXYZT_ifpack.o `test -f '$(srcdir)/brussXYZT_ifpack.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_ifpack.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_ifpack.Tpo $(DEPDIR)/brussXYZT_ifpack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_ifpack.C' object='brussXYZT_ifpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_ifpack.o `test -f '$(srcdir)/brussXYZT_ifpack.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_ifpack.C

brussXYZT_ifpack.obj: $(srcdir)/brussXYZT_ifpack.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_ifpack.obj -MD -MP -MF $(DEPDIR)/brussXYZT_ifpack.Tpo -c -o brussXYZT_ifpack.obj `if test -f '$(srcdir)/brussXYZT_ifpack.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_ifpack.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_ifpack.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_ifpack.Tpo $(DEPDIR)/brussXYZT_ifpack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_ifpack.C' object='brussXYZT_ifpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_ifpack.obj `if test -f '$(srcdir)/brussXYZT_ifpack.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_ifpack.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_ifpack.C'; fi`

brussXYZT_parallel.o: $(srcdir)/brussXYZT_parallel.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_parallel.o -MD -MP -MF $(DEPDIR)/brussXYZT_parallel.Tpo -c -o brussXYZT_parallel.o `test -f '$(srcdir)/brussXYZT_parallel.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_parallel.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_parallel.Tpo $(DEPDIR)/brussXYZT_parallel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_parallel.C' object='brussXYZT_parallel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_parallel.o `test -f '$(srcdir)/brussXYZT_parallel.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_parallel.C

brussXYZT_parallel.obj: $(srcdir)/brussXYZT_parallel.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_parallel.obj -MD -MP -MF $(DEPDIR)/brussXYZT_parallel.Tpo -c -o brussXYZT_parallel.obj `if test -f '$(srcdir)/brussXYZT_parallel.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_parallel.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_parallel.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_parallel.Tpo $(DEPDIR)/brussXYZT_parallel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_parallel.C' object='brussXYZT_parallel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_parallel.obj `if test -f '$(srcdir)/brussXYZT_parallel.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_parallel.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_parallel.C'; fi`

brussXYZT_sequential.o: $(srcdir)/brussXYZT_sequential.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential.o -MD -MP -MF $(DEPDIR)/brussXYZT_sequential.Tpo -c -o brussXYZT_sequential.o `test -f '$(srcdir)/brussXYZT_sequential.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential.Tpo $(DEPDIR)/brussXYZT_sequential.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential.C' object='brussXYZT_sequential.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential.o `test -f '$(srcdir)/brussXYZT_sequential.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential.C

brussXYZT_sequential.obj: $(srcdir)/brussXYZT_sequential.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential.obj -MD -MP -MF $(DEPDIR)/brussXYZT_sequential.Tpo -c -o brussXYZT_sequential.obj `if test -f '$(srcdir)/brussXYZT_sequential.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential.Tpo $(DEPDIR)/brussXYZT_sequential.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential.C' object='brussXYZT_sequential.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential.obj `if test -f '$(srcdir)/brussXYZT_sequential.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential.C'; fi`

brussXYZT_sequential_IPS.o: $(srcdir)/brussXYZT_sequential_IPS.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential_IPS.o -MD -MP -MF $(DEPDIR)/brussXYZT_sequential_IPS.Tpo -c -o brussXYZT_sequential_IPS.o `test -f '$(srcdir)/brussXYZT_sequential_IPS.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential_IPS.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential_IPS.Tpo $(DEPDIR)/brussXYZT_sequential_IPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential_IPS.C' object='brussXYZT_sequential_IPS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential_IPS.o `test -f '$(srcdir)/brussXYZT_sequential_IPS.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential_IPS.C

brussXYZT_sequential_IPS.obj: $(srcdir)/brussXYZT_sequential_IPS.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential_IPS.obj -MD -MP -MF $(DEPDIR)/brussXYZT_sequential_IPS.Tpo -c -o brussXYZT_sequential_IPS.obj `if test -f '$(srcdir)/brussXYZT_sequential_IPS.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential_IPS.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential_IPS.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential_IPS.Tpo $(DEPDIR)/brussXYZT_sequential_IPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential_IPS.C' object='brussXYZT_sequential_IPS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential_IPS.obj `if test -f '$(srcdir)/brussXYZT_sequential_IPS.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential_IPS.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential_IPS.C'; fi`

brussXYZT_sequential_OPS.o: $(srcdir)/brussXYZT_sequential_OPS.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential_OPS.o -MD -MP -MF $(DEPDIR)/brussXYZT_sequential_OPS.Tpo -c -o brussXYZT_sequential_OPS.o `test -f '$(srcdir)/brussXYZT_sequential_OPS.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential_OPS.C
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential_OPS.Tpo $(DEPDIR)/brussXYZT_sequential_OPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential_OPS.C' object='brussXYZT_sequential_OPS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential_OPS.o `test -f '$(srcdir)/brussXYZT_sequential_OPS.C' || echo '$(srcdir)/'`$(srcdir)/brussXYZT_sequential_OPS.C

brussXYZT_sequential_OPS.obj: $(srcdir)/brussXYZT_sequential_OPS.C
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT brussXYZT_sequential_OPS.obj -MD -MP -MF $(DEPDIR)/brussXYZT_sequential_OPS.Tpo -c -o brussXYZT_sequential_OPS.obj `if test -f '$(srcdir)/brussXYZT_sequential_OPS.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential_OPS.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential_OPS.C'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/brussXYZT_sequential_OPS.Tpo $(DEPDIR)/brussXYZT_sequential_OPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/brussXYZT_sequential_OPS.C' object='brussXYZT_sequential_OPS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o brussXYZT_sequential_OPS.obj `if test -f '$(srcdir)/brussXYZT_sequential_OPS.C'; then $(CYGPATH_W) '$(srcdir)/brussXYZT_sequential_OPS.C'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/brussXYZT_sequential_OPS.C'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


include $(top_builddir)/Makefile.export.nox
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
