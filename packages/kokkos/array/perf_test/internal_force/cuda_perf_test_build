#!/bin/csh

#-----------------------------------------------------------------------------
# Quick and dirty build for unit testing with Host (serial) and TPI devices.
# To be replace with CMake integration.

set INC_PATH="-I../../../../ThreadPool/src -I. -I../../src"

# set GCC_SOURCES="../../src/impl/*.cpp ../../src/DeviceHost/*.cpp main.cpp testHost.cpp testTPI.cpp vanilla.cpp vanillaMP.cpp vanillaCuda.cpp UseCase_14_Common.cpp"
set GCC_SOURCES="../../src/impl/*.cpp ../../src/DeviceHost/*.cpp main.cpp testHost.cpp testTPI.cpp vanilla.cpp vanillaMP.cpp UseCase_14_Common.cpp"

set LIB=""

#-----------------------------------------------------------------------------

set GCC_SOURCES="${GCC_SOURCES} ../../../../ThreadPool/src/*.c ../../src/DeviceTPI/*.cpp"

set LIB="${LIB} -lpthread"

#set GCC_SOURCES="${GCC_SOURCES} PerfTestTPIStub.cpp"

#-----------------------------------------------------------------------------

# /usr/local/cuda/bin/nvcc -arch=sm_20 --keep

#/usr/local/cuda/bin/nvcc -arch=sm_20 --ptxas-options=-v -O3 ${INC_PATH} \
#	-lib -o libCuda.a ../../src/DeviceCuda/*.cu testCuda.cu UseCase_14_Common.cu

#/usr/local/cuda/bin/nvcc -arch=sm_20  ${INC_PATH} -O3 -lib -o libCuda.a \
#       ../../src/DeviceCuda/*.cu testCuda.cu UseCase_14_Common.cu

#set LIB="${LIB} -L/usr/local/cuda/lib64 libCuda.a -lcudart -lcuda"

# set GCC_SOURCES="${GCC_SOURCES} PerfTestCudaStub.cpp"

#-----------------------------------------------------------------------------

echo "#define HAVE_PTHREAD" > ThreadPool_config.h

set GCC_FLAGS="-Wall -O3 -fopenmp ${INC_PATH}"

g++ $GCC_FLAGS -pg -c ${GCC_SOURCES}

g++ $GCC_FLAGS -pg -o fe_test.exe *.o ${LIB} 

rm -f *.o *.a ThreadPool_config.h

#-----------------------------------------------------------------------------

