Last updated: 14 June 2012

* sparse_triangular_solve.py

Code generator IN PROGRESS for sequential sparse triangular solve.
This Python script generates templated C++ code for many different
variants of sparse triangular solve for compressed sparse row (CSR) -
format sparse matrices, and dense input and output (multi)vectors
stored in either column-major or row-major layout.

The typical use case of the code is to generate two header files: one
of declarations, and the other of definitions.  To do this, just run
it as a script:

$ python sparse_triangular_solve.py

That will create the two header files in the current working
directory.  You can also import the sparse_triangular_solve module
from Python and use specific functions there.

TODO: 

* Compressed sparse column (CSC) format (for the transpose of CSR
  matrices).

CSC-format sparse triangular solve will look much like the reference
BLAS' triangular solve (in that it will overwrite the input vector),
except that it will only pass over the sparse matrix once for all the
right-hand sides.  We should both offer the in-place (overwrite)
interface and an interface that first copies the input vector to the
output vector before applying the in-place algorithm.

* Routines that use the conjugate of all the matrix entries, for
  conjugate transpose.  

* Wouldn't it be nice if we could write kernels in a Python-like
  pseudocode, and generate C++ code from them?  (We could use Python's
  ast module for that.)

