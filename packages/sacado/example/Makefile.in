# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#                           Sacado Package
#                 Copyright (2006) Sandia Corporation
# 
# Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
# the U.S. Government retains certain rights in this software.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact David M. Gay (dmgay@sandia.gov) or Eric T. Phipps
# (etphipp@sandia.gov).
# 
# ************************************************************************
# @HEADER

# @HEADER
# ************************************************************************
# 
#                           Sacado Package
#                 Copyright (2006) Sandia Corporation
# 
# Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
# the U.S. Government retains certain rights in this software.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact David M. Gay (dmgay@sandia.gov) or Eric T. Phipps
# (etphipp@sandia.gov).
# 
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# FEApp Sources
# ------------------------------------------------------------------------

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
noinst_PROGRAMS = ad_example$(EXEEXT) dfad_example$(EXEEXT) \
	$(am__EXEEXT_1) sfad_example$(EXEEXT) dmfad_example$(EXEEXT) \
	trad_example$(EXEEXT) tradvec_example$(EXEEXT) \
	trad_dfad_example$(EXEEXT) taylor_example$(EXEEXT) \
	dfad_taylor_example$(EXEEXT) dfad_sfc_example$(EXEEXT) \
	trad_sfc_example$(EXEEXT) $(am__EXEEXT_2) \
	sparse_example$(EXEEXT) $(am__EXEEXT_3)
DIST_COMMON = $(srcdir)/FEApp/MakefileFEAppStub.am \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
subdir = example
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/ac_arg_with_execlincludedir.m4 \
	$(top_srcdir)/config/ac_cxx_stdccbug.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub_check.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libs.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/Sacado_config.h
CONFIG_CLEAN_FILES =
@BUILD_NESTED_FAD_TRUE@am__EXEEXT_1 = dfad_dfad_example$(EXEEXT)
@ENABLE_SACADO_STOKHOS_TRUE@am__EXEEXT_2 = pce_example$(EXEEXT)
@ENABLE_SACADO_TEUCHOS_TRUE@am__EXEEXT_3 = blas_example$(EXEEXT) \
@ENABLE_SACADO_TEUCHOS_TRUE@	vector_blas_example$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_ad_example_OBJECTS = ad_example-ad_example.$(OBJEXT)
ad_example_OBJECTS = $(am_ad_example_OBJECTS)
am__DEPENDENCIES_1 =
ad_example_LINK = $(CXXLD) $(ad_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_blas_example_OBJECTS = blas_example-blas_example.$(OBJEXT)
blas_example_OBJECTS = $(am_blas_example_OBJECTS)
blas_example_LINK = $(CXXLD) $(blas_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfad_dfad_example_OBJECTS =  \
	dfad_dfad_example-dfad_dfad_example.$(OBJEXT)
dfad_dfad_example_OBJECTS = $(am_dfad_dfad_example_OBJECTS)
dfad_dfad_example_LINK = $(CXXLD) $(dfad_dfad_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfad_example_OBJECTS = dfad_example-dfad_example.$(OBJEXT)
dfad_example_OBJECTS = $(am_dfad_example_OBJECTS)
dfad_example_LINK = $(CXXLD) $(dfad_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfad_sfc_example_OBJECTS =  \
	dfad_sfc_example-dfad_sfc_example.$(OBJEXT)
dfad_sfc_example_OBJECTS = $(am_dfad_sfc_example_OBJECTS)
dfad_sfc_example_LINK = $(CXXLD) $(dfad_sfc_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfad_taylor_example_OBJECTS =  \
	dfad_taylor_example-dfad_taylor_example.$(OBJEXT)
dfad_taylor_example_OBJECTS = $(am_dfad_taylor_example_OBJECTS)
dfad_taylor_example_LINK = $(CXXLD) $(dfad_taylor_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dmfad_example_OBJECTS = dmfad_example-dmfad_example.$(OBJEXT)
dmfad_example_OBJECTS = $(am_dmfad_example_OBJECTS)
dmfad_example_LINK = $(CXXLD) $(dmfad_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_pce_example_OBJECTS = pce_example-pce_example.$(OBJEXT)
pce_example_OBJECTS = $(am_pce_example_OBJECTS)
pce_example_LINK = $(CXXLD) $(pce_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_sfad_example_OBJECTS = sfad_example-sfad_example.$(OBJEXT)
sfad_example_OBJECTS = $(am_sfad_example_OBJECTS)
sfad_example_LINK = $(CXXLD) $(sfad_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_sparse_example_OBJECTS = sparse_example-sparse_example.$(OBJEXT)
sparse_example_OBJECTS = $(am_sparse_example_OBJECTS)
sparse_example_LINK = $(CXXLD) $(sparse_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_taylor_example_OBJECTS = taylor_example-taylor_example.$(OBJEXT)
taylor_example_OBJECTS = $(am_taylor_example_OBJECTS)
taylor_example_LINK = $(CXXLD) $(taylor_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_trad_dfad_example_OBJECTS =  \
	trad_dfad_example-trad_dfad_example.$(OBJEXT)
trad_dfad_example_OBJECTS = $(am_trad_dfad_example_OBJECTS)
trad_dfad_example_LINK = $(CXXLD) $(trad_dfad_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_trad_example_OBJECTS = trad_example-trad_example.$(OBJEXT)
trad_example_OBJECTS = $(am_trad_example_OBJECTS)
trad_example_LDADD = $(LDADD)
trad_example_LINK = $(CXXLD) $(trad_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_trad_sfc_example_OBJECTS =  \
	trad_sfc_example-trad_sfc_example.$(OBJEXT)
trad_sfc_example_OBJECTS = $(am_trad_sfc_example_OBJECTS)
trad_sfc_example_LINK = $(CXXLD) $(trad_sfc_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tradvec_example_OBJECTS =  \
	tradvec_example-tradvec_example.$(OBJEXT)
tradvec_example_OBJECTS = $(am_tradvec_example_OBJECTS)
tradvec_example_LDADD = $(LDADD)
tradvec_example_LINK = $(CXXLD) $(tradvec_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_vector_blas_example_OBJECTS =  \
	vector_blas_example-vector_blas_example.$(OBJEXT)
vector_blas_example_OBJECTS = $(am_vector_blas_example_OBJECTS)
vector_blas_example_LINK = $(CXXLD) $(vector_blas_example_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(ad_example_SOURCES) $(blas_example_SOURCES) \
	$(dfad_dfad_example_SOURCES) $(dfad_example_SOURCES) \
	$(dfad_sfc_example_SOURCES) $(dfad_taylor_example_SOURCES) \
	$(dmfad_example_SOURCES) $(pce_example_SOURCES) \
	$(sfad_example_SOURCES) $(sparse_example_SOURCES) \
	$(taylor_example_SOURCES) $(trad_dfad_example_SOURCES) \
	$(trad_example_SOURCES) $(trad_sfc_example_SOURCES) \
	$(tradvec_example_SOURCES) $(vector_blas_example_SOURCES)
DIST_SOURCES = $(ad_example_SOURCES) $(blas_example_SOURCES) \
	$(dfad_dfad_example_SOURCES) $(dfad_example_SOURCES) \
	$(dfad_sfc_example_SOURCES) $(dfad_taylor_example_SOURCES) \
	$(dmfad_example_SOURCES) $(pce_example_SOURCES) \
	$(sfad_example_SOURCES) $(sparse_example_SOURCES) \
	$(taylor_example_SOURCES) $(trad_dfad_example_SOURCES) \
	$(trad_example_SOURCES) $(trad_sfc_example_SOURCES) \
	$(tradvec_example_SOURCES) $(vector_blas_example_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADOLC_INCDIR = @ADOLC_INCDIR@
ADOLC_LIBDIR = @ADOLC_LIBDIR@
ADOLC_LIBS = @ADOLC_LIBS@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = .exe
GREP = @GREP@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
execincludedir = @execincludedir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@BUILD_NESTED_FAD_FALSE@FADFAD_EXAMPLES = 
@BUILD_NESTED_FAD_TRUE@FADFAD_EXAMPLES = dfad_dfad_example
@ENABLE_SACADO_TEUCHOS_FALSE@BLAS_EXAMPLES = 
@ENABLE_SACADO_TEUCHOS_TRUE@BLAS_EXAMPLES = blas_example vector_blas_example
@ENABLE_SACADO_STOKHOS_FALSE@PCE_EXAMPLES = 
@ENABLE_SACADO_STOKHOS_TRUE@PCE_EXAMPLES = pce_example
dfad_example_SOURCES = $(srcdir)/dfad_example.cpp
dfad_example_CXXFLAGS = $(SACADO_INCLUDES)
dfad_example_DEPENDENCIES = $(top_builddir)/src/libsacado.a
dfad_example_LDADD = $(SACADO_LIBS)
ad_example_SOURCES = $(srcdir)/ad_example.cpp
ad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
ad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
ad_example_LDADD = $(dfad_example_LDADD)
dfad_dfad_example_SOURCES = $(srcdir)/dfad_dfad_example.cpp
dfad_dfad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
dfad_dfad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
dfad_dfad_example_LDADD = $(dfad_example_LDADD)
sfad_example_SOURCES = $(srcdir)/sfad_example.cpp
sfad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
sfad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
sfad_example_LDADD = $(dfad_example_LDADD)
dmfad_example_SOURCES = $(srcdir)/dmfad_example.cpp
dmfad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
dmfad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
dmfad_example_LDADD = $(dfad_example_LDADD)
trad_example_SOURCES = $(srcdir)/trad_example.cpp
trad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
#trad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
#trad_example_LDADD = $(dfad_example_LDADD)
tradvec_example_SOURCES = $(srcdir)/tradvec_example.cpp
tradvec_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
#tradvec_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
#tradvec_example_LDADD = $(dfad_example_LDADD)
trad_dfad_example_SOURCES = $(srcdir)/trad_dfad_example.cpp
trad_dfad_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
trad_dfad_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
trad_dfad_example_LDADD = $(dfad_example_LDADD)
taylor_example_SOURCES = $(srcdir)/taylor_example.cpp
taylor_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
taylor_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
taylor_example_LDADD = $(dfad_example_LDADD)
dfad_taylor_example_SOURCES = $(srcdir)/dfad_taylor_example.cpp
dfad_taylor_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
dfad_taylor_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
dfad_taylor_example_LDADD = $(dfad_example_LDADD)
dfad_sfc_example_SOURCES = $(srcdir)/dfad_sfc_example.cpp
dfad_sfc_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
dfad_sfc_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
dfad_sfc_example_LDADD = $(dfad_example_LDADD)
trad_sfc_example_SOURCES = $(srcdir)/trad_sfc_example.cpp
trad_sfc_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
trad_sfc_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
trad_sfc_example_LDADD = $(dfad_example_LDADD)
pce_example_SOURCES = $(srcdir)/pce_example.cpp
pce_example_CXXFLAGS = $(dfad_example_CXXFLAGS) -I$(top_srcdir)/src/pce
pce_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
pce_example_LDADD = $(dfad_example_LDADD)
sparse_example_SOURCES = $(srcdir)/sparse_example.cpp
sparse_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
sparse_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
sparse_example_LDADD = $(dfad_example_LDADD)
blas_example_SOURCES = $(srcdir)/blas_example.cpp
blas_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
blas_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
blas_example_LDADD = $(dfad_example_LDADD)
vector_blas_example_SOURCES = $(srcdir)/vector_blas_example.cpp
vector_blas_example_CXXFLAGS = $(dfad_example_CXXFLAGS)
vector_blas_example_DEPENDENCIES = $(dfad_example_DEPENDENCIES)
vector_blas_example_LDADD = $(dfad_example_LDADD)
FEAPP_PATH = $(top_srcdir)/../sacado/example/FEApp
ELEMENT_H = \
	$(FEAPP_PATH)/FEApp_AbstractElement.hpp \
	$(FEAPP_PATH)/FEApp_LinearElement.hpp \
	$(FEAPP_PATH)/FEApp_ElementFactory.hpp

ELEMENT = \
	$(FEAPP_PATH)/FEApp_LinearElement.cpp \
	$(FEAPP_PATH)/FEApp_ElementFactory.cpp

QUADRATURE_H = \
	$(FEAPP_PATH)/FEApp_AbstractQuadrature.hpp \
	$(FEAPP_PATH)/FEApp_GaussianQuadrature2.hpp \
	$(FEAPP_PATH)/FEApp_QuadratureFactory.hpp

QUADRATURE = \
	$(FEAPP_PATH)/FEApp_GaussianQuadrature2.cpp \
	$(FEAPP_PATH)/FEApp_QuadratureFactory.cpp

SOURCE_H = \
	$(FEAPP_PATH)/FEApp_AbstractSourceFunction.hpp \
	$(FEAPP_PATH)/FEApp_QuadraticSourceFunction.hpp \
	$(FEAPP_PATH)/FEApp_CubicSourceFunction.hpp \
	$(FEAPP_PATH)/FEApp_ExponentialSourceFunction.hpp \
	$(FEAPP_PATH)/FEApp_MultiVariateExponentialSourceFunction.hpp \
	$(FEAPP_PATH)/FEApp_SourceFunctionFactory.hpp \
	$(FEAPP_PATH)/FEApp_SourceFunctionFactoryImpl.hpp

SOURCE = \
	$(FEAPP_PATH)/FEApp_SourceFunctionFactory.cpp

FUNC_H = \
	$(FEAPP_PATH)/FEApp_AbstractFunction.hpp \
	$(FEAPP_PATH)/FEApp_ConstantFunction.hpp \
	$(FEAPP_PATH)/FEApp_FunctionFactory.hpp \
	$(FEAPP_PATH)/FEApp_FunctionFactoryImpl.hpp

FUNC = \
	$(FEAPP_PATH)/FEApp_FunctionFactory.cpp

PDE_H = \
	$(FEAPP_PATH)/FEApp_AbstractPDE_NTBase.hpp \
	$(FEAPP_PATH)/FEApp_AbstractPDE.hpp \
	$(FEAPP_PATH)/FEApp_HeatNonlinearSourcePDE.hpp \
	$(FEAPP_PATH)/FEApp_HeatNonlinearSourcePDEImpl.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorPDE.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorPDEImpl.hpp

PDE = \
	$(FEAPP_PATH)/FEApp_HeatNonlinearSourcePDE.cpp \
	$(FEAPP_PATH)/FEApp_BrusselatorPDE.cpp

BC_H = \
	$(FEAPP_PATH)/FEApp_AbstractNodeBCStrategy_NTBase.hpp \
	$(FEAPP_PATH)/FEApp_AbstractNodeBCStrategy.hpp \
	$(FEAPP_PATH)/FEApp_NodeBC.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorNodeBCStrategy.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorNodeBCStrategyImpl.hpp \
	$(FEAPP_PATH)/FEApp_ConstantNodeBCStrategy.hpp \
	$(FEAPP_PATH)/FEApp_ConstantNodeBCStrategyImpl.hpp

BC = \
	$(FEAPP_PATH)/FEApp_BrusselatorNodeBCStrategy.cpp \
	$(FEAPP_PATH)/FEApp_ConstantNodeBCStrategy.cpp

PROBLEM_H = \
	$(FEAPP_PATH)/FEApp_TemplateTypes.hpp \
	$(FEAPP_PATH)/FEApp_AbstractProblem.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorProblem.hpp \
	$(FEAPP_PATH)/FEApp_HeatNonlinearSourceProblem.hpp \
	$(FEAPP_PATH)/FEApp_ProblemFactory.hpp \
	$(FEAPP_PATH)/FEApp_BrusselatorParameters.hpp

PROBLEM = \
	$(FEAPP_PATH)/FEApp_BrusselatorProblem.cpp \
	$(FEAPP_PATH)/FEApp_HeatNonlinearSourceProblem.cpp \
	$(FEAPP_PATH)/FEApp_ProblemFactory.cpp

RESPONSE_H = \
	$(FEAPP_PATH)/FEApp_AbstractResponseFunction.hpp \
	$(FEAPP_PATH)/FEApp_BoundaryFlux1DResponseFunction.hpp \
	$(FEAPP_PATH)/FEApp_SolutionAverageResponseFunction.hpp \
	$(FEAPP_PATH)/FEApp_SolutionTwoNormResponseFunction.hpp

RESPONSE = \
	$(FEAPP_PATH)/FEApp_BoundaryFlux1DResponseFunction.cpp \
	$(FEAPP_PATH)/FEApp_SolutionAverageResponseFunction.cpp \
	$(FEAPP_PATH)/FEApp_SolutionTwoNormResponseFunction.cpp

MESH_H = \
	$(FEAPP_PATH)/FEApp_Mesh.hpp

MESH = \
	$(FEAPP_PATH)/FEApp_Mesh.cpp

FILL_H = \
	$(FEAPP_PATH)/FEApp_AbstractInitPostOp.hpp \
	$(FEAPP_PATH)/FEApp_InitPostOps.hpp \
	$(FEAPP_PATH)/FEApp_GlobalFill.hpp \
	$(FEAPP_PATH)/FEApp_GlobalFillImpl.hpp \
	$(FEAPP_PATH)/FEApp_SGGaussQuadResidualGlobalFill.hpp \
	$(FEAPP_PATH)/FEApp_SGGaussQuadJacobianGlobalFill.hpp

FILL = \
	$(FEAPP_PATH)/FEApp_InitPostOps.cpp \
	$(FEAPP_PATH)/FEApp_GlobalFill.cpp \
	$(FEAPP_PATH)/FEApp_SGGaussQuadResidualGlobalFill.cpp \
	$(FEAPP_PATH)/FEApp_SGGaussQuadJacobianGlobalFill.cpp

DISC_H = \
	$(FEAPP_PATH)/FEApp_AbstractDiscretization.hpp \
	$(FEAPP_PATH)/FEApp_CZeroDiscretization.hpp \
	$(FEAPP_PATH)/FEApp_DiscretizationFactory.hpp

DISC = \
	$(FEAPP_PATH)/FEApp_CZeroDiscretization.cpp \
	$(FEAPP_PATH)/FEApp_DiscretizationFactory.cpp

APP_H = \
	$(FEAPP_PATH)/FEApp_Application.hpp \
	$(FEAPP_PATH)/FEApp_ModelEvaluator.hpp 

APP = \
	$(FEAPP_PATH)/FEApp_Application.cpp \
	$(FEAPP_PATH)/FEApp_ModelEvaluator.cpp 

FEAPP_H = \
	$(ELEMENT_H) \
	$(QUADRATURE_H) \
	$(FUNC_H) \
	$(SOURCE_H) \
	$(PDE_H) \
	$(BC_H) \
	$(PROBLEM_H) \
	$(RESPONSE_H) \
	$(MESH_H) \
	$(FILL_H) \
	$(DISC_H) \
	$(APP_H)

FEAPP = \
	$(ELEMENT) \
	$(QUADRATURE) \
	$(FUNC) \
	$(SOURCE) \
	$(PDE) \
	$(BC) \
	$(PROBLEM) \
	$(RESPONSE) \
	$(MESH) \
	$(FILL) \
	$(DISC) \
	$(APP)

EXTRA_DIST = $(FEAPP_H) $(FEAPP)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/FEApp/MakefileFEAppStub.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  example/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  example/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
ad_example$(EXEEXT): $(ad_example_OBJECTS) $(ad_example_DEPENDENCIES) 
	@rm -f ad_example$(EXEEXT)
	$(ad_example_LINK) $(ad_example_OBJECTS) $(ad_example_LDADD) $(LIBS)
blas_example$(EXEEXT): $(blas_example_OBJECTS) $(blas_example_DEPENDENCIES) 
	@rm -f blas_example$(EXEEXT)
	$(blas_example_LINK) $(blas_example_OBJECTS) $(blas_example_LDADD) $(LIBS)
dfad_dfad_example$(EXEEXT): $(dfad_dfad_example_OBJECTS) $(dfad_dfad_example_DEPENDENCIES) 
	@rm -f dfad_dfad_example$(EXEEXT)
	$(dfad_dfad_example_LINK) $(dfad_dfad_example_OBJECTS) $(dfad_dfad_example_LDADD) $(LIBS)
dfad_example$(EXEEXT): $(dfad_example_OBJECTS) $(dfad_example_DEPENDENCIES) 
	@rm -f dfad_example$(EXEEXT)
	$(dfad_example_LINK) $(dfad_example_OBJECTS) $(dfad_example_LDADD) $(LIBS)
dfad_sfc_example$(EXEEXT): $(dfad_sfc_example_OBJECTS) $(dfad_sfc_example_DEPENDENCIES) 
	@rm -f dfad_sfc_example$(EXEEXT)
	$(dfad_sfc_example_LINK) $(dfad_sfc_example_OBJECTS) $(dfad_sfc_example_LDADD) $(LIBS)
dfad_taylor_example$(EXEEXT): $(dfad_taylor_example_OBJECTS) $(dfad_taylor_example_DEPENDENCIES) 
	@rm -f dfad_taylor_example$(EXEEXT)
	$(dfad_taylor_example_LINK) $(dfad_taylor_example_OBJECTS) $(dfad_taylor_example_LDADD) $(LIBS)
dmfad_example$(EXEEXT): $(dmfad_example_OBJECTS) $(dmfad_example_DEPENDENCIES) 
	@rm -f dmfad_example$(EXEEXT)
	$(dmfad_example_LINK) $(dmfad_example_OBJECTS) $(dmfad_example_LDADD) $(LIBS)
pce_example$(EXEEXT): $(pce_example_OBJECTS) $(pce_example_DEPENDENCIES) 
	@rm -f pce_example$(EXEEXT)
	$(pce_example_LINK) $(pce_example_OBJECTS) $(pce_example_LDADD) $(LIBS)
sfad_example$(EXEEXT): $(sfad_example_OBJECTS) $(sfad_example_DEPENDENCIES) 
	@rm -f sfad_example$(EXEEXT)
	$(sfad_example_LINK) $(sfad_example_OBJECTS) $(sfad_example_LDADD) $(LIBS)
sparse_example$(EXEEXT): $(sparse_example_OBJECTS) $(sparse_example_DEPENDENCIES) 
	@rm -f sparse_example$(EXEEXT)
	$(sparse_example_LINK) $(sparse_example_OBJECTS) $(sparse_example_LDADD) $(LIBS)
taylor_example$(EXEEXT): $(taylor_example_OBJECTS) $(taylor_example_DEPENDENCIES) 
	@rm -f taylor_example$(EXEEXT)
	$(taylor_example_LINK) $(taylor_example_OBJECTS) $(taylor_example_LDADD) $(LIBS)
trad_dfad_example$(EXEEXT): $(trad_dfad_example_OBJECTS) $(trad_dfad_example_DEPENDENCIES) 
	@rm -f trad_dfad_example$(EXEEXT)
	$(trad_dfad_example_LINK) $(trad_dfad_example_OBJECTS) $(trad_dfad_example_LDADD) $(LIBS)
trad_example$(EXEEXT): $(trad_example_OBJECTS) $(trad_example_DEPENDENCIES) 
	@rm -f trad_example$(EXEEXT)
	$(trad_example_LINK) $(trad_example_OBJECTS) $(trad_example_LDADD) $(LIBS)
trad_sfc_example$(EXEEXT): $(trad_sfc_example_OBJECTS) $(trad_sfc_example_DEPENDENCIES) 
	@rm -f trad_sfc_example$(EXEEXT)
	$(trad_sfc_example_LINK) $(trad_sfc_example_OBJECTS) $(trad_sfc_example_LDADD) $(LIBS)
tradvec_example$(EXEEXT): $(tradvec_example_OBJECTS) $(tradvec_example_DEPENDENCIES) 
	@rm -f tradvec_example$(EXEEXT)
	$(tradvec_example_LINK) $(tradvec_example_OBJECTS) $(tradvec_example_LDADD) $(LIBS)
vector_blas_example$(EXEEXT): $(vector_blas_example_OBJECTS) $(vector_blas_example_DEPENDENCIES) 
	@rm -f vector_blas_example$(EXEEXT)
	$(vector_blas_example_LINK) $(vector_blas_example_OBJECTS) $(vector_blas_example_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ad_example-ad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blas_example-blas_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dfad_example-dfad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dmfad_example-dmfad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pce_example-pce_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfad_example-sfad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sparse_example-sparse_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taylor_example-taylor_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trad_dfad_example-trad_dfad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trad_example-trad_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trad_sfc_example-trad_sfc_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tradvec_example-tradvec_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector_blas_example-vector_blas_example.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ad_example-ad_example.o: $(srcdir)/ad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ad_example_CXXFLAGS) $(CXXFLAGS) -MT ad_example-ad_example.o -MD -MP -MF $(DEPDIR)/ad_example-ad_example.Tpo -c -o ad_example-ad_example.o `test -f '$(srcdir)/ad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/ad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ad_example-ad_example.Tpo $(DEPDIR)/ad_example-ad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/ad_example.cpp' object='ad_example-ad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ad_example_CXXFLAGS) $(CXXFLAGS) -c -o ad_example-ad_example.o `test -f '$(srcdir)/ad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/ad_example.cpp

ad_example-ad_example.obj: $(srcdir)/ad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ad_example_CXXFLAGS) $(CXXFLAGS) -MT ad_example-ad_example.obj -MD -MP -MF $(DEPDIR)/ad_example-ad_example.Tpo -c -o ad_example-ad_example.obj `if test -f '$(srcdir)/ad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/ad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/ad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ad_example-ad_example.Tpo $(DEPDIR)/ad_example-ad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/ad_example.cpp' object='ad_example-ad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ad_example_CXXFLAGS) $(CXXFLAGS) -c -o ad_example-ad_example.obj `if test -f '$(srcdir)/ad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/ad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/ad_example.cpp'; fi`

blas_example-blas_example.o: $(srcdir)/blas_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(blas_example_CXXFLAGS) $(CXXFLAGS) -MT blas_example-blas_example.o -MD -MP -MF $(DEPDIR)/blas_example-blas_example.Tpo -c -o blas_example-blas_example.o `test -f '$(srcdir)/blas_example.cpp' || echo '$(srcdir)/'`$(srcdir)/blas_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blas_example-blas_example.Tpo $(DEPDIR)/blas_example-blas_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/blas_example.cpp' object='blas_example-blas_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(blas_example_CXXFLAGS) $(CXXFLAGS) -c -o blas_example-blas_example.o `test -f '$(srcdir)/blas_example.cpp' || echo '$(srcdir)/'`$(srcdir)/blas_example.cpp

blas_example-blas_example.obj: $(srcdir)/blas_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(blas_example_CXXFLAGS) $(CXXFLAGS) -MT blas_example-blas_example.obj -MD -MP -MF $(DEPDIR)/blas_example-blas_example.Tpo -c -o blas_example-blas_example.obj `if test -f '$(srcdir)/blas_example.cpp'; then $(CYGPATH_W) '$(srcdir)/blas_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/blas_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blas_example-blas_example.Tpo $(DEPDIR)/blas_example-blas_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/blas_example.cpp' object='blas_example-blas_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(blas_example_CXXFLAGS) $(CXXFLAGS) -c -o blas_example-blas_example.obj `if test -f '$(srcdir)/blas_example.cpp'; then $(CYGPATH_W) '$(srcdir)/blas_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/blas_example.cpp'; fi`

dfad_dfad_example-dfad_dfad_example.o: $(srcdir)/dfad_dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_dfad_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_dfad_example-dfad_dfad_example.o -MD -MP -MF $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Tpo -c -o dfad_dfad_example-dfad_dfad_example.o `test -f '$(srcdir)/dfad_dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_dfad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Tpo $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_dfad_example.cpp' object='dfad_dfad_example-dfad_dfad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_dfad_example-dfad_dfad_example.o `test -f '$(srcdir)/dfad_dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_dfad_example.cpp

dfad_dfad_example-dfad_dfad_example.obj: $(srcdir)/dfad_dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_dfad_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_dfad_example-dfad_dfad_example.obj -MD -MP -MF $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Tpo -c -o dfad_dfad_example-dfad_dfad_example.obj `if test -f '$(srcdir)/dfad_dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_dfad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Tpo $(DEPDIR)/dfad_dfad_example-dfad_dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_dfad_example.cpp' object='dfad_dfad_example-dfad_dfad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_dfad_example-dfad_dfad_example.obj `if test -f '$(srcdir)/dfad_dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_dfad_example.cpp'; fi`

dfad_example-dfad_example.o: $(srcdir)/dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_example-dfad_example.o -MD -MP -MF $(DEPDIR)/dfad_example-dfad_example.Tpo -c -o dfad_example-dfad_example.o `test -f '$(srcdir)/dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_example-dfad_example.Tpo $(DEPDIR)/dfad_example-dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_example.cpp' object='dfad_example-dfad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_example-dfad_example.o `test -f '$(srcdir)/dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_example.cpp

dfad_example-dfad_example.obj: $(srcdir)/dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_example-dfad_example.obj -MD -MP -MF $(DEPDIR)/dfad_example-dfad_example.Tpo -c -o dfad_example-dfad_example.obj `if test -f '$(srcdir)/dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_example-dfad_example.Tpo $(DEPDIR)/dfad_example-dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_example.cpp' object='dfad_example-dfad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_example-dfad_example.obj `if test -f '$(srcdir)/dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_example.cpp'; fi`

dfad_sfc_example-dfad_sfc_example.o: $(srcdir)/dfad_sfc_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_sfc_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_sfc_example-dfad_sfc_example.o -MD -MP -MF $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Tpo -c -o dfad_sfc_example-dfad_sfc_example.o `test -f '$(srcdir)/dfad_sfc_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_sfc_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Tpo $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_sfc_example.cpp' object='dfad_sfc_example-dfad_sfc_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_sfc_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_sfc_example-dfad_sfc_example.o `test -f '$(srcdir)/dfad_sfc_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_sfc_example.cpp

dfad_sfc_example-dfad_sfc_example.obj: $(srcdir)/dfad_sfc_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_sfc_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_sfc_example-dfad_sfc_example.obj -MD -MP -MF $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Tpo -c -o dfad_sfc_example-dfad_sfc_example.obj `if test -f '$(srcdir)/dfad_sfc_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_sfc_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_sfc_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Tpo $(DEPDIR)/dfad_sfc_example-dfad_sfc_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_sfc_example.cpp' object='dfad_sfc_example-dfad_sfc_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_sfc_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_sfc_example-dfad_sfc_example.obj `if test -f '$(srcdir)/dfad_sfc_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_sfc_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_sfc_example.cpp'; fi`

dfad_taylor_example-dfad_taylor_example.o: $(srcdir)/dfad_taylor_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_taylor_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_taylor_example-dfad_taylor_example.o -MD -MP -MF $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Tpo -c -o dfad_taylor_example-dfad_taylor_example.o `test -f '$(srcdir)/dfad_taylor_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_taylor_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Tpo $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_taylor_example.cpp' object='dfad_taylor_example-dfad_taylor_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_taylor_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_taylor_example-dfad_taylor_example.o `test -f '$(srcdir)/dfad_taylor_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dfad_taylor_example.cpp

dfad_taylor_example-dfad_taylor_example.obj: $(srcdir)/dfad_taylor_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_taylor_example_CXXFLAGS) $(CXXFLAGS) -MT dfad_taylor_example-dfad_taylor_example.obj -MD -MP -MF $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Tpo -c -o dfad_taylor_example-dfad_taylor_example.obj `if test -f '$(srcdir)/dfad_taylor_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_taylor_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_taylor_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Tpo $(DEPDIR)/dfad_taylor_example-dfad_taylor_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dfad_taylor_example.cpp' object='dfad_taylor_example-dfad_taylor_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfad_taylor_example_CXXFLAGS) $(CXXFLAGS) -c -o dfad_taylor_example-dfad_taylor_example.obj `if test -f '$(srcdir)/dfad_taylor_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dfad_taylor_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dfad_taylor_example.cpp'; fi`

dmfad_example-dmfad_example.o: $(srcdir)/dmfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dmfad_example_CXXFLAGS) $(CXXFLAGS) -MT dmfad_example-dmfad_example.o -MD -MP -MF $(DEPDIR)/dmfad_example-dmfad_example.Tpo -c -o dmfad_example-dmfad_example.o `test -f '$(srcdir)/dmfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dmfad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dmfad_example-dmfad_example.Tpo $(DEPDIR)/dmfad_example-dmfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dmfad_example.cpp' object='dmfad_example-dmfad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dmfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dmfad_example-dmfad_example.o `test -f '$(srcdir)/dmfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/dmfad_example.cpp

dmfad_example-dmfad_example.obj: $(srcdir)/dmfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dmfad_example_CXXFLAGS) $(CXXFLAGS) -MT dmfad_example-dmfad_example.obj -MD -MP -MF $(DEPDIR)/dmfad_example-dmfad_example.Tpo -c -o dmfad_example-dmfad_example.obj `if test -f '$(srcdir)/dmfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dmfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dmfad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dmfad_example-dmfad_example.Tpo $(DEPDIR)/dmfad_example-dmfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/dmfad_example.cpp' object='dmfad_example-dmfad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dmfad_example_CXXFLAGS) $(CXXFLAGS) -c -o dmfad_example-dmfad_example.obj `if test -f '$(srcdir)/dmfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/dmfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/dmfad_example.cpp'; fi`

pce_example-pce_example.o: $(srcdir)/pce_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pce_example_CXXFLAGS) $(CXXFLAGS) -MT pce_example-pce_example.o -MD -MP -MF $(DEPDIR)/pce_example-pce_example.Tpo -c -o pce_example-pce_example.o `test -f '$(srcdir)/pce_example.cpp' || echo '$(srcdir)/'`$(srcdir)/pce_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pce_example-pce_example.Tpo $(DEPDIR)/pce_example-pce_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/pce_example.cpp' object='pce_example-pce_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pce_example_CXXFLAGS) $(CXXFLAGS) -c -o pce_example-pce_example.o `test -f '$(srcdir)/pce_example.cpp' || echo '$(srcdir)/'`$(srcdir)/pce_example.cpp

pce_example-pce_example.obj: $(srcdir)/pce_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pce_example_CXXFLAGS) $(CXXFLAGS) -MT pce_example-pce_example.obj -MD -MP -MF $(DEPDIR)/pce_example-pce_example.Tpo -c -o pce_example-pce_example.obj `if test -f '$(srcdir)/pce_example.cpp'; then $(CYGPATH_W) '$(srcdir)/pce_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/pce_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pce_example-pce_example.Tpo $(DEPDIR)/pce_example-pce_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/pce_example.cpp' object='pce_example-pce_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pce_example_CXXFLAGS) $(CXXFLAGS) -c -o pce_example-pce_example.obj `if test -f '$(srcdir)/pce_example.cpp'; then $(CYGPATH_W) '$(srcdir)/pce_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/pce_example.cpp'; fi`

sfad_example-sfad_example.o: $(srcdir)/sfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfad_example_CXXFLAGS) $(CXXFLAGS) -MT sfad_example-sfad_example.o -MD -MP -MF $(DEPDIR)/sfad_example-sfad_example.Tpo -c -o sfad_example-sfad_example.o `test -f '$(srcdir)/sfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/sfad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfad_example-sfad_example.Tpo $(DEPDIR)/sfad_example-sfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/sfad_example.cpp' object='sfad_example-sfad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfad_example_CXXFLAGS) $(CXXFLAGS) -c -o sfad_example-sfad_example.o `test -f '$(srcdir)/sfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/sfad_example.cpp

sfad_example-sfad_example.obj: $(srcdir)/sfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfad_example_CXXFLAGS) $(CXXFLAGS) -MT sfad_example-sfad_example.obj -MD -MP -MF $(DEPDIR)/sfad_example-sfad_example.Tpo -c -o sfad_example-sfad_example.obj `if test -f '$(srcdir)/sfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/sfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/sfad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sfad_example-sfad_example.Tpo $(DEPDIR)/sfad_example-sfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/sfad_example.cpp' object='sfad_example-sfad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfad_example_CXXFLAGS) $(CXXFLAGS) -c -o sfad_example-sfad_example.obj `if test -f '$(srcdir)/sfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/sfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/sfad_example.cpp'; fi`

sparse_example-sparse_example.o: $(srcdir)/sparse_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sparse_example_CXXFLAGS) $(CXXFLAGS) -MT sparse_example-sparse_example.o -MD -MP -MF $(DEPDIR)/sparse_example-sparse_example.Tpo -c -o sparse_example-sparse_example.o `test -f '$(srcdir)/sparse_example.cpp' || echo '$(srcdir)/'`$(srcdir)/sparse_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sparse_example-sparse_example.Tpo $(DEPDIR)/sparse_example-sparse_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/sparse_example.cpp' object='sparse_example-sparse_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sparse_example_CXXFLAGS) $(CXXFLAGS) -c -o sparse_example-sparse_example.o `test -f '$(srcdir)/sparse_example.cpp' || echo '$(srcdir)/'`$(srcdir)/sparse_example.cpp

sparse_example-sparse_example.obj: $(srcdir)/sparse_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sparse_example_CXXFLAGS) $(CXXFLAGS) -MT sparse_example-sparse_example.obj -MD -MP -MF $(DEPDIR)/sparse_example-sparse_example.Tpo -c -o sparse_example-sparse_example.obj `if test -f '$(srcdir)/sparse_example.cpp'; then $(CYGPATH_W) '$(srcdir)/sparse_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/sparse_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sparse_example-sparse_example.Tpo $(DEPDIR)/sparse_example-sparse_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/sparse_example.cpp' object='sparse_example-sparse_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sparse_example_CXXFLAGS) $(CXXFLAGS) -c -o sparse_example-sparse_example.obj `if test -f '$(srcdir)/sparse_example.cpp'; then $(CYGPATH_W) '$(srcdir)/sparse_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/sparse_example.cpp'; fi`

taylor_example-taylor_example.o: $(srcdir)/taylor_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(taylor_example_CXXFLAGS) $(CXXFLAGS) -MT taylor_example-taylor_example.o -MD -MP -MF $(DEPDIR)/taylor_example-taylor_example.Tpo -c -o taylor_example-taylor_example.o `test -f '$(srcdir)/taylor_example.cpp' || echo '$(srcdir)/'`$(srcdir)/taylor_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/taylor_example-taylor_example.Tpo $(DEPDIR)/taylor_example-taylor_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/taylor_example.cpp' object='taylor_example-taylor_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(taylor_example_CXXFLAGS) $(CXXFLAGS) -c -o taylor_example-taylor_example.o `test -f '$(srcdir)/taylor_example.cpp' || echo '$(srcdir)/'`$(srcdir)/taylor_example.cpp

taylor_example-taylor_example.obj: $(srcdir)/taylor_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(taylor_example_CXXFLAGS) $(CXXFLAGS) -MT taylor_example-taylor_example.obj -MD -MP -MF $(DEPDIR)/taylor_example-taylor_example.Tpo -c -o taylor_example-taylor_example.obj `if test -f '$(srcdir)/taylor_example.cpp'; then $(CYGPATH_W) '$(srcdir)/taylor_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/taylor_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/taylor_example-taylor_example.Tpo $(DEPDIR)/taylor_example-taylor_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/taylor_example.cpp' object='taylor_example-taylor_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(taylor_example_CXXFLAGS) $(CXXFLAGS) -c -o taylor_example-taylor_example.obj `if test -f '$(srcdir)/taylor_example.cpp'; then $(CYGPATH_W) '$(srcdir)/taylor_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/taylor_example.cpp'; fi`

trad_dfad_example-trad_dfad_example.o: $(srcdir)/trad_dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_dfad_example_CXXFLAGS) $(CXXFLAGS) -MT trad_dfad_example-trad_dfad_example.o -MD -MP -MF $(DEPDIR)/trad_dfad_example-trad_dfad_example.Tpo -c -o trad_dfad_example-trad_dfad_example.o `test -f '$(srcdir)/trad_dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_dfad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_dfad_example-trad_dfad_example.Tpo $(DEPDIR)/trad_dfad_example-trad_dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_dfad_example.cpp' object='trad_dfad_example-trad_dfad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_dfad_example-trad_dfad_example.o `test -f '$(srcdir)/trad_dfad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_dfad_example.cpp

trad_dfad_example-trad_dfad_example.obj: $(srcdir)/trad_dfad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_dfad_example_CXXFLAGS) $(CXXFLAGS) -MT trad_dfad_example-trad_dfad_example.obj -MD -MP -MF $(DEPDIR)/trad_dfad_example-trad_dfad_example.Tpo -c -o trad_dfad_example-trad_dfad_example.obj `if test -f '$(srcdir)/trad_dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_dfad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_dfad_example-trad_dfad_example.Tpo $(DEPDIR)/trad_dfad_example-trad_dfad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_dfad_example.cpp' object='trad_dfad_example-trad_dfad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_dfad_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_dfad_example-trad_dfad_example.obj `if test -f '$(srcdir)/trad_dfad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_dfad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_dfad_example.cpp'; fi`

trad_example-trad_example.o: $(srcdir)/trad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_example_CXXFLAGS) $(CXXFLAGS) -MT trad_example-trad_example.o -MD -MP -MF $(DEPDIR)/trad_example-trad_example.Tpo -c -o trad_example-trad_example.o `test -f '$(srcdir)/trad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_example-trad_example.Tpo $(DEPDIR)/trad_example-trad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_example.cpp' object='trad_example-trad_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_example-trad_example.o `test -f '$(srcdir)/trad_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_example.cpp

trad_example-trad_example.obj: $(srcdir)/trad_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_example_CXXFLAGS) $(CXXFLAGS) -MT trad_example-trad_example.obj -MD -MP -MF $(DEPDIR)/trad_example-trad_example.Tpo -c -o trad_example-trad_example.obj `if test -f '$(srcdir)/trad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_example-trad_example.Tpo $(DEPDIR)/trad_example-trad_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_example.cpp' object='trad_example-trad_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_example-trad_example.obj `if test -f '$(srcdir)/trad_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_example.cpp'; fi`

trad_sfc_example-trad_sfc_example.o: $(srcdir)/trad_sfc_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_sfc_example_CXXFLAGS) $(CXXFLAGS) -MT trad_sfc_example-trad_sfc_example.o -MD -MP -MF $(DEPDIR)/trad_sfc_example-trad_sfc_example.Tpo -c -o trad_sfc_example-trad_sfc_example.o `test -f '$(srcdir)/trad_sfc_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_sfc_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_sfc_example-trad_sfc_example.Tpo $(DEPDIR)/trad_sfc_example-trad_sfc_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_sfc_example.cpp' object='trad_sfc_example-trad_sfc_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_sfc_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_sfc_example-trad_sfc_example.o `test -f '$(srcdir)/trad_sfc_example.cpp' || echo '$(srcdir)/'`$(srcdir)/trad_sfc_example.cpp

trad_sfc_example-trad_sfc_example.obj: $(srcdir)/trad_sfc_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_sfc_example_CXXFLAGS) $(CXXFLAGS) -MT trad_sfc_example-trad_sfc_example.obj -MD -MP -MF $(DEPDIR)/trad_sfc_example-trad_sfc_example.Tpo -c -o trad_sfc_example-trad_sfc_example.obj `if test -f '$(srcdir)/trad_sfc_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_sfc_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_sfc_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trad_sfc_example-trad_sfc_example.Tpo $(DEPDIR)/trad_sfc_example-trad_sfc_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/trad_sfc_example.cpp' object='trad_sfc_example-trad_sfc_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trad_sfc_example_CXXFLAGS) $(CXXFLAGS) -c -o trad_sfc_example-trad_sfc_example.obj `if test -f '$(srcdir)/trad_sfc_example.cpp'; then $(CYGPATH_W) '$(srcdir)/trad_sfc_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/trad_sfc_example.cpp'; fi`

tradvec_example-tradvec_example.o: $(srcdir)/tradvec_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tradvec_example_CXXFLAGS) $(CXXFLAGS) -MT tradvec_example-tradvec_example.o -MD -MP -MF $(DEPDIR)/tradvec_example-tradvec_example.Tpo -c -o tradvec_example-tradvec_example.o `test -f '$(srcdir)/tradvec_example.cpp' || echo '$(srcdir)/'`$(srcdir)/tradvec_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/tradvec_example-tradvec_example.Tpo $(DEPDIR)/tradvec_example-tradvec_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/tradvec_example.cpp' object='tradvec_example-tradvec_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tradvec_example_CXXFLAGS) $(CXXFLAGS) -c -o tradvec_example-tradvec_example.o `test -f '$(srcdir)/tradvec_example.cpp' || echo '$(srcdir)/'`$(srcdir)/tradvec_example.cpp

tradvec_example-tradvec_example.obj: $(srcdir)/tradvec_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tradvec_example_CXXFLAGS) $(CXXFLAGS) -MT tradvec_example-tradvec_example.obj -MD -MP -MF $(DEPDIR)/tradvec_example-tradvec_example.Tpo -c -o tradvec_example-tradvec_example.obj `if test -f '$(srcdir)/tradvec_example.cpp'; then $(CYGPATH_W) '$(srcdir)/tradvec_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/tradvec_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/tradvec_example-tradvec_example.Tpo $(DEPDIR)/tradvec_example-tradvec_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/tradvec_example.cpp' object='tradvec_example-tradvec_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tradvec_example_CXXFLAGS) $(CXXFLAGS) -c -o tradvec_example-tradvec_example.obj `if test -f '$(srcdir)/tradvec_example.cpp'; then $(CYGPATH_W) '$(srcdir)/tradvec_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/tradvec_example.cpp'; fi`

vector_blas_example-vector_blas_example.o: $(srcdir)/vector_blas_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vector_blas_example_CXXFLAGS) $(CXXFLAGS) -MT vector_blas_example-vector_blas_example.o -MD -MP -MF $(DEPDIR)/vector_blas_example-vector_blas_example.Tpo -c -o vector_blas_example-vector_blas_example.o `test -f '$(srcdir)/vector_blas_example.cpp' || echo '$(srcdir)/'`$(srcdir)/vector_blas_example.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/vector_blas_example-vector_blas_example.Tpo $(DEPDIR)/vector_blas_example-vector_blas_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/vector_blas_example.cpp' object='vector_blas_example-vector_blas_example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vector_blas_example_CXXFLAGS) $(CXXFLAGS) -c -o vector_blas_example-vector_blas_example.o `test -f '$(srcdir)/vector_blas_example.cpp' || echo '$(srcdir)/'`$(srcdir)/vector_blas_example.cpp

vector_blas_example-vector_blas_example.obj: $(srcdir)/vector_blas_example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vector_blas_example_CXXFLAGS) $(CXXFLAGS) -MT vector_blas_example-vector_blas_example.obj -MD -MP -MF $(DEPDIR)/vector_blas_example-vector_blas_example.Tpo -c -o vector_blas_example-vector_blas_example.obj `if test -f '$(srcdir)/vector_blas_example.cpp'; then $(CYGPATH_W) '$(srcdir)/vector_blas_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/vector_blas_example.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/vector_blas_example-vector_blas_example.Tpo $(DEPDIR)/vector_blas_example-vector_blas_example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/vector_blas_example.cpp' object='vector_blas_example-vector_blas_example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vector_blas_example_CXXFLAGS) $(CXXFLAGS) -c -o vector_blas_example-vector_blas_example.obj `if test -f '$(srcdir)/vector_blas_example.cpp'; then $(CYGPATH_W) '$(srcdir)/vector_blas_example.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/vector_blas_example.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Include export Makefiles for correct paths
include $(top_builddir)/Makefile.export.sacado

all-local:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
