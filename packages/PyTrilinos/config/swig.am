## $Id$ 
## $Source$ 
# @HEADER
# ************************************************************************
# 
#            NOX: An Object-Oriented Nonlinear Solver Package
#                 Copyright (2002) Sandia Corporation
# 
#            LOCA: Library of Continuation Algorithms Package
#                 Copyright (2005) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# 
# Questions? Contact Roger Pawlowski (rppawlo@sandia.gov) or 
# Eric Phipps (etphipp@sandia.gov), Sandia National Laboratories.
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# Rules for building python interface files using swig.  Automatic 
# dependency tracking for swig interface files is implemented.
# ------------------------------------------------------------------------

# Dependencies.  Obtain the list of dependencies by executing ls.  This could
# be empty, so when we include the dependency files, we also include 'dummy',
# an empty file used to trick configure into making the dependency directory.
DEPFILES = $(shell ls $(DEPDIR)/*.Pi 2> /dev/null; ls $(DEPDIR)/dummy)
include $(DEPFILES)

# Clean target.  Put the generated dependency files in the list of files to
# be removed with a "make clean"
CLEANFILES = $(DEPDIR)/*.Pi

# Define the SWIGCOMPILE macro
SWIG_INC = -I$(top_srcdir)/doc/Doxygen `python $(top_builddir)/util/pkg_info.py -i $<`
SWIG_OPTS =
SWIG_OUTDIR = -outdir `python $(top_builddir)/util/pkg_info.py -o $<`
SWIGCOMPILE = $(SWIG) $(SWIG_PYTHON_OPT) $(SWIG_INC) $(SWIG_OPTS) $(SWIG_OUTDIR)

# Wrapper and proxy targets
%_wrap.cpp: $(srcdir)/%.i
	if $(SWIGCOMPILE) -MMD -MF "$(DEPDIR)/$*.Tpi" -o $@ $<; then mv -f "$(DEPDIR)/$*.Tpi" "$(DEPDIR)/$*.Pi"; else rm -f "$(DEPDIR)/$*.Tpi"; exit 1; fi
	sed 's/\(int\|bool\|double\) \(result\|c_result\|swig_val\);/\1 \2 = 0;/' $@ > $@.temp
	mv $@.temp $@

swigclean:
	rm -f $(srcdir)/*_wrap.cpp $(WRAPPERS) 
