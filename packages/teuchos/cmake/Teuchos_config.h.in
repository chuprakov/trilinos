/* $Header: */

/* Copy of the following file, edited to be used with CMake */
/* src/Teuchos_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define the Fortran name mangling to be used for the BLAS */
#define F77_BLAS_MANGLE@F77_BLAS_MANGLE@

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */
#cmakedefine F77_DUMMY_MAIN

/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#define F77_FUNC@F77_FUNC@

/* As F77_FUNC, but for C identifiers containing underscores. */
#define F77_FUNC_@F77_FUNC_@

/* Define if F77 and FC dummy `main' functions are identical. */
#cmakedefine FC_DUMMY_MAIN_EQ_F77

/* Define to 1 if you have the <algorithm> header file. */
#cmakedefine HAVE_ALGORITHM

/* Define if you have a BLAS library. */
#cmakedefine HAVE_BLAS

/* define if bool is a built-in type */
#cmakedefine HAVE_BOOL

/* Define to 1 if you have the <cassert> header file. */
#cmakedefine HAVE_CASSERT

/* Define to 1 if you have the <cerrno> header file. */
#cmakedefine HAVE_CERRNO

/* Define to 1 if you have the <climits> header file. */
#cmakedefine HAVE_CLIMITS

/* Define to 1 if you have the <cmath> header file. */
#cmakedefine HAVE_CMATH

/* Define to 1 if you have the <complex> header file. */
#cmakedefine HAVE_COMPLEX

/* Define to 1 if you have the <cstdarg> header file. */
#cmakedefine HAVE_CSTDARG

/* Define to 1 if you have the <cstdlib> header file. */
#cmakedefine HAVE_CSTDLIB

/* Define to 1 if you have the <cstring> header file. */
#cmakedefine HAVE_CSTRING

/* Define if want to build examples */
#cmakedefine HAVE_EXAMPLES

/* Define if you want to build export makefiles. */
#cmakedefine HAVE_EXPORT_MAKEFILES

/* Define to 1 if you have the <fpu_control.h> header file. */
#cmakedefine HAVE_FPU_CONTROL_H

/* define if the compiler supports abi::__cxa_demangle(...) */
#cmakedefine HAVE_GCC_ABI_DEMANGLE

/* Define if you are using gnumake - this will shorten your link lines. */
#cmakedefine HAVE_GNUMAKE

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the <iomanip> header file. */
#cmakedefine HAVE_IOMANIP

/* Define to 1 if you have the <iostream> header file. */
#cmakedefine HAVE_IOSTREAM

/* Define if you have LAPACK library. */
#cmakedefine HAVE_LAPACK

/* Define if want to build libcheck */
#cmakedefine HAVE_LIBCHECK

/* Define to 1 if you have the <list> header file. */
#cmakedefine HAVE_LIST

/* Define to 1 if you have the <map> header file. */
#cmakedefine HAVE_MAP

/* Define to 1 if you have the <memory> header file. */
#cmakedefine HAVE_MEMORY

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* define if we want to use MPI */
#cmakedefine HAVE_MPI

/* define if the compiler supports the mutable keyword */
#cmakedefine HAVE_MUTABLE

/* define if the compiler implements namespaces */
#cmakedefine HAVE_NAMESPACES

/* define if the compiler accepts the new for scoping rules */
#cmakedefine HAVE_NEW_FOR_SCOPING

/* define if the compiler supports numeric_limits<> */
#cmakedefine HAVE_NUMERIC_LIMITS

/* Define to 1 if you have the `pow' function. */
#cmakedefine HAVE_POW

/* define if the compiler supports access of protected templated nested
   classes in derived classes */
#cmakedefine HAVE_PROTECTED_NESTED_TEMPLATE_CLASS_ACCESS

/* Define to 1 if you have the <set> header file. */
#cmakedefine HAVE_SET

/* Define to 1 if you have the `sqrt' function. */
#cmakedefine HAVE_SQRT

/* Define to 1 if you have the <sstream> header file. */
#cmakedefine HAVE_SSTREAM

/* Define to 1 if you have the <stdexcept> header file. */
#cmakedefine HAVE_STDEXCEPT

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* define if std::ios_base::fmtflags is supported type */
#cmakedefine HAVE_STD_IOS_BASE_FMTFLAGS

/* define if std::sprintf is supported */
#cmakedefine HAVE_STD_SPRINTF

/* define if the compiler supports Standard Template Library */
#cmakedefine HAVE_STL

/* Define to 1 if you have the <string> header file. */
#cmakedefine HAVE_STRING

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define if want to build tests */
#cmakedefine HAVE_TESTS

/* Define if want to build teuchos-arprec */
#cmakedefine HAVE_TEUCHOS_ARPREC

/* Define if want to build teuchos-abc */
#cmakedefine HAVE_TEUCHOS_ARRAY_BOUNDSCHECK

/* Define if want to build teuchos-blasfloat */
#cmakedefine HAVE_TEUCHOS_BLASFLOAT

/* Define if want to build teuchos-boost */
#cmakedefine HAVE_TEUCHOS_BOOST

/* Define if want to build teuchos-comm_timers */
#cmakedefine HAVE_TEUCHOS_COMM_TIMERS

/* Define if want to build teuchos-complex */
#cmakedefine HAVE_TEUCHOS_COMPLEX

/* Define if want to build teuchos-debug */
#cmakedefine HAVE_TEUCHOS_DEBUG

/* Define if want to build teuchos-demangle */
#cmakedefine HAVE_TEUCHOS_DEMANGLE

/* Define if want to build teuchos-examples */
#cmakedefine HAVE_TEUCHOS_EXAMPLES

/* Define if want to build teuchos-expat */
#cmakedefine HAVE_TEUCHOS_EXPAT

/* Define if want to build teuchos-explicit_instantiation */
#cmakedefine HAVE_TEUCHOS_EXPLICIT_INSTANTIATION

/* Define if want to build teuchos-extended */
#cmakedefine HAVE_TEUCHOS_EXTENDED

/* Define if want to build teuchos-gmp */
#cmakedefine HAVE_TEUCHOS_GNU_MP

/* Define if want to build teuchos-libxml2 */
#cmakedefine HAVE_TEUCHOS_LIBXML2

/* Define if want to build teuchos-tests */
#cmakedefine HAVE_TEUCHOS_TESTS

/* Define to 1 if you have the <typeinfo> header file. */
#cmakedefine HAVE_TYPEINFO

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to 1 if you have the <vector> header file. */
#cmakedefine HAVE_VECTOR

/* template qualifier required for calling template methods from non-template
   code */
#define INVALID_TEMPLATE_QUALIFIER @INVALID_TEMPLATE_QUALIFIER@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif
