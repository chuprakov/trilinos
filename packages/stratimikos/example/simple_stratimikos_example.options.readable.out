    Enable Delayed Solver Construction : bool = 0
    Linear Solver Type : string = Amesos
    Preconditioner Type : string = Ifpack
    Linear Solver Types -> 
      Amesos -> 
        Refactorization Policy : string = RepivotOnRefactorization
        Solver Type : string = Klu
        Throw on Preconditioner Input : bool = 1
        Amesos Settings -> 
          AddToDiag : double = 0
          AddZeroToDiag : bool = 0
          ComputeTrueResidual : bool = 0
          ComputeVectorNorms : bool = 0
          DebugLevel : int = 0
          MatrixProperty : string = general
          MaxProcs : int = -1
          NoDestroy : bool = 0
          OutputLevel : int = 1
          PrintTiming : bool = 0
          RcondThreshold : double = 1e-12
          Redistribute : bool = 0
          Refactorize : bool = 0
          Reindex : int = 0
          ScaleMethod : int = 0
          TrustMe : bool = 0
          Lapack -> 
            Equilibrate : bool = 1
          Mumps -> 
            ColScaling : double* = 0
            Equilibrate : bool = 1
            RowScaling : double* = 0
          Pardiso -> 
            IPARM(1) : int = 0
            IPARM(10) : int = 0
            IPARM(11) : int = 0
            IPARM(18) : int = 0
            IPARM(19) : int = 0
            IPARM(2) : int = 0
            IPARM(21) : int = 0
            IPARM(3) : int = 0
            IPARM(4) : int = 0
            IPARM(8) : int = 0
            MSGLVL : int = 0
          Scalapack -> 
            2D distribution : bool = 1
            grid_nb : int = 32
          Superludist -> 
            ColPerm : string = NOT SET
            Equil : bool = 0
            Fact : string = SamePattern
            IterRefine : string = NOT SET
            PrintNonzeros : bool = 0
            ReplaceTinyPivot : bool = 1
            ReuseSymbolic : bool = 0
            RowPerm : string = NOT SET
            perm_c : int* = 0
            perm_r : int* = 0
        VerboseObject -> 
          Output File : string = none
          Verbosity Level : string = default
      AztecOO -> 
        Output Every RHS : bool = 0
        Adjoint Solve -> 
          Max Iterations : int = 400
          Tolerance : double = 1e-06
          AztecOO Settings -> 
            Aztec Preconditioner : string = ilu
            Aztec Solver : string = GMRES
            Convergence Test : string = r0
            Drop Tolerance : double = 0
            Fill Factor : double = 1
            Graph Fill : int = 0
            Ill-Conditioning Threshold : double = 1e+11
            Orthogonalization : string = Classical
            Output Frequency : int = 0
            Overlap : int = 0
            Polynomial Order : int = 3
            RCM Reordering : string = Disabled
            Size of Krylov Subspace : int = 300
            Steps : int = 3
        Forward Solve -> 
          Max Iterations : int = 400
          Tolerance : double = 1e-06
          AztecOO Settings -> 
            Aztec Preconditioner : string = ilu
            Aztec Solver : string = GMRES
            Convergence Test : string = r0
            Drop Tolerance : double = 0
            Fill Factor : double = 1
            Graph Fill : int = 0
            Ill-Conditioning Threshold : double = 1e+11
            Orthogonalization : string = Classical
            Output Frequency : int = 0
            Overlap : int = 0
            Polynomial Order : int = 3
            RCM Reordering : string = Disabled
            Size of Krylov Subspace : int = 300
            Steps : int = 3
        VerboseObject -> 
          Output File : string = none
          Verbosity Level : string = default
      Belos -> 
        Solver Type : string = Block GMRES
        Solver Types -> 
          Block CG -> 
            Adaptive Block Size : bool = 1
            Block Size : int = 1
            Convergence Tolerance : double = 1e-08
            Maximum Iterations : int = 1000
            Orthogonalization : string = DGKS
            Orthogonalization Constant : double = -1
            Output Frequency : int = -1
            Output Stream : RCP<std::ostream> = RCP<std::ostream>{ptr=0xb76360,node=0xb855a0,count=4}
            Show Maximum Residual Norm Only : bool = 0
            Timer Label : string = Belos
            Verbosity : int = 0
          Block GMRES -> 
            Adaptive Block Size : bool = 1
            Block Size : int = 1
            Convergence Tolerance : double = 1e-08
            Explicit Residual Scaling : string = Norm of Initial Residual
            Flexible Gmres : bool = 0
            Implicit Residual Scaling : string = Norm of Preconditioned Initial Residual
            Maximum Iterations : int = 1000
            Maximum Restarts : int = 20
            Num Blocks : int = 300
            Orthogonalization : string = DGKS
            Orthogonalization Constant : double = -1
            Output Frequency : int = -1
            Output Stream : RCP<std::ostream> = RCP<std::ostream>{ptr=0xb76360,node=0xb85360,count=4}
            Show Maximum Residual Norm Only : bool = 0
            Timer Label : string = Belos
            Verbosity : int = 0
          Pseudo Block GMRES -> 
            Adaptive Block Size : bool = 1
            Block Size : int = 1
            Convergence Tolerance : double = 1e-08
            Deflation Quorum : int = 1
            Explicit Residual Scaling : string = Norm of Initial Residual
            Implicit Residual Scaling : string = Norm of Preconditioned Initial Residual
            Maximum Iterations : int = 1000
            Maximum Restarts : int = 20
            Num Blocks : int = 300
            Orthogonalization : string = DGKS
            Orthogonalization Constant : double = -1
            Output Frequency : int = -1
            Output Stream : RCP<std::ostream> = RCP<std::ostream>{ptr=0xb76360,node=0xb85480,count=4}
            Show Maximum Residual Norm Only : bool = 0
            Timer Label : string = Belos
            Verbosity : int = 0
        VerboseObject -> 
          Output File : string = none
          Verbosity Level : string = default
    Preconditioner Types -> 
      Ifpack -> 
        Overlap : int = 0
        Prec Type : string = ILU
        Ifpack Settings -> 
          amesos: solver type : string = Amesos_Klu
          fact: absolute threshold : double = 0
          fact: drop tolerance : double = 0
          fact: ict level-of-fill : double = 1
          fact: ilut level-of-fill : double = 1
          fact: level-of-fill : int = 0
          fact: relative threshold : double = 1
          fact: relax value : double = 0
          fact: sparskit: alph : double = 0
          fact: sparskit: droptol : double = 0
          fact: sparskit: lfil : int = 0
          fact: sparskit: mbloc : int = -1
          fact: sparskit: permtol : double = 0.1
          fact: sparskit: tol : double = 0
          fact: sparskit: type : string = ILUT
          partitioner: local parts : int = 1
          partitioner: overlap : int = 0
          partitioner: print level : int = 0
          partitioner: type : string = greedy
          partitioner: use symmetric graph : bool = 1
          relaxation: damping factor : double = 1
          relaxation: min diagonal value : double = 1
          relaxation: sweeps : int = 1
          relaxation: type : string = Jacobi
          relaxation: zero starting solution : bool = 1
          schwarz: combine mode : string = Zero
          schwarz: compute condest : bool = 1
          schwarz: filter singletons : bool = 0
          schwarz: reordering type : string = none
        VerboseObject -> 
          Output File : string = none
          Verbosity Level : string = default
      ML -> 
        Base Method Defaults : string = DD
        ML Settings -> 
          aggregation: damping factor : double = 1.333
          aggregation: edge prolongator drop threshold : double = 0
          aggregation: local aggregates : int = 1
          aggregation: next-level aggregates per process : int = 128
          aggregation: nodes per aggregate : int = 512
          aggregation: type : string = Uncoupled-MIS
          coarse: max size : int = 128
          coarse: type : string = Amesos-KLU
          default values : string = maxwell
          eigen-analysis: iterations : int = 10
          eigen-analysis: type : string = cg
          increasing or decreasing : string = decreasing
          max levels : int = 10
          prec type : string = MGV
          smoother: Aztec as solver : bool = 0
          smoother: Aztec options : RCP<vector<int>> = RCP<vector<int>>{ptr=0xb9c4d0,node=0xb9d140,count=2}
          smoother: Aztec params : RCP<vector<double>> = RCP<vector<double>>{ptr=0xb9d360,node=0xb9cb10,count=2}
          smoother: Hiptmair efficient symmetric : bool = 1
          smoother: damping factor : double = 1
          smoother: pre or post : string = both
          smoother: sweeps : int = 1
          smoother: type : string = Hiptmair
          subsmoother: Chebyshev alpha : double = 20
          subsmoother: edge sweeps : int = 4
          subsmoother: node sweeps : int = 4
          subsmoother: type : string = Chebyshev
