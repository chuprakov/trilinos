include $(TRILINOS_HOME)/build/TRILINOS_TARGET_DEFS
TRILINOS_TARGET = $(TRILINOS_ARCH).$(TRILINOS_COMM)$(TRILINOS_ID)
include $(TRILINOS_HOME)/build/makefile.$(TRILINOS_TARGET)

DEFINES= -D$(TRILINOS_ARCH) $(EPETRA_ARCH_DEFINES) -D$(EPETRA_COMM) $(EPETRA_DEFAULT_DEFINES)

INCLUDES = $(ARCH_INCLUDES) $(EPETRA_INCLUDES) $(TRIUTILS_INCLUDES)

CFLAGS=$(ARCH_CFLAGS) $(DEFINES) $(INCLUDES)
FFLAGS=$(ARCH_FFLAGS) $(DEFINES) $(INCLUDES)
CXXFLAGS=$(ARCH_CXXFLAGS) $(DEFINES) $(INCLUDES)
CCFLAGS=$(CXXFLAGS)
LDFLAGS=$(ARCH_LDFLAGS)

LIB_PATHS= $(LIBTRIUTILS) $(LIBEPETRA)  $(LIBLAPACK) $(LIBBLAS)

TEST_C_OBJ          = $(TEST_C:.c=.$(OBJ_EXT))
TEST_CXX_OBJ          = $(TEST_CXX:.cpp=.$(OBJ_EXT))
TEST_F_OBJ          = $(TEST_F:.f=.$(OBJ_EXT))

TARGET_C_MPI = c_$(CLASS)_mpi.exe
TARGET_CXX_MPI = cxx_$(CLASS)_mpi.exe
TARGET_F_MPI = f_$(CLASS)_mpi.exe
TARGET_C_SERIAL = c_$(CLASS)_serial.exe
TARGET_CXX_SERIAL = cxx_$(CLASS)_serial.exe
TARGET_F_SERIAL = f_$(CLASS)_serial.exe

TARGET_C = $(TARGET_C_$(TRILINOS_COMM))
TARGET_CXX = $(TARGET_CXX_$(TRILINOS_COMM))
TARGET_F = $(TARGET_F_$(TRILINOS_COMM))

all: cxx
c: $(TARGET_C)
cxx: $(TARGET_CXX)
f: $(TARGET_F)


$(TARGET_C): $(TEST_C_OBJ)
	$(LINKER) $(LDFLAGS) $(TEST_C_OBJ) $(LIB_PATHS) $(ARCH_LIBS) \
	$(LIBMPI)  -o $(TARGET_C)

$(TARGET_CXX): $(TEST_CXX_OBJ)
	$(LINKER) $(LDFLAGS) $(TEST_CXX_OBJ) $(LIB_PATHS) $(ARCH_LIBS) \
	$(LIBMPI)  -o $(TARGET_CXX)

$(TARGET_F): $(TEST_F_OBJ)
	$(LINKER) $(LDFLAGS) $(TEST_F_OBJ) $(LIB_PATHS) $(ARCH_LIBS) \
	$(LIBMPI)  -o $(TARGET_F)

clobber: clean
	@rm -f $(TARGET_C_MPI) $(TARGET_C_SERIAL) \
            $(TARGET_CXX_MPI) $(TARGET_CXX_SERIAL) \
            $(TARGET_F_MPI) $(TARGET_F_SERIAL) 
                     
clean:
	@echo "junk" > dummy.$(OBJ_EXT)
	@rm -f *.$(OBJ_EXT)  *~ 

again: clobber all
