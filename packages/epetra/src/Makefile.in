# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#               Epetra: Linear Algebra Services Package 
#                 Copyright (2001) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
# @HEADER

# The following line helps the test harness recover from build errors.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src
DIST_COMMON = $(am__include_HEADERS_DIST) $(srcdir)/Epetra_config.h.in \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub_check.m4 \
	$(top_srcdir)/config/tac_arg_enable_option.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libs.m4 \
	$(top_srcdir)/config/tac_arg_with_package.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/config/tac_blas.m4 \
	$(top_srcdir)/config/tac_lapack.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = Epetra_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(execincludedir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
am__DEPENDENCIES_1 =
libepetra_a_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libepetra_a_SOURCES_DIST = $(srcdir)/Epetra_BLAS.cpp \
	$(srcdir)/Epetra_LAPACK.cpp $(srcdir)/Epetra_Object.cpp \
	$(srcdir)/Epetra_Flops.cpp $(srcdir)/Epetra_Time.cpp \
	$(srcdir)/Epetra_Util.cpp \
	$(srcdir)/Epetra_RowMatrixTransposer.cpp \
	$(srcdir)/Epetra_Data.cpp \
	$(srcdir)/Epetra_SerialDenseMatrix.cpp \
	$(srcdir)/Epetra_SerialSpdDenseSolver.cpp \
	$(srcdir)/Epetra_SerialDenseSolver.cpp \
	$(srcdir)/Epetra_SerialSymDenseMatrix.cpp \
	$(srcdir)/Epetra_SerialDenseVector.cpp \
	$(srcdir)/Epetra_SerialDenseSVD.cpp \
	$(srcdir)/Epetra_IntSerialDenseMatrix.cpp \
	$(srcdir)/Epetra_IntSerialDenseVector.cpp \
	$(srcdir)/Epetra_SerialComm.cpp \
	$(srcdir)/Epetra_SerialCommData.cpp \
	$(srcdir)/Epetra_SerialDistributor.cpp \
	$(srcdir)/Epetra_BasicDirectory.cpp \
	$(srcdir)/Epetra_BlockMap.cpp \
	$(srcdir)/Epetra_BlockMapData.cpp \
	$(srcdir)/Epetra_DistObject.cpp $(srcdir)/Epetra_Export.cpp \
	$(srcdir)/Epetra_Import.cpp $(srcdir)/Epetra_LocalMap.cpp \
	$(srcdir)/Epetra_Map.cpp $(srcdir)/Epetra_MapColoring.cpp \
	$(srcdir)/Epetra_OffsetIndex.cpp \
	$(srcdir)/Epetra_CompObject.cpp $(srcdir)/Epetra_CrsGraph.cpp \
	$(srcdir)/Epetra_CrsGraphData.cpp \
	$(srcdir)/Epetra_CrsMatrix.cpp \
	$(srcdir)/Epetra_LinearProblem.cpp \
	$(srcdir)/Epetra_MultiVector.cpp \
	$(srcdir)/Epetra_VbrMatrix.cpp $(srcdir)/Epetra_Vector.cpp \
	$(srcdir)/Epetra_CrsSingletonFilter.cpp \
	$(srcdir)/Epetra_FECrsGraph.cpp \
	$(srcdir)/Epetra_FECrsMatrix.cpp \
	$(srcdir)/Epetra_FEVbrMatrix.cpp $(srcdir)/Epetra_FEVector.cpp \
	$(srcdir)/Epetra_IntVector.cpp \
	$(srcdir)/Epetra_BasicRowMatrix.cpp \
	$(srcdir)/Epetra_JadMatrix.cpp $(srcdir)/Epetra_MpiComm.cpp \
	$(srcdir)/Epetra_MpiCommData.cpp \
	$(srcdir)/Epetra_MpiDistributor.cpp $(srcdir)/Epetra_dcrsmv.f \
	$(srcdir)/Epetra_dcrsmm.f $(srcdir)/Epetra_dcrssv.f \
	$(srcdir)/Epetra_dcrssm.f
am__objects_1 = Epetra_BLAS.$(OBJEXT) Epetra_LAPACK.$(OBJEXT) \
	Epetra_Object.$(OBJEXT)
am__objects_2 = Epetra_Flops.$(OBJEXT) Epetra_Time.$(OBJEXT) \
	Epetra_Util.$(OBJEXT) Epetra_RowMatrixTransposer.$(OBJEXT) \
	Epetra_Data.$(OBJEXT)
am__objects_3 = Epetra_SerialDenseMatrix.$(OBJEXT) \
	Epetra_SerialSpdDenseSolver.$(OBJEXT) \
	Epetra_SerialDenseSolver.$(OBJEXT) \
	Epetra_SerialSymDenseMatrix.$(OBJEXT) \
	Epetra_SerialDenseVector.$(OBJEXT) \
	Epetra_SerialDenseSVD.$(OBJEXT) \
	Epetra_IntSerialDenseMatrix.$(OBJEXT) \
	Epetra_IntSerialDenseVector.$(OBJEXT)
am__objects_4 = Epetra_SerialComm.$(OBJEXT) \
	Epetra_SerialCommData.$(OBJEXT) \
	Epetra_SerialDistributor.$(OBJEXT)
am__objects_5 = Epetra_BasicDirectory.$(OBJEXT) \
	Epetra_BlockMap.$(OBJEXT) Epetra_BlockMapData.$(OBJEXT) \
	Epetra_DistObject.$(OBJEXT) Epetra_Export.$(OBJEXT) \
	Epetra_Import.$(OBJEXT) Epetra_LocalMap.$(OBJEXT) \
	Epetra_Map.$(OBJEXT) Epetra_MapColoring.$(OBJEXT) \
	Epetra_OffsetIndex.$(OBJEXT)
am__objects_6 = Epetra_CompObject.$(OBJEXT) Epetra_CrsGraph.$(OBJEXT) \
	Epetra_CrsGraphData.$(OBJEXT) Epetra_CrsMatrix.$(OBJEXT) \
	Epetra_LinearProblem.$(OBJEXT) Epetra_MultiVector.$(OBJEXT) \
	Epetra_VbrMatrix.$(OBJEXT) Epetra_Vector.$(OBJEXT) \
	Epetra_CrsSingletonFilter.$(OBJEXT) \
	Epetra_FECrsGraph.$(OBJEXT) Epetra_FECrsMatrix.$(OBJEXT) \
	Epetra_FEVbrMatrix.$(OBJEXT) Epetra_FEVector.$(OBJEXT) \
	Epetra_IntVector.$(OBJEXT) Epetra_BasicRowMatrix.$(OBJEXT) \
	Epetra_JadMatrix.$(OBJEXT)
am__objects_7 = Epetra_MpiComm.$(OBJEXT) Epetra_MpiCommData.$(OBJEXT) \
	Epetra_MpiDistributor.$(OBJEXT)
@HAVE_MPI_TRUE@am__objects_8 = $(am__objects_7)
am__objects_9 = Epetra_MpiComm.$(OBJEXT) Epetra_MpiCommData.$(OBJEXT)
@HAVE_THREADS_TRUE@am__objects_10 = $(am__objects_9)
am__objects_11 = Epetra_dcrsmv.$(OBJEXT) Epetra_dcrsmm.$(OBJEXT) \
	Epetra_dcrssv.$(OBJEXT) Epetra_dcrssm.$(OBJEXT)
@FORTRAN_DISABLED_FALSE@am__objects_12 = $(am__objects_11)
am_libepetra_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_8) $(am__objects_10) \
	$(am__objects_12)
@BUILD_PRERELEASE_TRUE@nodist_libepetra_a_OBJECTS =  \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiUtils.$(OBJEXT) \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiMultiVector.$(OBJEXT) \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiVector.$(OBJEXT) \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiError.$(OBJEXT) \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiPermutation.$(OBJEXT) \
@BUILD_PRERELEASE_TRUE@	Epetra_OskiMatrix.$(OBJEXT)
libepetra_a_OBJECTS = $(am_libepetra_a_OBJECTS) \
	$(nodist_libepetra_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libepetra_a_SOURCES) $(EXTRA_libepetra_a_SOURCES) \
	$(nodist_libepetra_a_SOURCES)
DIST_SOURCES = $(am__libepetra_a_SOURCES_DIST) \
	$(EXTRA_libepetra_a_SOURCES)
am__include_HEADERS_DIST = $(srcdir)/Epetra_BLAS.h \
	$(srcdir)/Epetra_LAPACK.h $(srcdir)/Epetra_BLAS_wrappers.h \
	$(srcdir)/Epetra_LAPACK_wrappers.h $(srcdir)/Epetra_Comm.h \
	$(srcdir)/Epetra_Object.h $(srcdir)/Epetra_ConfigDefs.h \
	$(srcdir)/Epetra_Flops.h $(srcdir)/Epetra_Time.h \
	$(srcdir)/Epetra_Util.h $(srcdir)/Epetra_DataAccess.h \
	$(srcdir)/Epetra_HashTable.h \
	$(srcdir)/Epetra_RowMatrixTransposer.h $(srcdir)/Epetra_Data.h \
	$(srcdir)/Epetra_Version.h $(srcdir)/Epetra_CombineMode.h \
	$(srcdir)/Epetra_SerialDenseOperator.h \
	$(srcdir)/Epetra_SerialDenseMatrix.h \
	$(srcdir)/Epetra_SerialSpdDenseSolver.h \
	$(srcdir)/Epetra_SerialDenseSolver.h \
	$(srcdir)/Epetra_SerialSymDenseMatrix.h \
	$(srcdir)/Epetra_SerialDenseVector.h \
	$(srcdir)/Epetra_SerialDenseSVD.h \
	$(srcdir)/Epetra_IntSerialDenseMatrix.h \
	$(srcdir)/Epetra_IntSerialDenseVector.h \
	$(srcdir)/Epetra_SerialComm.h \
	$(srcdir)/Epetra_SerialCommData.h \
	$(srcdir)/Epetra_SerialDistributor.h \
	$(srcdir)/Epetra_Operator.h $(srcdir)/Epetra_InvOperator.h \
	$(srcdir)/Epetra_RowMatrix.h $(srcdir)/Epetra_BasicDirectory.h \
	$(srcdir)/Epetra_BlockMap.h $(srcdir)/Epetra_BlockMapData.h \
	$(srcdir)/Epetra_Directory.h $(srcdir)/Epetra_SrcDistObject.h \
	$(srcdir)/Epetra_DistObject.h $(srcdir)/Epetra_Distributor.h \
	$(srcdir)/Epetra_Export.h $(srcdir)/Epetra_Import.h \
	$(srcdir)/Epetra_LocalMap.h $(srcdir)/Epetra_Map.h \
	$(srcdir)/Epetra_MapColoring.h $(srcdir)/Epetra_OffsetIndex.h \
	$(srcdir)/Epetra_CompObject.h $(srcdir)/Epetra_CrsGraph.h \
	$(srcdir)/Epetra_CrsGraphData.h $(srcdir)/Epetra_CrsMatrix.h \
	$(srcdir)/Epetra_LinearProblem.h \
	$(srcdir)/Epetra_MultiVector.h $(srcdir)/Epetra_VbrMatrix.h \
	$(srcdir)/Epetra_Vector.h \
	$(srcdir)/Epetra_CrsSingletonFilter.h \
	$(srcdir)/Epetra_FECrsGraph.h $(srcdir)/Epetra_FECrsMatrix.h \
	$(srcdir)/Epetra_FEVbrMatrix.h $(srcdir)/Epetra_FEVector.h \
	$(srcdir)/Epetra_IntVector.h $(srcdir)/Epetra_BasicRowMatrix.h \
	$(srcdir)/Epetra_JadMatrix.h $(srcdir)/Epetra_VbrRowMatrix.h \
	$(srcdir)/Epetra_MpiComm.h $(srcdir)/Epetra_MpiCommData.h \
	$(srcdir)/Epetra_MpiDistributor.h
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS) \
	$(nodist_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EPETRA_BUILD_DIRECTORY = @EPETRA_BUILD_DIRECTORY@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GREP = @GREP@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
WITH_PRERELEASE_SUBST = @WITH_PRERELEASE_SUBST@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside Epetra. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------
CORE_H = \
	$(srcdir)/Epetra_BLAS.h \
	$(srcdir)/Epetra_LAPACK.h \
	$(srcdir)/Epetra_BLAS_wrappers.h \
	$(srcdir)/Epetra_LAPACK_wrappers.h \
	$(srcdir)/Epetra_Comm.h \
	$(srcdir)/Epetra_Object.h \
	$(srcdir)/Epetra_ConfigDefs.h

CORE = \
	$(srcdir)/Epetra_BLAS.cpp \
	$(srcdir)/Epetra_LAPACK.cpp \
	$(srcdir)/Epetra_Object.cpp

UTIL_H = \
	$(srcdir)/Epetra_Flops.h \
	$(srcdir)/Epetra_Time.h \
	$(srcdir)/Epetra_Util.h \
	$(srcdir)/Epetra_DataAccess.h \
	$(srcdir)/Epetra_HashTable.h \
	$(srcdir)/Epetra_RowMatrixTransposer.h \
	$(srcdir)/Epetra_Data.h \
	$(srcdir)/Epetra_Version.h

UTIL = \
	$(srcdir)/Epetra_Flops.cpp \
	$(srcdir)/Epetra_Time.cpp \
	$(srcdir)/Epetra_Util.cpp \
	$(srcdir)/Epetra_RowMatrixTransposer.cpp \
	$(srcdir)/Epetra_Data.cpp

ENUM_H = \
	$(srcdir)/Epetra_CombineMode.h \
	$(srcdir)/Epetra_DataAccess.h

UNIPROC_H = \
	$(srcdir)/Epetra_SerialDenseOperator.h  \
	$(srcdir)/Epetra_SerialDenseMatrix.h  \
	$(srcdir)/Epetra_SerialSpdDenseSolver.h \
	$(srcdir)/Epetra_SerialDenseSolver.h   \
	$(srcdir)/Epetra_SerialSymDenseMatrix.h \
	$(srcdir)/Epetra_SerialDenseVector.h \
	$(srcdir)/Epetra_SerialDenseSVD.h \
	$(srcdir)/Epetra_IntSerialDenseMatrix.h \
	$(srcdir)/Epetra_IntSerialDenseVector.h

UNIPROC = \
	$(srcdir)/Epetra_SerialDenseMatrix.cpp  \
	$(srcdir)/Epetra_SerialSpdDenseSolver.cpp \
	$(srcdir)/Epetra_SerialDenseSolver.cpp   \
	$(srcdir)/Epetra_SerialSymDenseMatrix.cpp \
	$(srcdir)/Epetra_SerialDenseVector.cpp \
	$(srcdir)/Epetra_SerialDenseSVD.cpp \
	$(srcdir)/Epetra_IntSerialDenseMatrix.cpp  \
	$(srcdir)/Epetra_IntSerialDenseVector.cpp

SERIAL_H = \
	$(srcdir)/Epetra_SerialComm.h  \
	$(srcdir)/Epetra_SerialCommData.h  \
	$(srcdir)/Epetra_SerialDistributor.h

SERIAL = \
	$(srcdir)/Epetra_SerialComm.cpp  \
	$(srcdir)/Epetra_SerialCommData.cpp  \
	$(srcdir)/Epetra_SerialDistributor.cpp

EXTRA_FORTRAN_KERNELS = \
        $(srcdir)/Epetra_dcrsmv.f \
        $(srcdir)/Epetra_dcrsmm.f \
        $(srcdir)/Epetra_dcrssv.f \
        $(srcdir)/Epetra_dcrssm.f

@FORTRAN_DISABLED_FALSE@FORTRAN_KERNELS = \
@FORTRAN_DISABLED_FALSE@	$(EXTRA_FORTRAN_KERNELS)

@FORTRAN_DISABLED_TRUE@FORTRAN_KERNELS = 
EXTRA_MPI_H = \
	$(srcdir)/Epetra_MpiComm.h  \
	$(srcdir)/Epetra_MpiCommData.h  \
	$(srcdir)/Epetra_MpiDistributor.h 

EXTRA_MPI = \
	$(srcdir)/Epetra_MpiComm.cpp  \
	$(srcdir)/Epetra_MpiCommData.cpp  \
	$(srcdir)/Epetra_MpiDistributor.cpp

@HAVE_MPI_FALSE@MPI_H = 
@HAVE_MPI_TRUE@MPI_H = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI_H)

@HAVE_MPI_FALSE@MPI = 
@HAVE_MPI_TRUE@MPI = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI)

EXTRA_MPISMP_H = \
	$(srcdir)/Epetra_MpiComm.h \
	$(srcdir)/Epetra_MpiCommData.h 

#	$(srcdir)/Epetra_MpiSmpComm.h \
#	$(srcdir)/Epetra_MpiSmpCommData.h
EXTRA_MPISMP = \
	$(srcdir)/Epetra_MpiComm.cpp \
	$(srcdir)/Epetra_MpiCommData.cpp 

@HAVE_THREADS_FALSE@MPISMP_H = 
#	$(srcdir)/Epetra_MpiSmpComm.cpp \
#	$(srcdir)/Epetra_MpiSmpCommData.cpp
@HAVE_THREADS_TRUE@MPISMP_H = \
@HAVE_THREADS_TRUE@	$(EXTRA_MPISMP_H)

@HAVE_THREADS_FALSE@MPISMP = 
@HAVE_THREADS_TRUE@MPISMP = \
@HAVE_THREADS_TRUE@	$(EXTRA_MPISMP)

USERBASE_H = \
	$(srcdir)/Epetra_Operator.h \
	$(srcdir)/Epetra_InvOperator.h \
	$(srcdir)/Epetra_RowMatrix.h

LANG_WRAPS_H = \
	$(srcdir)/Epetra_C_wrappers.h \
	$(srcdir)/Epetra_Fortran_wrappers.h

LANG_WRAPS = \
	$(srcdir)/Epetra_C_wrappers.cpp \
	$(srcdir)/Epetra_Fortran_wrappers.cpp

DIST_H = \
	$(srcdir)/Epetra_BasicDirectory.h \
	$(srcdir)/Epetra_BlockMap.h \
	$(srcdir)/Epetra_BlockMapData.h \
	$(srcdir)/Epetra_Directory.h \
	$(srcdir)/Epetra_SrcDistObject.h \
	$(srcdir)/Epetra_DistObject.h \
	$(srcdir)/Epetra_Distributor.h \
	$(srcdir)/Epetra_Export.h \
	$(srcdir)/Epetra_Import.h \
	$(srcdir)/Epetra_LocalMap.h \
	$(srcdir)/Epetra_Map.h \
	$(srcdir)/Epetra_MapColoring.h \
     $(srcdir)/Epetra_OffsetIndex.h

DIST = \
	$(srcdir)/Epetra_BasicDirectory.cpp \
	$(srcdir)/Epetra_BlockMap.cpp \
	$(srcdir)/Epetra_BlockMapData.cpp \
	$(srcdir)/Epetra_DistObject.cpp \
	$(srcdir)/Epetra_Export.cpp \
	$(srcdir)/Epetra_Import.cpp \
	$(srcdir)/Epetra_LocalMap.cpp \
	$(srcdir)/Epetra_Map.cpp \
	$(srcdir)/Epetra_MapColoring.cpp \
     $(srcdir)/Epetra_OffsetIndex.cpp

COMP_H = \
	$(srcdir)/Epetra_CompObject.h \
	$(srcdir)/Epetra_CrsGraph.h \
	$(srcdir)/Epetra_CrsGraphData.h \
	$(srcdir)/Epetra_CrsMatrix.h \
	$(srcdir)/Epetra_LinearProblem.h \
	$(srcdir)/Epetra_MultiVector.h \
	$(srcdir)/Epetra_VbrMatrix.h \
	$(srcdir)/Epetra_Vector.h \
	$(srcdir)/Epetra_CrsSingletonFilter.h \
	$(srcdir)/Epetra_FECrsGraph.h \
	$(srcdir)/Epetra_FECrsMatrix.h \
	$(srcdir)/Epetra_FEVbrMatrix.h \
	$(srcdir)/Epetra_FEVector.h \
	$(srcdir)/Epetra_IntVector.h \
	$(srcdir)/Epetra_BasicRowMatrix.h \
	$(srcdir)/Epetra_JadMatrix.h \
     $(srcdir)/Epetra_VbrRowMatrix.h

COMP = \
	$(srcdir)/Epetra_CompObject.cpp \
	$(srcdir)/Epetra_CrsGraph.cpp \
	$(srcdir)/Epetra_CrsGraphData.cpp \
	$(srcdir)/Epetra_CrsMatrix.cpp \
	$(srcdir)/Epetra_LinearProblem.cpp \
	$(srcdir)/Epetra_MultiVector.cpp \
	$(srcdir)/Epetra_VbrMatrix.cpp \
	$(srcdir)/Epetra_Vector.cpp \
	$(srcdir)/Epetra_CrsSingletonFilter.cpp \
	$(srcdir)/Epetra_FECrsGraph.cpp \
	$(srcdir)/Epetra_FECrsMatrix.cpp \
	$(srcdir)/Epetra_FEVbrMatrix.cpp \
	$(srcdir)/Epetra_FEVector.cpp \
	$(srcdir)/Epetra_IntVector.cpp \
	$(srcdir)/Epetra_BasicRowMatrix.cpp \
	$(srcdir)/Epetra_JadMatrix.cpp


# ------------------------------------------------------------------------
# Epetra library specifications
# ------------------------------------------------------------------------
EPETRA_LIB = libepetra.a
EPETRA_H = \
	$(CORE_H) \
	$(UTIL_H) \
	$(ENUM_H) \
	$(UNIPROC_H) \
	$(SERIAL_H) \
	$(USERBASE_H) \
	$(DIST_H) \
	$(COMP_H) \
	$(MPI_H) \
	$(MPISMP_H)

libepetra_a_SOURCES = \
	$(CORE) \
	$(UTIL) \
	$(UNIPROC) \
	$(SERIAL) \
	$(DIST) \
	$(COMP) \
	$(MPI) \
	$(MPISMP) \
	$(FORTRAN_KERNELS)

EXTRA_libepetra_a_SOURCES = \
	$(EXTRA_MPI) \
	$(EXTRA_MPI_H) \
	$(EXTRA_MPISMP) \
	$(EXTRA_MPISMP_H) \
	$(EXTRA_FORTRAN_KERNELS)


# ------------------------------------------------------------------------
# Parts of the code that are not ready to be included in nightly release
# ------------------------------------------------------------------------
@BUILD_PRERELEASE_TRUE@nodist_include_HEADERS = \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiUtils.h \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiMultiVector.h \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiVector.h \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiError.h \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiPermutation.h \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiMatrix.h 

@BUILD_PRERELEASE_TRUE@nodist_libepetra_a_SOURCES = \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiUtils.cpp \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiMultiVector.cpp \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiVector.cpp \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiError.cpp \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiPermutation.cpp \
@BUILD_PRERELEASE_TRUE@	$(srcdir)/Epetra_OskiMatrix.cpp 

@USING_GNUMAKE_FALSE@EXPORT_INCLUDES = $(EPETRA_INCLUDES)
@USING_GNUMAKE_TRUE@EXPORT_INCLUDES = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_incl_paths.pl $(EPETRA_INCLUDES))
AM_CPPFLAGS = $(EXPORT_INCLUDES)
@USE_ALTERNATE_AR_FALSE@libepetra_a_AR = $(AR) cru

# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libepetra_a_AR = $(ALTERNATE_AR)

# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# On alpha-dec machines, the extra .o's are needed for Epetra only.
# ------------------------------------------------------------------------
libepetra_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)

# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(EPETRA_LIB)

# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------
include_HEADERS = $(EPETRA_H) 

# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: Epetra_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(includedir)
nodist_execinclude_HEADERS = Epetra_config.h

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: Epetra_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

Epetra_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/Epetra_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/Epetra_config.h
$(srcdir)/Epetra_config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f Epetra_config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libepetra.a: $(libepetra_a_OBJECTS) $(libepetra_a_DEPENDENCIES) 
	-rm -f libepetra.a
	$(libepetra_a_AR) libepetra.a $(libepetra_a_OBJECTS) $(libepetra_a_LIBADD)
	$(RANLIB) libepetra.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BLAS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BasicDirectory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BasicRowMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BlockMap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BlockMapData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CompObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsGraphData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsSingletonFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_DistObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Export.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FECrsGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FECrsMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FEVbrMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FEVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Flops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Import.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntSerialDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntSerialDenseVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_JadMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LAPACK.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LinearProblem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LocalMap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MapColoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiComm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiCommData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiDistributor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MultiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OffsetIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiError.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiMultiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiPermutation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_OskiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_RowMatrixTransposer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialComm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialCommData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseSVD.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseSolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDistributor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialSpdDenseSolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialSymDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_VbrMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Vector.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Epetra_BLAS.o: $(srcdir)/Epetra_BLAS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BLAS.o -MD -MP -MF $(DEPDIR)/Epetra_BLAS.Tpo -c -o Epetra_BLAS.o `test -f '$(srcdir)/Epetra_BLAS.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BLAS.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BLAS.Tpo $(DEPDIR)/Epetra_BLAS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BLAS.cpp' object='Epetra_BLAS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BLAS.o `test -f '$(srcdir)/Epetra_BLAS.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BLAS.cpp

Epetra_BLAS.obj: $(srcdir)/Epetra_BLAS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BLAS.obj -MD -MP -MF $(DEPDIR)/Epetra_BLAS.Tpo -c -o Epetra_BLAS.obj `if test -f '$(srcdir)/Epetra_BLAS.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BLAS.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BLAS.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BLAS.Tpo $(DEPDIR)/Epetra_BLAS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BLAS.cpp' object='Epetra_BLAS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BLAS.obj `if test -f '$(srcdir)/Epetra_BLAS.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BLAS.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BLAS.cpp'; fi`

Epetra_LAPACK.o: $(srcdir)/Epetra_LAPACK.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LAPACK.o -MD -MP -MF $(DEPDIR)/Epetra_LAPACK.Tpo -c -o Epetra_LAPACK.o `test -f '$(srcdir)/Epetra_LAPACK.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LAPACK.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LAPACK.Tpo $(DEPDIR)/Epetra_LAPACK.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LAPACK.cpp' object='Epetra_LAPACK.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LAPACK.o `test -f '$(srcdir)/Epetra_LAPACK.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LAPACK.cpp

Epetra_LAPACK.obj: $(srcdir)/Epetra_LAPACK.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LAPACK.obj -MD -MP -MF $(DEPDIR)/Epetra_LAPACK.Tpo -c -o Epetra_LAPACK.obj `if test -f '$(srcdir)/Epetra_LAPACK.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LAPACK.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LAPACK.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LAPACK.Tpo $(DEPDIR)/Epetra_LAPACK.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LAPACK.cpp' object='Epetra_LAPACK.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LAPACK.obj `if test -f '$(srcdir)/Epetra_LAPACK.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LAPACK.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LAPACK.cpp'; fi`

Epetra_Object.o: $(srcdir)/Epetra_Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Object.o -MD -MP -MF $(DEPDIR)/Epetra_Object.Tpo -c -o Epetra_Object.o `test -f '$(srcdir)/Epetra_Object.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Object.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Object.Tpo $(DEPDIR)/Epetra_Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Object.cpp' object='Epetra_Object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Object.o `test -f '$(srcdir)/Epetra_Object.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Object.cpp

Epetra_Object.obj: $(srcdir)/Epetra_Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Object.obj -MD -MP -MF $(DEPDIR)/Epetra_Object.Tpo -c -o Epetra_Object.obj `if test -f '$(srcdir)/Epetra_Object.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Object.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Object.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Object.Tpo $(DEPDIR)/Epetra_Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Object.cpp' object='Epetra_Object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Object.obj `if test -f '$(srcdir)/Epetra_Object.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Object.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Object.cpp'; fi`

Epetra_Flops.o: $(srcdir)/Epetra_Flops.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Flops.o -MD -MP -MF $(DEPDIR)/Epetra_Flops.Tpo -c -o Epetra_Flops.o `test -f '$(srcdir)/Epetra_Flops.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Flops.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Flops.Tpo $(DEPDIR)/Epetra_Flops.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Flops.cpp' object='Epetra_Flops.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Flops.o `test -f '$(srcdir)/Epetra_Flops.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Flops.cpp

Epetra_Flops.obj: $(srcdir)/Epetra_Flops.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Flops.obj -MD -MP -MF $(DEPDIR)/Epetra_Flops.Tpo -c -o Epetra_Flops.obj `if test -f '$(srcdir)/Epetra_Flops.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Flops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Flops.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Flops.Tpo $(DEPDIR)/Epetra_Flops.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Flops.cpp' object='Epetra_Flops.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Flops.obj `if test -f '$(srcdir)/Epetra_Flops.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Flops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Flops.cpp'; fi`

Epetra_Time.o: $(srcdir)/Epetra_Time.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Time.o -MD -MP -MF $(DEPDIR)/Epetra_Time.Tpo -c -o Epetra_Time.o `test -f '$(srcdir)/Epetra_Time.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Time.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Time.Tpo $(DEPDIR)/Epetra_Time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Time.cpp' object='Epetra_Time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Time.o `test -f '$(srcdir)/Epetra_Time.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Time.cpp

Epetra_Time.obj: $(srcdir)/Epetra_Time.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Time.obj -MD -MP -MF $(DEPDIR)/Epetra_Time.Tpo -c -o Epetra_Time.obj `if test -f '$(srcdir)/Epetra_Time.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Time.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Time.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Time.Tpo $(DEPDIR)/Epetra_Time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Time.cpp' object='Epetra_Time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Time.obj `if test -f '$(srcdir)/Epetra_Time.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Time.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Time.cpp'; fi`

Epetra_Util.o: $(srcdir)/Epetra_Util.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Util.o -MD -MP -MF $(DEPDIR)/Epetra_Util.Tpo -c -o Epetra_Util.o `test -f '$(srcdir)/Epetra_Util.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Util.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Util.Tpo $(DEPDIR)/Epetra_Util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Util.cpp' object='Epetra_Util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Util.o `test -f '$(srcdir)/Epetra_Util.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Util.cpp

Epetra_Util.obj: $(srcdir)/Epetra_Util.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Util.obj -MD -MP -MF $(DEPDIR)/Epetra_Util.Tpo -c -o Epetra_Util.obj `if test -f '$(srcdir)/Epetra_Util.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Util.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Util.Tpo $(DEPDIR)/Epetra_Util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Util.cpp' object='Epetra_Util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Util.obj `if test -f '$(srcdir)/Epetra_Util.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Util.cpp'; fi`

Epetra_RowMatrixTransposer.o: $(srcdir)/Epetra_RowMatrixTransposer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_RowMatrixTransposer.o -MD -MP -MF $(DEPDIR)/Epetra_RowMatrixTransposer.Tpo -c -o Epetra_RowMatrixTransposer.o `test -f '$(srcdir)/Epetra_RowMatrixTransposer.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_RowMatrixTransposer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_RowMatrixTransposer.Tpo $(DEPDIR)/Epetra_RowMatrixTransposer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_RowMatrixTransposer.cpp' object='Epetra_RowMatrixTransposer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_RowMatrixTransposer.o `test -f '$(srcdir)/Epetra_RowMatrixTransposer.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_RowMatrixTransposer.cpp

Epetra_RowMatrixTransposer.obj: $(srcdir)/Epetra_RowMatrixTransposer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_RowMatrixTransposer.obj -MD -MP -MF $(DEPDIR)/Epetra_RowMatrixTransposer.Tpo -c -o Epetra_RowMatrixTransposer.obj `if test -f '$(srcdir)/Epetra_RowMatrixTransposer.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_RowMatrixTransposer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_RowMatrixTransposer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_RowMatrixTransposer.Tpo $(DEPDIR)/Epetra_RowMatrixTransposer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_RowMatrixTransposer.cpp' object='Epetra_RowMatrixTransposer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_RowMatrixTransposer.obj `if test -f '$(srcdir)/Epetra_RowMatrixTransposer.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_RowMatrixTransposer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_RowMatrixTransposer.cpp'; fi`

Epetra_Data.o: $(srcdir)/Epetra_Data.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Data.o -MD -MP -MF $(DEPDIR)/Epetra_Data.Tpo -c -o Epetra_Data.o `test -f '$(srcdir)/Epetra_Data.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Data.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Data.Tpo $(DEPDIR)/Epetra_Data.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Data.cpp' object='Epetra_Data.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Data.o `test -f '$(srcdir)/Epetra_Data.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Data.cpp

Epetra_Data.obj: $(srcdir)/Epetra_Data.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Data.obj -MD -MP -MF $(DEPDIR)/Epetra_Data.Tpo -c -o Epetra_Data.obj `if test -f '$(srcdir)/Epetra_Data.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Data.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Data.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Data.Tpo $(DEPDIR)/Epetra_Data.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Data.cpp' object='Epetra_Data.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Data.obj `if test -f '$(srcdir)/Epetra_Data.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Data.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Data.cpp'; fi`

Epetra_SerialDenseMatrix.o: $(srcdir)/Epetra_SerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseMatrix.Tpo -c -o Epetra_SerialDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseMatrix.Tpo $(DEPDIR)/Epetra_SerialDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseMatrix.cpp' object='Epetra_SerialDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseMatrix.cpp

Epetra_SerialDenseMatrix.obj: $(srcdir)/Epetra_SerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseMatrix.Tpo -c -o Epetra_SerialDenseMatrix.obj `if test -f '$(srcdir)/Epetra_SerialDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseMatrix.Tpo $(DEPDIR)/Epetra_SerialDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseMatrix.cpp' object='Epetra_SerialDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseMatrix.obj `if test -f '$(srcdir)/Epetra_SerialDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseMatrix.cpp'; fi`

Epetra_SerialSpdDenseSolver.o: $(srcdir)/Epetra_SerialSpdDenseSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialSpdDenseSolver.o -MD -MP -MF $(DEPDIR)/Epetra_SerialSpdDenseSolver.Tpo -c -o Epetra_SerialSpdDenseSolver.o `test -f '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSpdDenseSolver.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialSpdDenseSolver.Tpo $(DEPDIR)/Epetra_SerialSpdDenseSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' object='Epetra_SerialSpdDenseSolver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSpdDenseSolver.o `test -f '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSpdDenseSolver.cpp

Epetra_SerialSpdDenseSolver.obj: $(srcdir)/Epetra_SerialSpdDenseSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialSpdDenseSolver.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialSpdDenseSolver.Tpo -c -o Epetra_SerialSpdDenseSolver.obj `if test -f '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialSpdDenseSolver.Tpo $(DEPDIR)/Epetra_SerialSpdDenseSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' object='Epetra_SerialSpdDenseSolver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSpdDenseSolver.obj `if test -f '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialSpdDenseSolver.cpp'; fi`

Epetra_SerialDenseSolver.o: $(srcdir)/Epetra_SerialDenseSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseSolver.o -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseSolver.Tpo -c -o Epetra_SerialDenseSolver.o `test -f '$(srcdir)/Epetra_SerialDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseSolver.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseSolver.Tpo $(DEPDIR)/Epetra_SerialDenseSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseSolver.cpp' object='Epetra_SerialDenseSolver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSolver.o `test -f '$(srcdir)/Epetra_SerialDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseSolver.cpp

Epetra_SerialDenseSolver.obj: $(srcdir)/Epetra_SerialDenseSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseSolver.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseSolver.Tpo -c -o Epetra_SerialDenseSolver.obj `if test -f '$(srcdir)/Epetra_SerialDenseSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseSolver.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseSolver.Tpo $(DEPDIR)/Epetra_SerialDenseSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseSolver.cpp' object='Epetra_SerialDenseSolver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSolver.obj `if test -f '$(srcdir)/Epetra_SerialDenseSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseSolver.cpp'; fi`

Epetra_SerialSymDenseMatrix.o: $(srcdir)/Epetra_SerialSymDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialSymDenseMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_SerialSymDenseMatrix.Tpo -c -o Epetra_SerialSymDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSymDenseMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialSymDenseMatrix.Tpo $(DEPDIR)/Epetra_SerialSymDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' object='Epetra_SerialSymDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSymDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSymDenseMatrix.cpp

Epetra_SerialSymDenseMatrix.obj: $(srcdir)/Epetra_SerialSymDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialSymDenseMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialSymDenseMatrix.Tpo -c -o Epetra_SerialSymDenseMatrix.obj `if test -f '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialSymDenseMatrix.Tpo $(DEPDIR)/Epetra_SerialSymDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' object='Epetra_SerialSymDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSymDenseMatrix.obj `if test -f '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialSymDenseMatrix.cpp'; fi`

Epetra_SerialDenseVector.o: $(srcdir)/Epetra_SerialDenseVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseVector.o -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseVector.Tpo -c -o Epetra_SerialDenseVector.o `test -f '$(srcdir)/Epetra_SerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseVector.Tpo $(DEPDIR)/Epetra_SerialDenseVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseVector.cpp' object='Epetra_SerialDenseVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseVector.o `test -f '$(srcdir)/Epetra_SerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseVector.cpp

Epetra_SerialDenseVector.obj: $(srcdir)/Epetra_SerialDenseVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseVector.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseVector.Tpo -c -o Epetra_SerialDenseVector.obj `if test -f '$(srcdir)/Epetra_SerialDenseVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseVector.Tpo $(DEPDIR)/Epetra_SerialDenseVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseVector.cpp' object='Epetra_SerialDenseVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseVector.obj `if test -f '$(srcdir)/Epetra_SerialDenseVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseVector.cpp'; fi`

Epetra_SerialDenseSVD.o: $(srcdir)/Epetra_SerialDenseSVD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseSVD.o -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseSVD.Tpo -c -o Epetra_SerialDenseSVD.o `test -f '$(srcdir)/Epetra_SerialDenseSVD.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseSVD.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseSVD.Tpo $(DEPDIR)/Epetra_SerialDenseSVD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseSVD.cpp' object='Epetra_SerialDenseSVD.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSVD.o `test -f '$(srcdir)/Epetra_SerialDenseSVD.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseSVD.cpp

Epetra_SerialDenseSVD.obj: $(srcdir)/Epetra_SerialDenseSVD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDenseSVD.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialDenseSVD.Tpo -c -o Epetra_SerialDenseSVD.obj `if test -f '$(srcdir)/Epetra_SerialDenseSVD.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseSVD.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseSVD.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDenseSVD.Tpo $(DEPDIR)/Epetra_SerialDenseSVD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDenseSVD.cpp' object='Epetra_SerialDenseSVD.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSVD.obj `if test -f '$(srcdir)/Epetra_SerialDenseSVD.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDenseSVD.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDenseSVD.cpp'; fi`

Epetra_IntSerialDenseMatrix.o: $(srcdir)/Epetra_IntSerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntSerialDenseMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_IntSerialDenseMatrix.Tpo -c -o Epetra_IntSerialDenseMatrix.o `test -f '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntSerialDenseMatrix.Tpo $(DEPDIR)/Epetra_IntSerialDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' object='Epetra_IntSerialDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseMatrix.o `test -f '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseMatrix.cpp

Epetra_IntSerialDenseMatrix.obj: $(srcdir)/Epetra_IntSerialDenseMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntSerialDenseMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_IntSerialDenseMatrix.Tpo -c -o Epetra_IntSerialDenseMatrix.obj `if test -f '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntSerialDenseMatrix.Tpo $(DEPDIR)/Epetra_IntSerialDenseMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' object='Epetra_IntSerialDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseMatrix.obj `if test -f '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntSerialDenseMatrix.cpp'; fi`

Epetra_IntSerialDenseVector.o: $(srcdir)/Epetra_IntSerialDenseVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntSerialDenseVector.o -MD -MP -MF $(DEPDIR)/Epetra_IntSerialDenseVector.Tpo -c -o Epetra_IntSerialDenseVector.o `test -f '$(srcdir)/Epetra_IntSerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntSerialDenseVector.Tpo $(DEPDIR)/Epetra_IntSerialDenseVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntSerialDenseVector.cpp' object='Epetra_IntSerialDenseVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseVector.o `test -f '$(srcdir)/Epetra_IntSerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseVector.cpp

Epetra_IntSerialDenseVector.obj: $(srcdir)/Epetra_IntSerialDenseVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntSerialDenseVector.obj -MD -MP -MF $(DEPDIR)/Epetra_IntSerialDenseVector.Tpo -c -o Epetra_IntSerialDenseVector.obj `if test -f '$(srcdir)/Epetra_IntSerialDenseVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntSerialDenseVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntSerialDenseVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntSerialDenseVector.Tpo $(DEPDIR)/Epetra_IntSerialDenseVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntSerialDenseVector.cpp' object='Epetra_IntSerialDenseVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseVector.obj `if test -f '$(srcdir)/Epetra_IntSerialDenseVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntSerialDenseVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntSerialDenseVector.cpp'; fi`

Epetra_SerialComm.o: $(srcdir)/Epetra_SerialComm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialComm.o -MD -MP -MF $(DEPDIR)/Epetra_SerialComm.Tpo -c -o Epetra_SerialComm.o `test -f '$(srcdir)/Epetra_SerialComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialComm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialComm.Tpo $(DEPDIR)/Epetra_SerialComm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialComm.cpp' object='Epetra_SerialComm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialComm.o `test -f '$(srcdir)/Epetra_SerialComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialComm.cpp

Epetra_SerialComm.obj: $(srcdir)/Epetra_SerialComm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialComm.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialComm.Tpo -c -o Epetra_SerialComm.obj `if test -f '$(srcdir)/Epetra_SerialComm.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialComm.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialComm.Tpo $(DEPDIR)/Epetra_SerialComm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialComm.cpp' object='Epetra_SerialComm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialComm.obj `if test -f '$(srcdir)/Epetra_SerialComm.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialComm.cpp'; fi`

Epetra_SerialCommData.o: $(srcdir)/Epetra_SerialCommData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialCommData.o -MD -MP -MF $(DEPDIR)/Epetra_SerialCommData.Tpo -c -o Epetra_SerialCommData.o `test -f '$(srcdir)/Epetra_SerialCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialCommData.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialCommData.Tpo $(DEPDIR)/Epetra_SerialCommData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialCommData.cpp' object='Epetra_SerialCommData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialCommData.o `test -f '$(srcdir)/Epetra_SerialCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialCommData.cpp

Epetra_SerialCommData.obj: $(srcdir)/Epetra_SerialCommData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialCommData.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialCommData.Tpo -c -o Epetra_SerialCommData.obj `if test -f '$(srcdir)/Epetra_SerialCommData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialCommData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialCommData.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialCommData.Tpo $(DEPDIR)/Epetra_SerialCommData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialCommData.cpp' object='Epetra_SerialCommData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialCommData.obj `if test -f '$(srcdir)/Epetra_SerialCommData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialCommData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialCommData.cpp'; fi`

Epetra_SerialDistributor.o: $(srcdir)/Epetra_SerialDistributor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDistributor.o -MD -MP -MF $(DEPDIR)/Epetra_SerialDistributor.Tpo -c -o Epetra_SerialDistributor.o `test -f '$(srcdir)/Epetra_SerialDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDistributor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDistributor.Tpo $(DEPDIR)/Epetra_SerialDistributor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDistributor.cpp' object='Epetra_SerialDistributor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDistributor.o `test -f '$(srcdir)/Epetra_SerialDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDistributor.cpp

Epetra_SerialDistributor.obj: $(srcdir)/Epetra_SerialDistributor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_SerialDistributor.obj -MD -MP -MF $(DEPDIR)/Epetra_SerialDistributor.Tpo -c -o Epetra_SerialDistributor.obj `if test -f '$(srcdir)/Epetra_SerialDistributor.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDistributor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDistributor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_SerialDistributor.Tpo $(DEPDIR)/Epetra_SerialDistributor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_SerialDistributor.cpp' object='Epetra_SerialDistributor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDistributor.obj `if test -f '$(srcdir)/Epetra_SerialDistributor.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_SerialDistributor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_SerialDistributor.cpp'; fi`

Epetra_BasicDirectory.o: $(srcdir)/Epetra_BasicDirectory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BasicDirectory.o -MD -MP -MF $(DEPDIR)/Epetra_BasicDirectory.Tpo -c -o Epetra_BasicDirectory.o `test -f '$(srcdir)/Epetra_BasicDirectory.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BasicDirectory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BasicDirectory.Tpo $(DEPDIR)/Epetra_BasicDirectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BasicDirectory.cpp' object='Epetra_BasicDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicDirectory.o `test -f '$(srcdir)/Epetra_BasicDirectory.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BasicDirectory.cpp

Epetra_BasicDirectory.obj: $(srcdir)/Epetra_BasicDirectory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BasicDirectory.obj -MD -MP -MF $(DEPDIR)/Epetra_BasicDirectory.Tpo -c -o Epetra_BasicDirectory.obj `if test -f '$(srcdir)/Epetra_BasicDirectory.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BasicDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BasicDirectory.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BasicDirectory.Tpo $(DEPDIR)/Epetra_BasicDirectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BasicDirectory.cpp' object='Epetra_BasicDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicDirectory.obj `if test -f '$(srcdir)/Epetra_BasicDirectory.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BasicDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BasicDirectory.cpp'; fi`

Epetra_BlockMap.o: $(srcdir)/Epetra_BlockMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BlockMap.o -MD -MP -MF $(DEPDIR)/Epetra_BlockMap.Tpo -c -o Epetra_BlockMap.o `test -f '$(srcdir)/Epetra_BlockMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMap.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BlockMap.Tpo $(DEPDIR)/Epetra_BlockMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BlockMap.cpp' object='Epetra_BlockMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMap.o `test -f '$(srcdir)/Epetra_BlockMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMap.cpp

Epetra_BlockMap.obj: $(srcdir)/Epetra_BlockMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BlockMap.obj -MD -MP -MF $(DEPDIR)/Epetra_BlockMap.Tpo -c -o Epetra_BlockMap.obj `if test -f '$(srcdir)/Epetra_BlockMap.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BlockMap.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BlockMap.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BlockMap.Tpo $(DEPDIR)/Epetra_BlockMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BlockMap.cpp' object='Epetra_BlockMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMap.obj `if test -f '$(srcdir)/Epetra_BlockMap.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BlockMap.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BlockMap.cpp'; fi`

Epetra_BlockMapData.o: $(srcdir)/Epetra_BlockMapData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BlockMapData.o -MD -MP -MF $(DEPDIR)/Epetra_BlockMapData.Tpo -c -o Epetra_BlockMapData.o `test -f '$(srcdir)/Epetra_BlockMapData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMapData.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BlockMapData.Tpo $(DEPDIR)/Epetra_BlockMapData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BlockMapData.cpp' object='Epetra_BlockMapData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMapData.o `test -f '$(srcdir)/Epetra_BlockMapData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMapData.cpp

Epetra_BlockMapData.obj: $(srcdir)/Epetra_BlockMapData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BlockMapData.obj -MD -MP -MF $(DEPDIR)/Epetra_BlockMapData.Tpo -c -o Epetra_BlockMapData.obj `if test -f '$(srcdir)/Epetra_BlockMapData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BlockMapData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BlockMapData.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BlockMapData.Tpo $(DEPDIR)/Epetra_BlockMapData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BlockMapData.cpp' object='Epetra_BlockMapData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMapData.obj `if test -f '$(srcdir)/Epetra_BlockMapData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BlockMapData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BlockMapData.cpp'; fi`

Epetra_DistObject.o: $(srcdir)/Epetra_DistObject.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_DistObject.o -MD -MP -MF $(DEPDIR)/Epetra_DistObject.Tpo -c -o Epetra_DistObject.o `test -f '$(srcdir)/Epetra_DistObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_DistObject.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_DistObject.Tpo $(DEPDIR)/Epetra_DistObject.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_DistObject.cpp' object='Epetra_DistObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DistObject.o `test -f '$(srcdir)/Epetra_DistObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_DistObject.cpp

Epetra_DistObject.obj: $(srcdir)/Epetra_DistObject.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_DistObject.obj -MD -MP -MF $(DEPDIR)/Epetra_DistObject.Tpo -c -o Epetra_DistObject.obj `if test -f '$(srcdir)/Epetra_DistObject.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_DistObject.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_DistObject.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_DistObject.Tpo $(DEPDIR)/Epetra_DistObject.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_DistObject.cpp' object='Epetra_DistObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DistObject.obj `if test -f '$(srcdir)/Epetra_DistObject.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_DistObject.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_DistObject.cpp'; fi`

Epetra_Export.o: $(srcdir)/Epetra_Export.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Export.o -MD -MP -MF $(DEPDIR)/Epetra_Export.Tpo -c -o Epetra_Export.o `test -f '$(srcdir)/Epetra_Export.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Export.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Export.Tpo $(DEPDIR)/Epetra_Export.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Export.cpp' object='Epetra_Export.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Export.o `test -f '$(srcdir)/Epetra_Export.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Export.cpp

Epetra_Export.obj: $(srcdir)/Epetra_Export.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Export.obj -MD -MP -MF $(DEPDIR)/Epetra_Export.Tpo -c -o Epetra_Export.obj `if test -f '$(srcdir)/Epetra_Export.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Export.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Export.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Export.Tpo $(DEPDIR)/Epetra_Export.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Export.cpp' object='Epetra_Export.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Export.obj `if test -f '$(srcdir)/Epetra_Export.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Export.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Export.cpp'; fi`

Epetra_Import.o: $(srcdir)/Epetra_Import.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Import.o -MD -MP -MF $(DEPDIR)/Epetra_Import.Tpo -c -o Epetra_Import.o `test -f '$(srcdir)/Epetra_Import.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Import.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Import.Tpo $(DEPDIR)/Epetra_Import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Import.cpp' object='Epetra_Import.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Import.o `test -f '$(srcdir)/Epetra_Import.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Import.cpp

Epetra_Import.obj: $(srcdir)/Epetra_Import.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Import.obj -MD -MP -MF $(DEPDIR)/Epetra_Import.Tpo -c -o Epetra_Import.obj `if test -f '$(srcdir)/Epetra_Import.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Import.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Import.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Import.Tpo $(DEPDIR)/Epetra_Import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Import.cpp' object='Epetra_Import.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Import.obj `if test -f '$(srcdir)/Epetra_Import.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Import.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Import.cpp'; fi`

Epetra_LocalMap.o: $(srcdir)/Epetra_LocalMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LocalMap.o -MD -MP -MF $(DEPDIR)/Epetra_LocalMap.Tpo -c -o Epetra_LocalMap.o `test -f '$(srcdir)/Epetra_LocalMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LocalMap.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LocalMap.Tpo $(DEPDIR)/Epetra_LocalMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LocalMap.cpp' object='Epetra_LocalMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LocalMap.o `test -f '$(srcdir)/Epetra_LocalMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LocalMap.cpp

Epetra_LocalMap.obj: $(srcdir)/Epetra_LocalMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LocalMap.obj -MD -MP -MF $(DEPDIR)/Epetra_LocalMap.Tpo -c -o Epetra_LocalMap.obj `if test -f '$(srcdir)/Epetra_LocalMap.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LocalMap.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LocalMap.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LocalMap.Tpo $(DEPDIR)/Epetra_LocalMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LocalMap.cpp' object='Epetra_LocalMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LocalMap.obj `if test -f '$(srcdir)/Epetra_LocalMap.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LocalMap.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LocalMap.cpp'; fi`

Epetra_Map.o: $(srcdir)/Epetra_Map.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Map.o -MD -MP -MF $(DEPDIR)/Epetra_Map.Tpo -c -o Epetra_Map.o `test -f '$(srcdir)/Epetra_Map.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Map.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Map.Tpo $(DEPDIR)/Epetra_Map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Map.cpp' object='Epetra_Map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Map.o `test -f '$(srcdir)/Epetra_Map.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Map.cpp

Epetra_Map.obj: $(srcdir)/Epetra_Map.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Map.obj -MD -MP -MF $(DEPDIR)/Epetra_Map.Tpo -c -o Epetra_Map.obj `if test -f '$(srcdir)/Epetra_Map.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Map.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Map.Tpo $(DEPDIR)/Epetra_Map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Map.cpp' object='Epetra_Map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Map.obj `if test -f '$(srcdir)/Epetra_Map.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Map.cpp'; fi`

Epetra_MapColoring.o: $(srcdir)/Epetra_MapColoring.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MapColoring.o -MD -MP -MF $(DEPDIR)/Epetra_MapColoring.Tpo -c -o Epetra_MapColoring.o `test -f '$(srcdir)/Epetra_MapColoring.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MapColoring.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MapColoring.Tpo $(DEPDIR)/Epetra_MapColoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MapColoring.cpp' object='Epetra_MapColoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MapColoring.o `test -f '$(srcdir)/Epetra_MapColoring.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MapColoring.cpp

Epetra_MapColoring.obj: $(srcdir)/Epetra_MapColoring.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MapColoring.obj -MD -MP -MF $(DEPDIR)/Epetra_MapColoring.Tpo -c -o Epetra_MapColoring.obj `if test -f '$(srcdir)/Epetra_MapColoring.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MapColoring.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MapColoring.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MapColoring.Tpo $(DEPDIR)/Epetra_MapColoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MapColoring.cpp' object='Epetra_MapColoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MapColoring.obj `if test -f '$(srcdir)/Epetra_MapColoring.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MapColoring.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MapColoring.cpp'; fi`

Epetra_OffsetIndex.o: $(srcdir)/Epetra_OffsetIndex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OffsetIndex.o -MD -MP -MF $(DEPDIR)/Epetra_OffsetIndex.Tpo -c -o Epetra_OffsetIndex.o `test -f '$(srcdir)/Epetra_OffsetIndex.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OffsetIndex.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OffsetIndex.Tpo $(DEPDIR)/Epetra_OffsetIndex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OffsetIndex.cpp' object='Epetra_OffsetIndex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OffsetIndex.o `test -f '$(srcdir)/Epetra_OffsetIndex.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OffsetIndex.cpp

Epetra_OffsetIndex.obj: $(srcdir)/Epetra_OffsetIndex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OffsetIndex.obj -MD -MP -MF $(DEPDIR)/Epetra_OffsetIndex.Tpo -c -o Epetra_OffsetIndex.obj `if test -f '$(srcdir)/Epetra_OffsetIndex.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OffsetIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OffsetIndex.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OffsetIndex.Tpo $(DEPDIR)/Epetra_OffsetIndex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OffsetIndex.cpp' object='Epetra_OffsetIndex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OffsetIndex.obj `if test -f '$(srcdir)/Epetra_OffsetIndex.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OffsetIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OffsetIndex.cpp'; fi`

Epetra_CompObject.o: $(srcdir)/Epetra_CompObject.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CompObject.o -MD -MP -MF $(DEPDIR)/Epetra_CompObject.Tpo -c -o Epetra_CompObject.o `test -f '$(srcdir)/Epetra_CompObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CompObject.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CompObject.Tpo $(DEPDIR)/Epetra_CompObject.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CompObject.cpp' object='Epetra_CompObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CompObject.o `test -f '$(srcdir)/Epetra_CompObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CompObject.cpp

Epetra_CompObject.obj: $(srcdir)/Epetra_CompObject.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CompObject.obj -MD -MP -MF $(DEPDIR)/Epetra_CompObject.Tpo -c -o Epetra_CompObject.obj `if test -f '$(srcdir)/Epetra_CompObject.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CompObject.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CompObject.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CompObject.Tpo $(DEPDIR)/Epetra_CompObject.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CompObject.cpp' object='Epetra_CompObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CompObject.obj `if test -f '$(srcdir)/Epetra_CompObject.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CompObject.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CompObject.cpp'; fi`

Epetra_CrsGraph.o: $(srcdir)/Epetra_CrsGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsGraph.o -MD -MP -MF $(DEPDIR)/Epetra_CrsGraph.Tpo -c -o Epetra_CrsGraph.o `test -f '$(srcdir)/Epetra_CrsGraph.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsGraph.Tpo $(DEPDIR)/Epetra_CrsGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsGraph.cpp' object='Epetra_CrsGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraph.o `test -f '$(srcdir)/Epetra_CrsGraph.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraph.cpp

Epetra_CrsGraph.obj: $(srcdir)/Epetra_CrsGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsGraph.obj -MD -MP -MF $(DEPDIR)/Epetra_CrsGraph.Tpo -c -o Epetra_CrsGraph.obj `if test -f '$(srcdir)/Epetra_CrsGraph.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsGraph.Tpo $(DEPDIR)/Epetra_CrsGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsGraph.cpp' object='Epetra_CrsGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraph.obj `if test -f '$(srcdir)/Epetra_CrsGraph.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsGraph.cpp'; fi`

Epetra_CrsGraphData.o: $(srcdir)/Epetra_CrsGraphData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsGraphData.o -MD -MP -MF $(DEPDIR)/Epetra_CrsGraphData.Tpo -c -o Epetra_CrsGraphData.o `test -f '$(srcdir)/Epetra_CrsGraphData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraphData.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsGraphData.Tpo $(DEPDIR)/Epetra_CrsGraphData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsGraphData.cpp' object='Epetra_CrsGraphData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraphData.o `test -f '$(srcdir)/Epetra_CrsGraphData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraphData.cpp

Epetra_CrsGraphData.obj: $(srcdir)/Epetra_CrsGraphData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsGraphData.obj -MD -MP -MF $(DEPDIR)/Epetra_CrsGraphData.Tpo -c -o Epetra_CrsGraphData.obj `if test -f '$(srcdir)/Epetra_CrsGraphData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsGraphData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsGraphData.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsGraphData.Tpo $(DEPDIR)/Epetra_CrsGraphData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsGraphData.cpp' object='Epetra_CrsGraphData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraphData.obj `if test -f '$(srcdir)/Epetra_CrsGraphData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsGraphData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsGraphData.cpp'; fi`

Epetra_CrsMatrix.o: $(srcdir)/Epetra_CrsMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_CrsMatrix.Tpo -c -o Epetra_CrsMatrix.o `test -f '$(srcdir)/Epetra_CrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsMatrix.Tpo $(DEPDIR)/Epetra_CrsMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsMatrix.cpp' object='Epetra_CrsMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsMatrix.o `test -f '$(srcdir)/Epetra_CrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsMatrix.cpp

Epetra_CrsMatrix.obj: $(srcdir)/Epetra_CrsMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_CrsMatrix.Tpo -c -o Epetra_CrsMatrix.obj `if test -f '$(srcdir)/Epetra_CrsMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsMatrix.Tpo $(DEPDIR)/Epetra_CrsMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsMatrix.cpp' object='Epetra_CrsMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsMatrix.obj `if test -f '$(srcdir)/Epetra_CrsMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsMatrix.cpp'; fi`

Epetra_LinearProblem.o: $(srcdir)/Epetra_LinearProblem.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LinearProblem.o -MD -MP -MF $(DEPDIR)/Epetra_LinearProblem.Tpo -c -o Epetra_LinearProblem.o `test -f '$(srcdir)/Epetra_LinearProblem.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LinearProblem.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LinearProblem.Tpo $(DEPDIR)/Epetra_LinearProblem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LinearProblem.cpp' object='Epetra_LinearProblem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearProblem.o `test -f '$(srcdir)/Epetra_LinearProblem.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LinearProblem.cpp

Epetra_LinearProblem.obj: $(srcdir)/Epetra_LinearProblem.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LinearProblem.obj -MD -MP -MF $(DEPDIR)/Epetra_LinearProblem.Tpo -c -o Epetra_LinearProblem.obj `if test -f '$(srcdir)/Epetra_LinearProblem.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LinearProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LinearProblem.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_LinearProblem.Tpo $(DEPDIR)/Epetra_LinearProblem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_LinearProblem.cpp' object='Epetra_LinearProblem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearProblem.obj `if test -f '$(srcdir)/Epetra_LinearProblem.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_LinearProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_LinearProblem.cpp'; fi`

Epetra_MultiVector.o: $(srcdir)/Epetra_MultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MultiVector.o -MD -MP -MF $(DEPDIR)/Epetra_MultiVector.Tpo -c -o Epetra_MultiVector.o `test -f '$(srcdir)/Epetra_MultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MultiVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MultiVector.Tpo $(DEPDIR)/Epetra_MultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MultiVector.cpp' object='Epetra_MultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MultiVector.o `test -f '$(srcdir)/Epetra_MultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MultiVector.cpp

Epetra_MultiVector.obj: $(srcdir)/Epetra_MultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MultiVector.obj -MD -MP -MF $(DEPDIR)/Epetra_MultiVector.Tpo -c -o Epetra_MultiVector.obj `if test -f '$(srcdir)/Epetra_MultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MultiVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MultiVector.Tpo $(DEPDIR)/Epetra_MultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MultiVector.cpp' object='Epetra_MultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MultiVector.obj `if test -f '$(srcdir)/Epetra_MultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MultiVector.cpp'; fi`

Epetra_VbrMatrix.o: $(srcdir)/Epetra_VbrMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_VbrMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_VbrMatrix.Tpo -c -o Epetra_VbrMatrix.o `test -f '$(srcdir)/Epetra_VbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_VbrMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_VbrMatrix.Tpo $(DEPDIR)/Epetra_VbrMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_VbrMatrix.cpp' object='Epetra_VbrMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_VbrMatrix.o `test -f '$(srcdir)/Epetra_VbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_VbrMatrix.cpp

Epetra_VbrMatrix.obj: $(srcdir)/Epetra_VbrMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_VbrMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_VbrMatrix.Tpo -c -o Epetra_VbrMatrix.obj `if test -f '$(srcdir)/Epetra_VbrMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_VbrMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_VbrMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_VbrMatrix.Tpo $(DEPDIR)/Epetra_VbrMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_VbrMatrix.cpp' object='Epetra_VbrMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_VbrMatrix.obj `if test -f '$(srcdir)/Epetra_VbrMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_VbrMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_VbrMatrix.cpp'; fi`

Epetra_Vector.o: $(srcdir)/Epetra_Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Vector.o -MD -MP -MF $(DEPDIR)/Epetra_Vector.Tpo -c -o Epetra_Vector.o `test -f '$(srcdir)/Epetra_Vector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Vector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Vector.Tpo $(DEPDIR)/Epetra_Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Vector.cpp' object='Epetra_Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Vector.o `test -f '$(srcdir)/Epetra_Vector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Vector.cpp

Epetra_Vector.obj: $(srcdir)/Epetra_Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_Vector.obj -MD -MP -MF $(DEPDIR)/Epetra_Vector.Tpo -c -o Epetra_Vector.obj `if test -f '$(srcdir)/Epetra_Vector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Vector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_Vector.Tpo $(DEPDIR)/Epetra_Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_Vector.cpp' object='Epetra_Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Vector.obj `if test -f '$(srcdir)/Epetra_Vector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_Vector.cpp'; fi`

Epetra_CrsSingletonFilter.o: $(srcdir)/Epetra_CrsSingletonFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsSingletonFilter.o -MD -MP -MF $(DEPDIR)/Epetra_CrsSingletonFilter.Tpo -c -o Epetra_CrsSingletonFilter.o `test -f '$(srcdir)/Epetra_CrsSingletonFilter.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsSingletonFilter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsSingletonFilter.Tpo $(DEPDIR)/Epetra_CrsSingletonFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsSingletonFilter.cpp' object='Epetra_CrsSingletonFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsSingletonFilter.o `test -f '$(srcdir)/Epetra_CrsSingletonFilter.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsSingletonFilter.cpp

Epetra_CrsSingletonFilter.obj: $(srcdir)/Epetra_CrsSingletonFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_CrsSingletonFilter.obj -MD -MP -MF $(DEPDIR)/Epetra_CrsSingletonFilter.Tpo -c -o Epetra_CrsSingletonFilter.obj `if test -f '$(srcdir)/Epetra_CrsSingletonFilter.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsSingletonFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsSingletonFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_CrsSingletonFilter.Tpo $(DEPDIR)/Epetra_CrsSingletonFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_CrsSingletonFilter.cpp' object='Epetra_CrsSingletonFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsSingletonFilter.obj `if test -f '$(srcdir)/Epetra_CrsSingletonFilter.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_CrsSingletonFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_CrsSingletonFilter.cpp'; fi`

Epetra_FECrsGraph.o: $(srcdir)/Epetra_FECrsGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FECrsGraph.o -MD -MP -MF $(DEPDIR)/Epetra_FECrsGraph.Tpo -c -o Epetra_FECrsGraph.o `test -f '$(srcdir)/Epetra_FECrsGraph.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FECrsGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FECrsGraph.Tpo $(DEPDIR)/Epetra_FECrsGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FECrsGraph.cpp' object='Epetra_FECrsGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsGraph.o `test -f '$(srcdir)/Epetra_FECrsGraph.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FECrsGraph.cpp

Epetra_FECrsGraph.obj: $(srcdir)/Epetra_FECrsGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FECrsGraph.obj -MD -MP -MF $(DEPDIR)/Epetra_FECrsGraph.Tpo -c -o Epetra_FECrsGraph.obj `if test -f '$(srcdir)/Epetra_FECrsGraph.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FECrsGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FECrsGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FECrsGraph.Tpo $(DEPDIR)/Epetra_FECrsGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FECrsGraph.cpp' object='Epetra_FECrsGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsGraph.obj `if test -f '$(srcdir)/Epetra_FECrsGraph.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FECrsGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FECrsGraph.cpp'; fi`

Epetra_FECrsMatrix.o: $(srcdir)/Epetra_FECrsMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FECrsMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_FECrsMatrix.Tpo -c -o Epetra_FECrsMatrix.o `test -f '$(srcdir)/Epetra_FECrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FECrsMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FECrsMatrix.Tpo $(DEPDIR)/Epetra_FECrsMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FECrsMatrix.cpp' object='Epetra_FECrsMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsMatrix.o `test -f '$(srcdir)/Epetra_FECrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FECrsMatrix.cpp

Epetra_FECrsMatrix.obj: $(srcdir)/Epetra_FECrsMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FECrsMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_FECrsMatrix.Tpo -c -o Epetra_FECrsMatrix.obj `if test -f '$(srcdir)/Epetra_FECrsMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FECrsMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FECrsMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FECrsMatrix.Tpo $(DEPDIR)/Epetra_FECrsMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FECrsMatrix.cpp' object='Epetra_FECrsMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsMatrix.obj `if test -f '$(srcdir)/Epetra_FECrsMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FECrsMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FECrsMatrix.cpp'; fi`

Epetra_FEVbrMatrix.o: $(srcdir)/Epetra_FEVbrMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FEVbrMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_FEVbrMatrix.Tpo -c -o Epetra_FEVbrMatrix.o `test -f '$(srcdir)/Epetra_FEVbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVbrMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FEVbrMatrix.Tpo $(DEPDIR)/Epetra_FEVbrMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FEVbrMatrix.cpp' object='Epetra_FEVbrMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVbrMatrix.o `test -f '$(srcdir)/Epetra_FEVbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVbrMatrix.cpp

Epetra_FEVbrMatrix.obj: $(srcdir)/Epetra_FEVbrMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FEVbrMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_FEVbrMatrix.Tpo -c -o Epetra_FEVbrMatrix.obj `if test -f '$(srcdir)/Epetra_FEVbrMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FEVbrMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FEVbrMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FEVbrMatrix.Tpo $(DEPDIR)/Epetra_FEVbrMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FEVbrMatrix.cpp' object='Epetra_FEVbrMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVbrMatrix.obj `if test -f '$(srcdir)/Epetra_FEVbrMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FEVbrMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FEVbrMatrix.cpp'; fi`

Epetra_FEVector.o: $(srcdir)/Epetra_FEVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FEVector.o -MD -MP -MF $(DEPDIR)/Epetra_FEVector.Tpo -c -o Epetra_FEVector.o `test -f '$(srcdir)/Epetra_FEVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FEVector.Tpo $(DEPDIR)/Epetra_FEVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FEVector.cpp' object='Epetra_FEVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVector.o `test -f '$(srcdir)/Epetra_FEVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVector.cpp

Epetra_FEVector.obj: $(srcdir)/Epetra_FEVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_FEVector.obj -MD -MP -MF $(DEPDIR)/Epetra_FEVector.Tpo -c -o Epetra_FEVector.obj `if test -f '$(srcdir)/Epetra_FEVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FEVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FEVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_FEVector.Tpo $(DEPDIR)/Epetra_FEVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_FEVector.cpp' object='Epetra_FEVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVector.obj `if test -f '$(srcdir)/Epetra_FEVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_FEVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_FEVector.cpp'; fi`

Epetra_IntVector.o: $(srcdir)/Epetra_IntVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntVector.o -MD -MP -MF $(DEPDIR)/Epetra_IntVector.Tpo -c -o Epetra_IntVector.o `test -f '$(srcdir)/Epetra_IntVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntVector.Tpo $(DEPDIR)/Epetra_IntVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntVector.cpp' object='Epetra_IntVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntVector.o `test -f '$(srcdir)/Epetra_IntVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntVector.cpp

Epetra_IntVector.obj: $(srcdir)/Epetra_IntVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_IntVector.obj -MD -MP -MF $(DEPDIR)/Epetra_IntVector.Tpo -c -o Epetra_IntVector.obj `if test -f '$(srcdir)/Epetra_IntVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_IntVector.Tpo $(DEPDIR)/Epetra_IntVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_IntVector.cpp' object='Epetra_IntVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntVector.obj `if test -f '$(srcdir)/Epetra_IntVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_IntVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_IntVector.cpp'; fi`

Epetra_BasicRowMatrix.o: $(srcdir)/Epetra_BasicRowMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BasicRowMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_BasicRowMatrix.Tpo -c -o Epetra_BasicRowMatrix.o `test -f '$(srcdir)/Epetra_BasicRowMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BasicRowMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BasicRowMatrix.Tpo $(DEPDIR)/Epetra_BasicRowMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BasicRowMatrix.cpp' object='Epetra_BasicRowMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicRowMatrix.o `test -f '$(srcdir)/Epetra_BasicRowMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BasicRowMatrix.cpp

Epetra_BasicRowMatrix.obj: $(srcdir)/Epetra_BasicRowMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_BasicRowMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_BasicRowMatrix.Tpo -c -o Epetra_BasicRowMatrix.obj `if test -f '$(srcdir)/Epetra_BasicRowMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BasicRowMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BasicRowMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_BasicRowMatrix.Tpo $(DEPDIR)/Epetra_BasicRowMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_BasicRowMatrix.cpp' object='Epetra_BasicRowMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicRowMatrix.obj `if test -f '$(srcdir)/Epetra_BasicRowMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_BasicRowMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_BasicRowMatrix.cpp'; fi`

Epetra_JadMatrix.o: $(srcdir)/Epetra_JadMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_JadMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_JadMatrix.Tpo -c -o Epetra_JadMatrix.o `test -f '$(srcdir)/Epetra_JadMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_JadMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_JadMatrix.Tpo $(DEPDIR)/Epetra_JadMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_JadMatrix.cpp' object='Epetra_JadMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_JadMatrix.o `test -f '$(srcdir)/Epetra_JadMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_JadMatrix.cpp

Epetra_JadMatrix.obj: $(srcdir)/Epetra_JadMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_JadMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_JadMatrix.Tpo -c -o Epetra_JadMatrix.obj `if test -f '$(srcdir)/Epetra_JadMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_JadMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_JadMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_JadMatrix.Tpo $(DEPDIR)/Epetra_JadMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_JadMatrix.cpp' object='Epetra_JadMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_JadMatrix.obj `if test -f '$(srcdir)/Epetra_JadMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_JadMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_JadMatrix.cpp'; fi`

Epetra_MpiComm.o: $(srcdir)/Epetra_MpiComm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiComm.o -MD -MP -MF $(DEPDIR)/Epetra_MpiComm.Tpo -c -o Epetra_MpiComm.o `test -f '$(srcdir)/Epetra_MpiComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiComm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiComm.Tpo $(DEPDIR)/Epetra_MpiComm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiComm.cpp' object='Epetra_MpiComm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiComm.o `test -f '$(srcdir)/Epetra_MpiComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiComm.cpp

Epetra_MpiComm.obj: $(srcdir)/Epetra_MpiComm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiComm.obj -MD -MP -MF $(DEPDIR)/Epetra_MpiComm.Tpo -c -o Epetra_MpiComm.obj `if test -f '$(srcdir)/Epetra_MpiComm.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiComm.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiComm.Tpo $(DEPDIR)/Epetra_MpiComm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiComm.cpp' object='Epetra_MpiComm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiComm.obj `if test -f '$(srcdir)/Epetra_MpiComm.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiComm.cpp'; fi`

Epetra_MpiCommData.o: $(srcdir)/Epetra_MpiCommData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiCommData.o -MD -MP -MF $(DEPDIR)/Epetra_MpiCommData.Tpo -c -o Epetra_MpiCommData.o `test -f '$(srcdir)/Epetra_MpiCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiCommData.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiCommData.Tpo $(DEPDIR)/Epetra_MpiCommData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiCommData.cpp' object='Epetra_MpiCommData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiCommData.o `test -f '$(srcdir)/Epetra_MpiCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiCommData.cpp

Epetra_MpiCommData.obj: $(srcdir)/Epetra_MpiCommData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiCommData.obj -MD -MP -MF $(DEPDIR)/Epetra_MpiCommData.Tpo -c -o Epetra_MpiCommData.obj `if test -f '$(srcdir)/Epetra_MpiCommData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiCommData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiCommData.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiCommData.Tpo $(DEPDIR)/Epetra_MpiCommData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiCommData.cpp' object='Epetra_MpiCommData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiCommData.obj `if test -f '$(srcdir)/Epetra_MpiCommData.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiCommData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiCommData.cpp'; fi`

Epetra_MpiDistributor.o: $(srcdir)/Epetra_MpiDistributor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiDistributor.o -MD -MP -MF $(DEPDIR)/Epetra_MpiDistributor.Tpo -c -o Epetra_MpiDistributor.o `test -f '$(srcdir)/Epetra_MpiDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiDistributor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiDistributor.Tpo $(DEPDIR)/Epetra_MpiDistributor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiDistributor.cpp' object='Epetra_MpiDistributor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiDistributor.o `test -f '$(srcdir)/Epetra_MpiDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiDistributor.cpp

Epetra_MpiDistributor.obj: $(srcdir)/Epetra_MpiDistributor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_MpiDistributor.obj -MD -MP -MF $(DEPDIR)/Epetra_MpiDistributor.Tpo -c -o Epetra_MpiDistributor.obj `if test -f '$(srcdir)/Epetra_MpiDistributor.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiDistributor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiDistributor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_MpiDistributor.Tpo $(DEPDIR)/Epetra_MpiDistributor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_MpiDistributor.cpp' object='Epetra_MpiDistributor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiDistributor.obj `if test -f '$(srcdir)/Epetra_MpiDistributor.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_MpiDistributor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_MpiDistributor.cpp'; fi`

Epetra_OskiUtils.o: $(srcdir)/Epetra_OskiUtils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiUtils.o -MD -MP -MF $(DEPDIR)/Epetra_OskiUtils.Tpo -c -o Epetra_OskiUtils.o `test -f '$(srcdir)/Epetra_OskiUtils.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiUtils.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiUtils.Tpo $(DEPDIR)/Epetra_OskiUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiUtils.cpp' object='Epetra_OskiUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiUtils.o `test -f '$(srcdir)/Epetra_OskiUtils.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiUtils.cpp

Epetra_OskiUtils.obj: $(srcdir)/Epetra_OskiUtils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiUtils.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiUtils.Tpo -c -o Epetra_OskiUtils.obj `if test -f '$(srcdir)/Epetra_OskiUtils.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiUtils.Tpo $(DEPDIR)/Epetra_OskiUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiUtils.cpp' object='Epetra_OskiUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiUtils.obj `if test -f '$(srcdir)/Epetra_OskiUtils.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiUtils.cpp'; fi`

Epetra_OskiMultiVector.o: $(srcdir)/Epetra_OskiMultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiMultiVector.o -MD -MP -MF $(DEPDIR)/Epetra_OskiMultiVector.Tpo -c -o Epetra_OskiMultiVector.o `test -f '$(srcdir)/Epetra_OskiMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiMultiVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiMultiVector.Tpo $(DEPDIR)/Epetra_OskiMultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiMultiVector.cpp' object='Epetra_OskiMultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiMultiVector.o `test -f '$(srcdir)/Epetra_OskiMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiMultiVector.cpp

Epetra_OskiMultiVector.obj: $(srcdir)/Epetra_OskiMultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiMultiVector.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiMultiVector.Tpo -c -o Epetra_OskiMultiVector.obj `if test -f '$(srcdir)/Epetra_OskiMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiMultiVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiMultiVector.Tpo $(DEPDIR)/Epetra_OskiMultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiMultiVector.cpp' object='Epetra_OskiMultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiMultiVector.obj `if test -f '$(srcdir)/Epetra_OskiMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiMultiVector.cpp'; fi`

Epetra_OskiVector.o: $(srcdir)/Epetra_OskiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiVector.o -MD -MP -MF $(DEPDIR)/Epetra_OskiVector.Tpo -c -o Epetra_OskiVector.o `test -f '$(srcdir)/Epetra_OskiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiVector.Tpo $(DEPDIR)/Epetra_OskiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiVector.cpp' object='Epetra_OskiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiVector.o `test -f '$(srcdir)/Epetra_OskiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiVector.cpp

Epetra_OskiVector.obj: $(srcdir)/Epetra_OskiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiVector.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiVector.Tpo -c -o Epetra_OskiVector.obj `if test -f '$(srcdir)/Epetra_OskiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiVector.Tpo $(DEPDIR)/Epetra_OskiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiVector.cpp' object='Epetra_OskiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiVector.obj `if test -f '$(srcdir)/Epetra_OskiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiVector.cpp'; fi`

Epetra_OskiError.o: $(srcdir)/Epetra_OskiError.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiError.o -MD -MP -MF $(DEPDIR)/Epetra_OskiError.Tpo -c -o Epetra_OskiError.o `test -f '$(srcdir)/Epetra_OskiError.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiError.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiError.Tpo $(DEPDIR)/Epetra_OskiError.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiError.cpp' object='Epetra_OskiError.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiError.o `test -f '$(srcdir)/Epetra_OskiError.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiError.cpp

Epetra_OskiError.obj: $(srcdir)/Epetra_OskiError.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiError.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiError.Tpo -c -o Epetra_OskiError.obj `if test -f '$(srcdir)/Epetra_OskiError.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiError.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiError.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiError.Tpo $(DEPDIR)/Epetra_OskiError.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiError.cpp' object='Epetra_OskiError.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiError.obj `if test -f '$(srcdir)/Epetra_OskiError.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiError.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiError.cpp'; fi`

Epetra_OskiPermutation.o: $(srcdir)/Epetra_OskiPermutation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiPermutation.o -MD -MP -MF $(DEPDIR)/Epetra_OskiPermutation.Tpo -c -o Epetra_OskiPermutation.o `test -f '$(srcdir)/Epetra_OskiPermutation.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiPermutation.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiPermutation.Tpo $(DEPDIR)/Epetra_OskiPermutation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiPermutation.cpp' object='Epetra_OskiPermutation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiPermutation.o `test -f '$(srcdir)/Epetra_OskiPermutation.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiPermutation.cpp

Epetra_OskiPermutation.obj: $(srcdir)/Epetra_OskiPermutation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiPermutation.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiPermutation.Tpo -c -o Epetra_OskiPermutation.obj `if test -f '$(srcdir)/Epetra_OskiPermutation.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiPermutation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiPermutation.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiPermutation.Tpo $(DEPDIR)/Epetra_OskiPermutation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiPermutation.cpp' object='Epetra_OskiPermutation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiPermutation.obj `if test -f '$(srcdir)/Epetra_OskiPermutation.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiPermutation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiPermutation.cpp'; fi`

Epetra_OskiMatrix.o: $(srcdir)/Epetra_OskiMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiMatrix.o -MD -MP -MF $(DEPDIR)/Epetra_OskiMatrix.Tpo -c -o Epetra_OskiMatrix.o `test -f '$(srcdir)/Epetra_OskiMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiMatrix.Tpo $(DEPDIR)/Epetra_OskiMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiMatrix.cpp' object='Epetra_OskiMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiMatrix.o `test -f '$(srcdir)/Epetra_OskiMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_OskiMatrix.cpp

Epetra_OskiMatrix.obj: $(srcdir)/Epetra_OskiMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_OskiMatrix.obj -MD -MP -MF $(DEPDIR)/Epetra_OskiMatrix.Tpo -c -o Epetra_OskiMatrix.obj `if test -f '$(srcdir)/Epetra_OskiMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Epetra_OskiMatrix.Tpo $(DEPDIR)/Epetra_OskiMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra_OskiMatrix.cpp' object='Epetra_OskiMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_OskiMatrix.obj `if test -f '$(srcdir)/Epetra_OskiMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra_OskiMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_OskiMatrix.cpp'; fi`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Epetra_dcrsmv.o: $(srcdir)/Epetra_dcrsmv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrsmv.o `test -f '$(srcdir)/Epetra_dcrsmv.f' || echo '$(srcdir)/'`$(srcdir)/Epetra_dcrsmv.f

Epetra_dcrsmv.obj: $(srcdir)/Epetra_dcrsmv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrsmv.obj `if test -f '$(srcdir)/Epetra_dcrsmv.f'; then $(CYGPATH_W) '$(srcdir)/Epetra_dcrsmv.f'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_dcrsmv.f'; fi`

Epetra_dcrsmm.o: $(srcdir)/Epetra_dcrsmm.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrsmm.o `test -f '$(srcdir)/Epetra_dcrsmm.f' || echo '$(srcdir)/'`$(srcdir)/Epetra_dcrsmm.f

Epetra_dcrsmm.obj: $(srcdir)/Epetra_dcrsmm.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrsmm.obj `if test -f '$(srcdir)/Epetra_dcrsmm.f'; then $(CYGPATH_W) '$(srcdir)/Epetra_dcrsmm.f'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_dcrsmm.f'; fi`

Epetra_dcrssv.o: $(srcdir)/Epetra_dcrssv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrssv.o `test -f '$(srcdir)/Epetra_dcrssv.f' || echo '$(srcdir)/'`$(srcdir)/Epetra_dcrssv.f

Epetra_dcrssv.obj: $(srcdir)/Epetra_dcrssv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrssv.obj `if test -f '$(srcdir)/Epetra_dcrssv.f'; then $(CYGPATH_W) '$(srcdir)/Epetra_dcrssv.f'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_dcrssv.f'; fi`

Epetra_dcrssm.o: $(srcdir)/Epetra_dcrssm.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrssm.o `test -f '$(srcdir)/Epetra_dcrssm.f' || echo '$(srcdir)/'`$(srcdir)/Epetra_dcrssm.f

Epetra_dcrssm.obj: $(srcdir)/Epetra_dcrssm.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o Epetra_dcrssm.obj `if test -f '$(srcdir)/Epetra_dcrssm.f'; then $(CYGPATH_W) '$(srcdir)/Epetra_dcrssm.f'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra_dcrssm.f'; fi`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(execincludedir)" || $(MKDIR_P) "$(DESTDIR)$(execincludedir)"
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_execincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(execincludedir)/$$f'"; \
	  $(nodist_execincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(execincludedir)/$$f"; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(execincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(execincludedir)/$$f"; \
	done
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nodist_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) Epetra_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Epetra_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) Epetra_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Epetra_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) Epetra_config.h all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS install-nodist_includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES \
	install-nodist_execincludeHEADERS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS \
	uninstall-nodist_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS \
	uninstall-nodist_includeHEADERS


all-local:
	@echo ""
	@echo "Trilinos package epetra subdirectory src built successfully."
	@echo ""

include $(top_builddir)/Makefile.export.epetra
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
